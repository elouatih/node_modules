{"ast":null,"code":"const fs = require(\"fs\");\n\nexport default function defaultSettings(file, length) {\n  let defaultRes = [];\n  let res = new Promise(resolve => {\n    fs.readFile(file, 'utf8', (err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      resolve(data);\n    });\n  });\n  let lines = res.split('\\n');\n\n  for (let line = 1; line < lines.length; line++) {\n    let subResult = [];\n    let elements = lines[line].split(',');\n    subResult.push(elements[0]);\n    elements = elements.slice(1, length);\n\n    for (let i = 0; i < elements.length; i++) {\n      subResult.push(parseInt(elements[i]));\n    }\n\n    defaultRes.push(subResult);\n  }\n\n  console.log(defaultRes);\n  return defaultRes;\n}","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Interface/utils/defaultSettings.js"],"names":["fs","require","defaultSettings","file","length","defaultRes","res","Promise","resolve","readFile","err","data","console","error","lines","split","line","subResult","elements","push","slice","i","parseInt","log"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,eAAe,SAASC,eAAT,CAA0BC,IAA1B,EAAgCC,MAAhC,EAAwC;AACnD,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,GAAG,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC7BR,IAAAA,EAAE,CAACS,QAAH,CAAYN,IAAZ,EAAkB,MAAlB,EAA0B,CAACO,GAAD,EAAMC,IAAN,KAAe;AACrC,UAAID,GAAJ,EAAS;AACLE,QAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACA;AACH;;AACDF,MAAAA,OAAO,CAACG,IAAD,CAAP;AACH,KAND;AAOH,GARS,CAAV;AASA,MAAIG,KAAK,GAAGR,GAAG,CAACS,KAAJ,CAAU,IAAV,CAAZ;;AACA,OAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGF,KAAK,CAACV,MAAhC,EAAwCY,IAAI,EAA5C,EAAgD;AAC5C,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,QAAQ,GAAGJ,KAAK,CAACE,IAAD,CAAL,CAAYD,KAAZ,CAAkB,GAAlB,CAAf;AACAE,IAAAA,SAAS,CAACE,IAAV,CAAeD,QAAQ,CAAC,CAAD,CAAvB;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBhB,MAAlB,CAAX;;AACA,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACd,MAA7B,EAAqCiB,CAAC,EAAtC,EAA0C;AACtCJ,MAAAA,SAAS,CAACE,IAAV,CAAeG,QAAQ,CAACJ,QAAQ,CAACG,CAAD,CAAT,CAAvB;AACH;;AACDhB,IAAAA,UAAU,CAACc,IAAX,CAAgBF,SAAhB;AACH;;AACDL,EAAAA,OAAO,CAACW,GAAR,CAAYlB,UAAZ;AACA,SAAOA,UAAP;AACH","sourcesContent":["const fs = require(\"fs\");\n\nexport default function defaultSettings (file, length) {\n    let defaultRes = [];\n    let res = new Promise(resolve => {\n        fs.readFile(file, 'utf8', (err, data) => {\n            if (err) {\n                console.error(err);\n                return\n            }\n            resolve(data)\n        })\n    });\n    let lines = res.split('\\n');\n    for (let line = 1; line < lines.length; line++) {\n        let subResult = [];\n        let elements = lines[line].split(',');\n        subResult.push(elements[0]);\n        elements = elements.slice(1, length);\n        for (let i = 0; i < elements.length; i++) {\n            subResult.push(parseInt(elements[i]));\n        }\n        defaultRes.push(subResult);\n    }\n    console.log(defaultRes);\n    return defaultRes;\n}"]},"metadata":{},"sourceType":"module"}