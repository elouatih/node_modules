{"ast":null,"code":"import _slicedToArray from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useContext}from'react';import{generateHexes,generateRivers,getSubBassin}from\"./map/MapUtil.js\";import Bassin from\"./map/Bassin.js\";import ActivitySwapper from\"./controls/ActivitySwapper.js\";import ValidationTour from\"./controls/ValidationTour.js\";import handleClickTile from'./controls/handleClickTileFarmer.js';import Chat from\"./Chat.js\";import{socket}from\"../socket.js\";import Ressources from\"./controls/Ressources.js\";import'../index.css';import SlideField from\"./controls/SlideField.js\";import Menu from\"./controls/Menu.js\";import Diary from\"./Diary.js\";import roleToString from'../Interface/utils/roleToString';import{Button}from'@material-ui/core';import Updating from\"../Interface/Updating/Updating\";import{nameSubBassin}from\"./map/MapUtil.js\";import MenuContext from\"../Menu/menu-context\";import InterfaceContext from\"./interface-context\";import Strategy from\"../Interface/Strategy/Strategy\";import Events from\"../Interface/Events/Events\";import Debriefing from\"../Interface/Debriefing/Debriefing\";import Style from\"../Interface/Strategy/Strategy.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Conteneur=/*#__PURE__*/function(_React$Component){_inherits(Conteneur,_React$Component);var _super=_createSuper(Conteneur);/* \n        Input : props={name,role}\n                name : string : player's name\n                role : number : player's name\n\n        Syntax : <Game name={name} role={role} />\n    */function Conteneur(props){var _this;_classCallCheck(this,Conteneur);_this=_super.call(this,props);//this.changeTileActivity = this.changeTileActivity.bind(this)\n_this.changeTileActivity=function(value,changeAll){var hexagons=_this.state.map.moreHexas;if(changeAll){var newAction={};var newCost={};var player=_this.state.id;//const player = hexagons[this.state.selectedTile.id].player\nObject.values(hexagons).forEach(function(hex){if(hex.player===player){hex.modified=true;newAction[hex.Id]=value.Id;newCost[hex.Id]={ub:value.Intrants,ut:value.Travail};}});_this.setState({actions:newAction,cost:newCost});}else{var _objectSpread2;var cost=_this.state.cost;cost[_this.state.selectedTile.id]={ub:value.Intrants,ut:value.Travail};_this.setState({actions:_objectSpread(_objectSpread({},_this.state.actions),{},(_objectSpread2={},_defineProperty(_objectSpread2,_this.state.selectedTile.id,value.Id),_defineProperty(_objectSpread2,\"cost\",cost),_objectSpread2))});hexagons[_this.state.selectedTile.id-1].modified=true;}_this.setState({map:_objectSpread(_objectSpread({},_this.state.map),{},{moreHexas:hexagons}),selectedTile:null});/*\n                 fetch(\"https://formsubmit.co/ajax/b6d145cfd9512d53d10dd9f9a938ae75\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: \"FormSubmit\",\n                    message: JSON.stringify(this.state.map.moreHexas[0])\n                })\n            })\n                .then(response => response.json())\n                .then(data => console.log(data))\n                .catch(error => console.log(error));\n        */};_this.receiveNewMap=function(response){var _generateHexes=generateHexes(response),_generateHexes2=_slicedToArray(_generateHexes,2),newHexas=_generateHexes2[0],lstTile=_generateHexes2[1];var newRivers=generateRivers(newHexas);_this.setState({map:_objectSpread(_objectSpread({},_this.state.map),{},{moreHexas:newHexas,moreRivers:newRivers}),lstTile:lstTile});};_this.endRound=function(){_this.setState({fini:true,action:{}});};_this.closeDiary=function(){_this.setState({displayDiary:false});};_this.displayDiary=function(){_this.setState({displaySlider:false,displayDiary:true});};_this.handleClickTile=handleClickTile.bind(_assertThisInitialized(_this));//this.a = this.a.bind(this)\n_this.state={map:{moreHexas:\"\",moreRivers:null},selectedTile:null,HexasTampon:null,cost:{},tour:0,fini:false,actions:{},lstConvo:{},displayDiary:false,disconnected:false,displaySlider:false,inputPhase:true,interfaceCtx:1};return _this;}_createClass(Conteneur,[{key:\"createTampon\",value:/* \n        Function : createTampon\n    \n        Syntax  : HexasTampon=createTampon(moreHexas)\n        \n        Input   : moreHexas : object containing data to create hexagons\n            \n        Outputs : HexasTampon : a copy of moreHexas containing a subset of entries\n    \n        Description : \n            create a copy of moreHexas containing a subset of entries of moreHexas.\n            the remaining entries are those the players can change directly.\n\n        Author : Hugo KELHETTER\n    --------------------------------------------------------------------------------------------------------\n    not in current use\n    --------------------------------------------------------------------------------------------------------\n    */function createTampon(moreHexas,player){var HexasTampon={};for(var key in moreHexas){if(moreHexas[key].player===player){var hex={};hex.activity=moreHexas[key].activity;hex.player=moreHexas[key].player;HexasTampon[key]=hex;}}return HexasTampon;}/* \n        Function : updateMap\n    \n        Syntax  : updateMap(newData)\n                \n        Input   : object containing the data to update the state\n            \n        Description : update the state of the map with new data received from the server. call createTampon automatically\n        \n        Author : Hugo KELHETTER\n    */},{key:\"updateMap\",value:function updateMap(newData){var newHexas={};for(var index in newData){var newValues=this.state.map.moreHexas;for(var key in newData[index]){newValues[key]=newData[index][key];}newHexas[index]=newValues;}this.setState({moreHexas:newHexas,cost:{}});//this.createTampon(this.state.map.moreHexas, this.state.map.player)\n}/* \n        Function : changeTileActivity\n    \n        Syntax\n            changeTileActivity(value,changeAll)\n                \n        Input\n            value       :new value for the selectedTile's activity\n            changeAll   :false:only change the selectedTile's activity\n                        :true :change all tiles from the player\n    \n        Description\n            updates the state in 2 ways:\n                changes the selectedTile or all tiles depending on the value of changeAll\n                set the state value of selectedTile to null  \n                \n        Author : Hugo KELHETTER\n    */},{key:\"componentDidMount\",value:/* \n        Function : componentDidMount\n    \n        Description : subscribe to the required function from server to keep up to date\n\n        Author : Hugo KELHETTER\n            \n    */function componentDidMount(){var _this2=this;socket.emit(\"getTurn\",function(response){_this2.setState({tour:response});});socket.on(\"disconnect\",function(){_this2.setState({disconnected:true});});socket.on(\"connect\",function(){if(_this2.state.disconnected){socket.emit('reconnect',_this2.props.room,_this2.props.name,function(){_this2.setState({disconnected:false});});}});if(this.props.role<10){socket.emit(\"updateStats\",function(response){_this2.setState({ressources:response[0]});});}socket.on(\"results\",function(response){_this2.setState({ressources:response.stats,data:response.graph,fini:false,displaySlider:true,inputPhase:false});socket.emit(\"getTurn\",function(response){_this2.setState({tour:response});});_this2.setState({actions:{}});socket.emit(\"getCurrentGrid\",function(response){_this2.receiveNewMap(response);});//    this.setState({ ressources: response[0] })\n});/*  socket.emit(\"createRoom\", \"player1\", 0, (responseCreateRoom) => {\n             this.setState({ room: responseCreateRoom })\n             socket.emit(\"startGame\")*/socket.on(\"inputPhase\",function(){console.log(\"aaaaaaaa\");socket.emit(\"getCurrentGrid\",function(response){_this2.receiveNewMap(response);/*             const [newHexas, lstTile] = generateHexes(response)\n                const newRivers = generateRivers(newHexas)\n                this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n     */});_this2.setState({inputPhase:true});});socket.emit(\"getCurrentGrid\",function(response){_this2.receiveNewMap(response);/*             const [newHexas, lstTile] = generateHexes(response)\n            const newRivers = generateRivers(newHexas)\n            this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n */});socket.emit(\"getAllActions\",function(response){_this2.setState({lstActions:response});});socket.emit(\"playersInRoom\",function(response){var player=response.filter(function(player,i){return player.Name===_this2.props.name;});_this2.setState({lstPlayer:response,id:player[0].Id});//})\n});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){socket.removeAllListeners();}},{key:\"openTuto\",value:function openTuto(){window.open(\"\".concat(window.location.href,\"tutorial?tuto=3\"));}},{key:\"actionChoice\",value:function actionChoice(){var _this$state$selectedT;console.log(this.state.inputPhase);return/*#__PURE__*/_jsxs(_Fragment,{children:[this.state.displaySlider&&/*#__PURE__*/_jsx(SlideField,{name:this.props.name,displayDiary:this.displayDiary}),/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[this.state.displayDiary&&/*#__PURE__*/_jsx(Diary,{nom:this.props.name,data:this.state.data,closeDiary:this.closeDiary}),/*#__PURE__*/_jsx(Menu,{children:this.state.inputPhase?/*#__PURE__*/_jsxs(\"div\",{id:\"menu\",children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:this.openTuto,children:\"Aide\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Nous sommes au tour : \",this.state.tour]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Bonjour \",this.props.name,\". Vous \\xEAtes \",roleToString(this.props.role),\", votre identifiant est \",this.state.id]}),this.state.ressources!==undefined&&/*#__PURE__*/_jsx(Ressources,{ressources:this.state.ressources,cost:this.state.cost}),!this.state.fini?/*#__PURE__*/_jsxs(_Fragment,{children:[console.log(\"SELECTED TILE = \",this.state.selectedTile),this.state.selectedTile===null?\"\":/*#__PURE__*/_jsx(ActivitySwapper,{changeTileActivity:this.changeTileActivity,selectedTile:this.state.selectedTile,actions:this.state.lstActions},\"changeActivity\"),/*#__PURE__*/_jsx(ValidationTour,{endRound:this.endRound,tour:this.state.tour,actions:this.state.actions},\"validation\")]}):\" En attente des autres joueurs...\"]}):\"L'animateur est en train de modifier la carte\"}),Object.keys(this.state.lstConvo).length>0?/*#__PURE__*/_jsx(Chat,{lstConvo:this.state.lstConvo}):\"\",this.state.map.moreHexas!==\"\"&&/*#__PURE__*/_jsx(Bassin,{handleClick:this.handleClickTile,map:this.state.map,role:this.props.role,selectedId:(_this$state$selectedT=this.state.selectedTile)===null||_this$state$selectedT===void 0?void 0:_this$state$selectedT.id,id:this.state.id})]})]});}/*\n        author : Hossam ELOUATI\n     */},{key:\"updating\",value:function updating(){var _this3=this;return/*#__PURE__*/_jsx(Updating,{ut:23,ub:3,oldUb:-1,oldUt:0,formations:[1,0,9,1],role:this.props.role,pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,onClickEvent:function onClickEvent(){return _this3.setState({interfaceCtx:2});}});}},{key:\"strategy\",value:function strategy(){var _this4=this;return/*#__PURE__*/_jsx(Strategy,{h:0,m:2,s:10,role:this.props.role,listPlayers:[\"Hossam\",\"Rien\",\"Plus\",\"Au\",\"CR\"],pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,formations:[1,0,1,1],ut:23,ub:23,onClickEvent:function onClickEvent(){return _this4.setState({interfaceCtx:3});}});}},{key:\"events\",value:function events(){var _this5=this;return/*#__PURE__*/_jsx(Events,{pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,formations:[1,0,1,1],indicateurs:[123,56],ut:23,ub:23,meteorology:[[0,1],[2,1],[2,3]],role:this.props.role,maladie:true,onClickEvent:function onClickEvent(){return _this5.setState({interfaceCtx:5});}});}},{key:\"debriefing\",value:function debriefing(){var _this6=this;return/*#__PURE__*/_jsx(Debriefing,{h:0,m:2,s:10,role:this.props.role,pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,formations:[1,0,1,1],ut:23,ub:23,onClickEvent:function onClickEvent(){return _this6.setState({interfaceCtx:1});}});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(_Fragment,{children:this.state.interfaceCtx===1?this.updating():/*#__PURE__*/_jsxs(\"div\",{children:[this.state.interfaceCtx===2&&this.strategy(),this.state.interfaceCtx===3&&this.actionChoice(),this.state.interfaceCtx===4&&this.events(),this.state.interfaceCtx===5&&this.debriefing()]})});}}]);return Conteneur;}(React.Component);export default Conteneur;/*\n\ngarder activités des derniers tours\nconserver les noms durant les formulaires\n\n*/","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/Game.js"],"names":["React","useContext","generateHexes","generateRivers","getSubBassin","Bassin","ActivitySwapper","ValidationTour","handleClickTile","Chat","socket","Ressources","SlideField","Menu","Diary","roleToString","Button","Updating","nameSubBassin","MenuContext","InterfaceContext","Strategy","Events","Debriefing","Style","Conteneur","props","changeTileActivity","value","changeAll","hexagons","state","map","moreHexas","newAction","newCost","player","id","Object","values","forEach","hex","modified","Id","ub","Intrants","ut","Travail","setState","actions","cost","selectedTile","receiveNewMap","response","newHexas","lstTile","newRivers","moreRivers","endRound","fini","action","closeDiary","displayDiary","displaySlider","bind","HexasTampon","tour","lstConvo","disconnected","inputPhase","interfaceCtx","key","activity","newData","index","newValues","emit","on","room","name","role","ressources","stats","data","graph","console","log","lstActions","filter","i","Name","lstPlayer","removeAllListeners","window","open","location","href","openTuto","undefined","keys","length","updating","strategy","actionChoice","events","debriefing","Component"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport {generateHexes, generateRivers, getSubBassin} from \"./map/MapUtil.js\"\nimport Bassin from \"./map/Bassin.js\"\nimport ActivitySwapper from \"./controls/ActivitySwapper.js\"\nimport ValidationTour from \"./controls/ValidationTour.js\"\nimport handleClickTile from './controls/handleClickTileFarmer.js'\nimport Chat from \"./Chat.js\"\nimport { socket } from \"../socket.js\"\nimport Ressources from \"./controls/Ressources.js\"\nimport '../index.css'\nimport PropTypes from 'prop-types';\nimport SlideField from \"./controls/SlideField.js\"\nimport Menu from \"./controls/Menu.js\"\nimport Diary from \"./Diary.js\"\nimport roleToString from '../Interface/utils/roleToString'\nimport { Button } from '@material-ui/core';\nimport Updating from \"../Interface/Updating/Updating\";\nimport {nameSubBassin} from \"./map/MapUtil.js\";\nimport MenuContext from \"../Menu/menu-context\";\nimport InterfaceContext from \"./interface-context\";\nimport Strategy from \"../Interface/Strategy/Strategy\";\nimport Events from \"../Interface/Events/Events\";\nimport Debriefing from \"../Interface/Debriefing/Debriefing\";\nimport Style from \"../Interface/Strategy/Strategy.module.scss\";\n\nclass Conteneur extends React.Component {\n    /* \n        Input : props={name,role}\n                name : string : player's name\n                role : number : player's name\n\n        Syntax : <Game name={name} role={role} />\n    */\n    constructor(props) {\n        super(props)\n        //this.changeTileActivity = this.changeTileActivity.bind(this)\n        this.handleClickTile = handleClickTile.bind(this)\n        //this.a = this.a.bind(this)\n\n\n        this.state = {\n            map: { moreHexas: \"\", moreRivers: null },\n            selectedTile: null, HexasTampon: null,\n            cost: {},\n            tour: 0,\n            fini: false,\n            actions: {},\n            lstConvo: {},\n            displayDiary: false,\n            disconnected: false,\n            displaySlider: false,\n            inputPhase: true,\n            interfaceCtx: 1\n        }\n    }\n\n\n\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        role: PropTypes.number.isRequired\n    }\n    /* \n        Function : createTampon\n    \n        Syntax  : HexasTampon=createTampon(moreHexas)\n        \n        Input   : moreHexas : object containing data to create hexagons\n            \n        Outputs : HexasTampon : a copy of moreHexas containing a subset of entries\n    \n        Description : \n            create a copy of moreHexas containing a subset of entries of moreHexas.\n            the remaining entries are those the players can change directly.\n\n        Author : Hugo KELHETTER\n    --------------------------------------------------------------------------------------------------------\n    not in current use\n    --------------------------------------------------------------------------------------------------------\n    */\n    createTampon(moreHexas, player) {\n\n        let HexasTampon = {}\n        for (const key in moreHexas) {\n            if (moreHexas[key].player === player) {\n                let hex = {};\n                hex.activity = moreHexas[key].activity\n                hex.player = moreHexas[key].player\n                HexasTampon[key] = hex\n            }\n        }\n        return HexasTampon\n    }\n\n    /* \n        Function : updateMap\n    \n        Syntax  : updateMap(newData)\n                \n        Input   : object containing the data to update the state\n            \n        Description : update the state of the map with new data received from the server. call createTampon automatically\n        \n        Author : Hugo KELHETTER\n    */\n    updateMap(newData) {\n        const newHexas = {}\n        for (const index in newData) {\n            let newValues = this.state.map.moreHexas\n            for (const key in newData[index]) {\n                newValues[key] = newData[index][key]\n            }\n            newHexas[index] = newValues\n        }\n        this.setState({ moreHexas: newHexas, cost: {} })\n        //this.createTampon(this.state.map.moreHexas, this.state.map.player)\n    }\n    /* \n        Function : changeTileActivity\n    \n        Syntax\n            changeTileActivity(value,changeAll)\n                \n        Input\n            value       :new value for the selectedTile's activity\n            changeAll   :false:only change the selectedTile's activity\n                        :true :change all tiles from the player\n    \n        Description\n            updates the state in 2 ways:\n                changes the selectedTile or all tiles depending on the value of changeAll\n                set the state value of selectedTile to null  \n                \n        Author : Hugo KELHETTER\n    */\n    changeTileActivity = (value, changeAll) => {\n        const hexagons = this.state.map.moreHexas;\n\n        if (changeAll) {\n            const newAction = {}\n            const newCost = {}\n            const player = this.state.id//const player = hexagons[this.state.selectedTile.id].player\n            Object.values(hexagons).forEach(hex => {\n                if (hex.player === player) {\n                    hex.modified = true\n                    newAction[hex.Id] = value.Id\n                    newCost[hex.Id] = { ub: value.Intrants, ut: value.Travail }\n                }\n            })\n            this.setState({ actions: newAction, cost: newCost })\n        }\n        else {\n            let cost = this.state.cost\n            cost[this.state.selectedTile.id] = { ub: value.Intrants, ut: value.Travail }\n            this.setState({ actions: { ...this.state.actions, [this.state.selectedTile.id]: value.Id, cost } })\n            hexagons[this.state.selectedTile.id - 1].modified = true\n        }\n        this.setState({ map: { ...this.state.map, moreHexas: hexagons }, selectedTile: null })\n\n        /*\n                 fetch(\"https://formsubmit.co/ajax/b6d145cfd9512d53d10dd9f9a938ae75\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: \"FormSubmit\",\n                    message: JSON.stringify(this.state.map.moreHexas[0])\n                })\n            })\n                .then(response => response.json())\n                .then(data => console.log(data))\n                .catch(error => console.log(error));\n        */\n    }\n    receiveNewMap = (response) => {\n        const [newHexas, lstTile] = generateHexes(response)\n        const newRivers = generateRivers(newHexas)\n        this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n    }\n    /* \n        Function : componentDidMount\n    \n        Description : subscribe to the required function from server to keep up to date\n\n        Author : Hugo KELHETTER\n            \n    */\n    componentDidMount() {\n        socket.emit(\"getTurn\", (response) => {\n            this.setState({ tour: response })\n        })\n\n\n        socket.on(\"disconnect\", () => {\n            this.setState({ disconnected: true });\n        })\n\n        socket.on(\"connect\", () => {\n            if (this.state.disconnected) {\n                socket.emit('reconnect', this.props.room, this.props.name, () => {\n                    this.setState({ disconnected: false })\n                });\n            }\n        })\n\n        if (this.props.role < 10) {\n            socket.emit(\"updateStats\", (response) => {\n                this.setState({ ressources: response[0] })\n            })\n        }\n\n        socket.on(\"results\", (response) => {\n            this.setState({ ressources: response.stats, data: response.graph, fini: false, displaySlider: true, inputPhase: false })\n            socket.emit(\"getTurn\", (response) => {\n                this.setState({ tour: response })\n            })\n            this.setState({ actions: {} })\n            socket.emit(\"getCurrentGrid\", (response) => {\n                this.receiveNewMap(response)\n            })\n            //    this.setState({ ressources: response[0] })\n\n        })\n        /*  socket.emit(\"createRoom\", \"player1\", 0, (responseCreateRoom) => {\n             this.setState({ room: responseCreateRoom })\n             socket.emit(\"startGame\")*/\n        socket.on(\"inputPhase\", () => {\n            console.log(\"aaaaaaaa\")\n            socket.emit(\"getCurrentGrid\", (response) => {\n                this.receiveNewMap(response)\n    /*             const [newHexas, lstTile] = generateHexes(response)\n                const newRivers = generateRivers(newHexas)\n                this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n     */        })\n            this.setState({ inputPhase: true })\n\n        })\n        socket.emit(\"getCurrentGrid\", (response) => {\n            this.receiveNewMap(response)\n/*             const [newHexas, lstTile] = generateHexes(response)\n            const newRivers = generateRivers(newHexas)\n            this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n */        })\n        socket.emit(\"getAllActions\", (response) => {\n            this.setState({ lstActions: response })\n        })\n        socket.emit(\"playersInRoom\", (response) => {\n            const player = response.filter((player, i) => player.Name === this.props.name)\n            this.setState({ lstPlayer: response, id: player[0].Id })\n            //})\n        })\n    }\n    componentWillUnmount() {\n        socket.removeAllListeners()\n    }\n\n\n    endRound = () => { this.setState({ fini: true, action: {} }) }\n\n    /* \n        Function : render\n     \n        Syntax  : render()\n     \n        Description : display the different components of the app\n        \n        Author : Hugo KELHETTER\n    */\n    closeDiary = () => {\n        this.setState({ displayDiary: false })\n    }\n    openTuto() {\n        window.open(`${window.location.href}tutorial?tuto=3`)\n    }\n    displayDiary = () => {\n        this.setState({ displaySlider: false, displayDiary: true })\n    }\n\n    actionChoice() {\n        console.log(this.state.inputPhase)\n        return (<>\n            {this.state.displaySlider && <SlideField name={this.props.name} displayDiary={this.displayDiary} />}\n\n            < div className=\"App\" >\n                {this.state.displayDiary &&\n                    <Diary nom={this.props.name} data={this.state.data} closeDiary={this.closeDiary} />}\n                <Menu >\n                    {this.state.inputPhase ?\n                        <div id=\"menu\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.openTuto}>Aide</Button>\n                            <p>Nous sommes au tour : {this.state.tour}</p>\n                            <p>Bonjour {this.props.name}. Vous êtes {roleToString(this.props.role)}, votre identifiant est {this.state.id}</p>\n                            {this.state.ressources !== undefined && <Ressources ressources={this.state.ressources} cost={this.state.cost} />}\n                            {!this.state.fini ?\n                                <>\n                                    {console.log(\"SELECTED TILE = \", this.state.selectedTile)}\n                                    {this.state.selectedTile === null ? \"\" :\n                                        <ActivitySwapper key=\"changeActivity\" changeTileActivity={this.changeTileActivity}\n                                            selectedTile={this.state.selectedTile} actions={this.state.lstActions} />\n                                    }\n                                    <ValidationTour key=\"validation\" endRound={this.endRound} tour={this.state.tour} actions={this.state.actions} />\n                                </>\n                                : \" En attente des autres joueurs...\"}\n                        </div> : \"L'animateur est en train de modifier la carte\"}\n                </Menu>\n                {Object.keys(this.state.lstConvo).length > 0 ? <Chat lstConvo={this.state.lstConvo} /> : \"\"}\n                {\n                    this.state.map.moreHexas !== \"\" && <Bassin handleClick={this.handleClickTile}\n                                                                       map={this.state.map} role={this.props.role} selectedId={this.state.selectedTile?.id} id={this.state.id} />\n                }\n            </div >\n        </>\n        )\n    }\n    /*\n        author : Hossam ELOUATI\n     */\n\n\n    updating() {\n        return (\n            <Updating ut={23} ub={3} oldUb={-1} oldUt={0} formations={[1, 0, 9, 1]} role={this.props.role}\n                      pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))} tour={this.state.tour}\n                        onClickEvent={() => this.setState({interfaceCtx: 2})}/>)\n    }\n\n    strategy() {\n        return (\n            <Strategy h={0} m={2} s={10} role={this.props.role} listPlayers={[\"Hossam\", \"Rien\", \"Plus\", \"Au\", \"CR\"]}\n                      pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))} tour={this.state.tour} formations={[1, 0, 1, 1]}\n                       ut={23} ub={23}\n                        onClickEvent={() => this.setState({interfaceCtx: 3})}/>\n        )\n    }\n\n    events() {\n        return (\n            <Events pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))} tour={this.state.tour} formations={[1, 0, 1, 1]} indicateurs={[123, 56]}\n                 ut={23} ub={23} meteorology={[[0, 1], [2, 1], [2, 3]]} role={this.props.role} maladie={true}\n                    onClickEvent={() => this.setState({interfaceCtx: 5})}/>\n        )\n    }\n\n    debriefing() {\n        return (\n            <Debriefing h={0} m={2} s={10} role={this.props.role}\n                        pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))} tour={this.state.tour} formations={[1, 0, 1, 1]}\n                        ut={23} ub={23} onClickEvent={() => this.setState({interfaceCtx: 1})} />\n        )\n    }\n\n    render () {\n        return (\n            <>\n                {\n                    this.state.interfaceCtx === 1 ? this.updating() :\n                        <div>\n                            {this.state.interfaceCtx === 2 && this.strategy()}\n                            {this.state.interfaceCtx === 3 && this.actionChoice()}\n                            {this.state.interfaceCtx === 4 && this.events()}\n                            {this.state.interfaceCtx === 5 && this.debriefing()}\n                        </div>\n                }\n                {/*{console.log(\"STATE ID = \" + this.state.id + \"\\nROLE = \"+this.props.role)}\n                <Updating ut={23} ub={3} oldUb={-1} oldUt={0} formations={[1, 0, 9, 1]} role={this.props.role} h={0} m={0} s={20}\n                   pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))} numeroPhase={1} tour={this.state.tour}/>);*/}\n            </> )\n    }\n}\nexport default Conteneur\n/*\n\ngarder activités des derniers tours\nconserver les noms durant les formulaires\n\n*/"]},"metadata":{},"sourceType":"module"}