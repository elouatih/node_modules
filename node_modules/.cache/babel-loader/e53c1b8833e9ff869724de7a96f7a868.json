{"ast":null,"code":"const fs = require(\"fs\");\n\nexport default function defaultSettings(file, length) {\n  let defaultRes = [];\n  console.log(\"FILE IS : \", file);\n  let res = new Promise(resolve => {\n    fs.readFile(file, 'utf8', (err, data) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      resolve(data);\n    });\n  });\n  console.log(\"RESULT IS :\", res);\n  let lines = res.split('\\n');\n\n  for (let line = 1; line < lines.length; line++) {\n    let subResult = [];\n    let elements = lines[line].split(',');\n    subResult.push(elements[0]);\n    elements = elements.slice(1, length);\n\n    for (let i = 0; i < elements.length; i++) {\n      subResult.push(parseInt(elements[i]));\n    }\n\n    defaultRes.push(subResult);\n  }\n\n  console.log(defaultRes);\n  return defaultRes;\n}","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/animator/defaultSettings.js"],"names":["fs","require","defaultSettings","file","length","defaultRes","console","log","res","Promise","resolve","readFile","err","data","error","lines","split","line","subResult","elements","push","slice","i","parseInt"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,eAAe,SAASC,eAAT,CAA0BC,IAA1B,EAAgCC,MAAhC,EAAwC;AACnD,MAAIC,UAAU,GAAG,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,IAA1B;AACA,MAAIK,GAAG,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC7BV,IAAAA,EAAE,CAACW,QAAH,CAAYR,IAAZ,EAAkB,MAAlB,EAA0B,CAACS,GAAD,EAAMC,IAAN,KAAe;AACrC,UAAID,GAAJ,EAAS;AACLN,QAAAA,OAAO,CAACQ,KAAR,CAAcF,GAAd;AACA;AACH;;AACDF,MAAAA,OAAO,CAACG,IAAD,CAAP;AACH,KAND;AAOH,GARS,CAAV;AASAP,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,GAA3B;AACA,MAAIO,KAAK,GAAGP,GAAG,CAACQ,KAAJ,CAAU,IAAV,CAAZ;;AACA,OAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGF,KAAK,CAACX,MAAhC,EAAwCa,IAAI,EAA5C,EAAgD;AAC5C,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,QAAQ,GAAGJ,KAAK,CAACE,IAAD,CAAL,CAAYD,KAAZ,CAAkB,GAAlB,CAAf;AACAE,IAAAA,SAAS,CAACE,IAAV,CAAeD,QAAQ,CAAC,CAAD,CAAvB;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBjB,MAAlB,CAAX;;AACA,SAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACf,MAA7B,EAAqCkB,CAAC,EAAtC,EAA0C;AACtCJ,MAAAA,SAAS,CAACE,IAAV,CAAeG,QAAQ,CAACJ,QAAQ,CAACG,CAAD,CAAT,CAAvB;AACH;;AACDjB,IAAAA,UAAU,CAACe,IAAX,CAAgBF,SAAhB;AACH;;AACDZ,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SAAOA,UAAP;AACH","sourcesContent":["const fs = require(\"fs\");\n\nexport default function defaultSettings (file, length) {\n    let defaultRes = [];\n    console.log(\"FILE IS : \", file);\n    let res = new Promise(resolve => {\n        fs.readFile(file, 'utf8', (err, data) => {\n            if (err) {\n                console.error(err);\n                return\n            }\n            resolve(data)\n        })\n    });\n    console.log(\"RESULT IS :\", res);\n    let lines = res.split('\\n');\n    for (let line = 1; line < lines.length; line++) {\n        let subResult = [];\n        let elements = lines[line].split(',');\n        subResult.push(elements[0]);\n        elements = elements.slice(1, length);\n        for (let i = 0; i < elements.length; i++) {\n            subResult.push(parseInt(elements[i]));\n        }\n        defaultRes.push(subResult);\n    }\n    console.log(defaultRes);\n    return defaultRes;\n}"]},"metadata":{},"sourceType":"module"}