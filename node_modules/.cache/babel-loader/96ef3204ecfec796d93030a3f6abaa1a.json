{"ast":null,"code":"import _objectSpread from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import FormControl from'@material-ui/core/FormControl';import FormLabel from'@material-ui/core/FormLabel';import Radio from'@material-ui/core/Radio';import Select from'@material-ui/core/Select';import MenuItem from'@material-ui/core/MenuItem';import RadioGroup from'@material-ui/core/RadioGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import{socket}from\"../../socket.js\";import{getSubBassin}from\"../map/MapUtil.js\";import createCheckbox from\"../controls/createCheckbox.js\";import{Button}from'@material-ui/core';import warningText from\"../controls/warningText.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ChangeTile=/*#__PURE__*/function(_React$Component){_inherits(ChangeTile,_React$Component);var _super=_createSuper(ChangeTile);function ChangeTile(props){var _this;_classCallCheck(this,ChangeTile);_this=_super.call(this,props);//this.handleChange = this.handleChange.bind(this)\n//this.handleSubmit = this.handleSubmit.bind(this)\n//this.modifyTile = this.modifyTile.bind(this)\n_this.handleChange=function(event){var target=event.target;var value=target.type==='checkbox'?+target.checked:target.value;_this.setState(_defineProperty({},target.name,value));};_this.modifyTile=function(){var _quelqueChoseSEst=\"quelque chose s'est mal passé\",_quelqueChoseSEst2=_slicedToArray(_quelqueChoseSEst,1),problem=_quelqueChoseSEst2[0];var res={selectedTile:_this.props.selectedTile.id};switch(_this.props.selectedTile.mainCLC1){case\"1\":res=_objectSpread(_objectSpread({},res),{},{market:+!_this.props.selectedTile.market});//res = { ...res, infrastructure: 0, market: 1, newActivity: 0 }\nsocket.emit(\"setMarket\",res);return[\"\",res];case\"2\":switch(_this.state.agriAction){case\"\":return[\"selectionnez l'action à effectuer\"];case\"changeOwner\":var ok=_this.checkReceiver(res);if(ok===\"\")socket.emit(\"changeOwner\",res);res.cellPlayer=res.selectedReceiver;res.player=res.selectedReceiver;delete res.selectedReceiver;return[ok,res];case\"addInfra\":if(_this.state.checkboxEco===_this.props.selectedTile.eco&&_this.state.checkboxIrrig===_this.props.selectedTile.irrig){return[\"rien n'a changé\"];}res=_objectSpread(_objectSpread({},res),{},{eco:_this.state.checkboxEco,irrig:_this.state.checkboxIrrig});socket.emit(\"addInfra\",res);return[\"\",res];case\"transformToForest\":socket.emit(\"transformToForest\",res.selectedTile);res.mainCLC1=3;return[\"\",res];default:return[problem];}case\"3\":switch(_this.state.agriAction){case\"\":return[\"selectionnez l'action à effectuer\"];case\"transformToCity\":res=_objectSpread(_objectSpread({},res),{},{market:_this.state.checkboxMarket});socket.emit(\"transformToCity\",res);res.mainCLC1=1;return[\"\",res];case\"transformToFarm\":res=_objectSpread(_objectSpread({},res),{},{selectedReceiver:_this.state.selectedReceiver,eco:_this.state.checkboxEco,irrig:_this.state.checkboxIrrig});var _ok=_this.checkReceiver(res);if(_ok===\"\")socket.emit(\"transformToFarm\",res);res.mainCLC1=2;return[_ok,res];default:return[problem];}case\"5\":switch(_this.state.agriAction){case\"\":return[\"selectionnez l'action à effectuer\"];case\"transformToFarm\":res=_objectSpread(_objectSpread({},res),{},{selectedReceiver:_this.state.selectedReceiver,eco:_this.state.checkboxEco,irrig:_this.state.checkboxIrrig});var _ok2=_this.checkReceiver(res);if(_ok2===\"\")socket.emit(\"transformToFarm\",res);res.mainCLC1=2;return[_ok2,res];case\"transformToForest\":console.log(\"a\");socket.emit(\"transformToForest\",res.selectedTile);res.mainCLC1=3;return[\"\",res];default:return[problem];}default:return[problem];}};_this.handleSubmit=function(event){event.preventDefault();var _this$modifyTile=_this.modifyTile(),_this$modifyTile2=_slicedToArray(_this$modifyTile,2),feedBack=_this$modifyTile2[0],change=_this$modifyTile2[1];if(feedBack===\"\")_this.props.updateMap(change);_this.setState({feedBack:feedBack});};_this.createCheckbox=createCheckbox.bind(_assertThisInitialized(_this));_this.state={agriAction:\"\",action:\"\",selectedReceiver:\"\",feedBack:\"\",checkboxEco:!!_this.props.selectedTile.eco,checkboxIrrig:!!_this.props.selectedTile.irrig,checkboxMarket:!!_this.props.selectedTile.market};return _this;}/* \n            Function : handleChange\n    \n            Syntax  : handleChange\n    \n            Input   : event : the event calling the function        \n    \n            Description : update the form controls's state\n    \n            Author : Hugo KELHETTER\n        \n    */_createClass(ChangeTile,[{key:\"checkReceiver\",value:/* \n        Function : checkReceiver\n\n        Syntax  : resString=checkReceiver(res)\n\n        Input   : res : object : contains the key/value pair selectedReceiver:player's id  \n        \n        Output  : resString : string : string explaining what went wrong in the submission\n\n        Description : check if res.selectedReceiver equals this.state.selectedReceiver or \"\" and returns a string according to it\n\n        Author : Hugo KELHETTER\n    \n    */function checkReceiver(res){res.selectedReceiver=this.state.selectedReceiver;if(this.state.selectedReceiver===\"\")return\"selectionnez le joueur qui reçoit la case\";if(this.state.selectedReceiver===this.props.selectedTile.player)return\"le donneur et le receveur ne peuvent pas être la même personne\";return\"\";}/* \n            Function : modifyTile\n    \n            Syntax  : [resString,res]=modifyTile()\n    \n            Output : resString : string : string explaining what went wrong in the submission\n                     res : object : contains the modifications sent to the server\n    \n            Description : check the form submission and return a log of it and an object containing the modifications\n                        if everything is fine, send to the server the modifications\n    \n            Author : Hugo KELHETTER\n        \n        */},{key:\"selectedPlayer\",value:/* \n        Function : selectedPLayer\n\n        Syntax  : selectedBox=selectedPlayer()\n\n        Output :  selectedBox=<>\n                                <FormLabel>\n                                <Select>\n                                    <MenuItem/>\n                                </Select>\n                                </> \n                                \n        Description : display a selectedBox containing the farmer present in the \n                        same sub basin as the selected tile\n\n        Author : Hugo KELHETTER\n        \n    */function selectedPlayer(){var tile=this.props.selectedTile;var playerArray=this.props.lstPlayer.filter(function(player){return player.Role<9&&getSubBassin(player.Id)===tile.bassin&&player.Id!==tile.player;});return(this.state.agriAction===\"changeOwner\"||this.state.agriAction===\"transformToFarm\")&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",children:\"Qui re\\xE7oit cette case ?\"}),/*#__PURE__*/_jsx(Select,{name:\"selectedReceiver\",labelId:\"selectedReceiver\",value:this.state.selectedReceiver,onChange:this.handleChange,children:playerArray.map(function(player,i){return/*#__PURE__*/_jsxs(MenuItem,{value:player.Id,children:[player.Name,\" : joueur \",player.Id,\" \"]},player.Id);})})]});}/* \n        Function : addInfra\n\n        Syntax  : selectedBoxes=addInfra()\n\n        Output :  selectedBoxes=<>\n                                <FormControlLabel>\n                                    <CheckBox>\n                                </FormControlLabel>\n                                <FormControlLabel>\n                                    <CheckBox>\n                                </FormControlLabel>\n                                </> \n                                \n        Description : display checkBoxes to add infrastructures\n\n        Author : Hugo KELHETTER\n        \n    */},{key:\"addInfra\",value:function addInfra(){return(this.state.agriAction==='addInfra'||this.state.agriAction==='transformToFarm')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormControlLabel,{control:this.createCheckbox(\"checkboxEco\"),label:\"infrastructure \\xE9cologique\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:this.createCheckbox(\"checkboxIrrig\"),label:\"infrastructure d'irrigation\"})]});}/* \n        Function : transformToCity\n\n        Syntax  : transformToCity\n\n        Output :  selectedBox=<>\n                                <FormControlLabel>\n                                    <CheckBox>\n                                </FormControlLabel>\n                                </> \n                                \n        Description : display checkBox to add a market \n\n        Author : Hugo KELHETTER\n        \n    */},{key:\"transformToCity\",value:function transformToCity(){return this.state.agriAction===\"transformToCity\"&&/*#__PURE__*/_jsx(FormControlLabel,{control:this.createCheckbox(\"checkboxMarket\"),label:\"Etablir un march\\xE9 local\"});}/* \n        Function : ComponentDidUpdate\n\n        Syntax  : ComponentDidUpdate(prevProps)\n                                \n        Description : if the selectedTile changes, update controls to the new tile's state\n\n        Author : Hugo KELHETTER\n        \n    */},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.selectedTile.id!==this.props.selectedTile.id){this.setState({checkboxEco:this.props.selectedTile.eco,checkboxIrrig:this.props.selectedTile.irrig,checkboxMarket:this.props.selectedTile.market,selectedReceiver:\"\"});}}/* \n        Function : render\n\n        Syntax  : render\n        \n        Description : Display all controls to update the map as an animator\n\n        Author : Hugo KELHETTER\n        \n    */},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",children:[this.props.selectedTile.mainCLC1===\"1\"/* city */?/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",children:this.props.selectedTile.market?\"Supprimer le marché\":\"Etablir un marché local\"}):this.props.selectedTile.mainCLC1===\"2\"/* farm */?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(RadioGroup,{name:\"agriAction\",value:this.state.agriAction,onChange:this.handleChange,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"changeOwner\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"donner la case\",id:\"giveTile\"},\"1\"),this.selectedPlayer(),/*#__PURE__*/_jsx(FormControlLabel,{value:\"addInfra\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"mettre en place des infrastructures\",id:\"addInfra\"},\"2\"),this.addInfra(),/*#__PURE__*/_jsx(FormControlLabel,{value:\"transformToForest\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"transformer en for\\xEAt\",id:\"transformToForest\"},\"3\")]})}):this.props.selectedTile.mainCLC1===\"3\"/* forest */?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(RadioGroup,{\"aria-label\":\"type\",name:\"agriAction\",value:this.state.agriAction,onChange:this.handleChange,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"transformToCity\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"transformer en ville\"},\"1\"),this.transformToCity(),/*#__PURE__*/_jsx(FormControlLabel,{value:\"transformToFarm\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"transformer en zone agricole\"},\"2\"),this.selectedPlayer(),this.addInfra()]})}):/*#__PURE__*/ /* water */_jsxs(RadioGroup,{\"aria-label\":\"type\",name:\"agriAction\",value:this.state.agriAction,onChange:this.handleChange,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"transformToFarm\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"transformer en zone agricole\"},\"1\"),this.selectedPlayer(),this.addInfra(),/*#__PURE__*/_jsx(FormControlLabel,{value:\"transformToForest\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"transformer en for\\xEAt\"},\"2\")]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",\"data-testid\":\"submit\",onClick:this.handleSubmit,children:\"Valider\"}),warningText(this.state.feedBack)]});}}]);return ChangeTile;}(React.Component);export{ChangeTile as default};","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/animator/ChangeTile.js"],"names":["React","FormControl","FormLabel","Radio","Select","MenuItem","RadioGroup","FormControlLabel","socket","getSubBassin","createCheckbox","Button","warningText","ChangeTile","props","handleChange","event","target","value","type","checked","setState","name","modifyTile","problem","res","selectedTile","id","mainCLC1","market","emit","state","agriAction","ok","checkReceiver","cellPlayer","selectedReceiver","player","checkboxEco","eco","checkboxIrrig","irrig","checkboxMarket","console","log","handleSubmit","preventDefault","feedBack","change","updateMap","bind","action","tile","playerArray","lstPlayer","filter","Role","Id","bassin","map","i","Name","prevProps","selectedPlayer","addInfra","transformToCity","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { socket } from \"../../socket.js\"\nimport { getSubBassin } from \"../map/MapUtil.js\"\nimport createCheckbox from \"../controls/createCheckbox.js\"\nimport { Button } from '@material-ui/core'\nimport warningText from \"../controls/warningText.js\"\nexport default class ChangeTile extends React.Component {\n    constructor(props) {\n        super(props)\n        //this.handleChange = this.handleChange.bind(this)\n        //this.handleSubmit = this.handleSubmit.bind(this)\n        //this.modifyTile = this.modifyTile.bind(this)\n        this.createCheckbox = createCheckbox.bind(this)\n        this.state = {\n            agriAction: \"\", action: \"\", selectedReceiver: \"\", feedBack: \"\",\n            checkboxEco: !!this.props.selectedTile.eco, checkboxIrrig: !!this.props.selectedTile.irrig,\n            checkboxMarket: !!this.props.selectedTile.market\n        }\n    }\n    /* \n            Function : handleChange\n    \n            Syntax  : handleChange\n    \n            Input   : event : the event calling the function        \n    \n            Description : update the form controls's state\n    \n            Author : Hugo KELHETTER\n        \n    */\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? +target.checked : target.value;\n        this.setState({ [target.name]: value });\n    }\n    /* \n        Function : checkReceiver\n\n        Syntax  : resString=checkReceiver(res)\n\n        Input   : res : object : contains the key/value pair selectedReceiver:player's id  \n        \n        Output  : resString : string : string explaining what went wrong in the submission\n\n        Description : check if res.selectedReceiver equals this.state.selectedReceiver or \"\" and returns a string according to it\n\n        Author : Hugo KELHETTER\n    \n    */\n    checkReceiver(res) {\n        res.selectedReceiver = this.state.selectedReceiver\n        if (this.state.selectedReceiver === \"\") return \"selectionnez le joueur qui reçoit la case\"\n        if (this.state.selectedReceiver === this.props.selectedTile.player) return \"le donneur et le receveur ne peuvent pas être la même personne\"\n\n        return \"\"\n    }\n    /* \n            Function : modifyTile\n    \n            Syntax  : [resString,res]=modifyTile()\n    \n            Output : resString : string : string explaining what went wrong in the submission\n                     res : object : contains the modifications sent to the server\n    \n            Description : check the form submission and return a log of it and an object containing the modifications\n                        if everything is fine, send to the server the modifications\n    \n            Author : Hugo KELHETTER\n        \n        */\n    modifyTile = () => {\n        const [problem] = \"quelque chose s'est mal passé\"\n        let res = { selectedTile: this.props.selectedTile.id }\n        switch (this.props.selectedTile.mainCLC1) {\n            case \"1\":\n                res = { ...res, market: +!this.props.selectedTile.market }\n                //res = { ...res, infrastructure: 0, market: 1, newActivity: 0 }\n                socket.emit(\"setMarket\", res)\n                return [\"\", res]\n            case \"2\":\n                switch (this.state.agriAction) {\n                    case \"\":\n                        return [\"selectionnez l'action à effectuer\"]\n                    case \"changeOwner\":\n                        const ok = this.checkReceiver(res)\n                        if (ok === \"\") socket.emit(\"changeOwner\", res)\n                        res.cellPlayer = res.selectedReceiver\n                        res.player = res.selectedReceiver\n                        delete res.selectedReceiver\n                        return [ok, res]\n                    case \"addInfra\":\n                        if (this.state.checkboxEco === this.props.selectedTile.eco && this.state.checkboxIrrig === this.props.selectedTile.irrig) {\n                            return [\"rien n'a changé\"]\n                        }\n                        res = { ...res, eco: this.state.checkboxEco, irrig: this.state.checkboxIrrig }\n                        socket.emit(\"addInfra\", res)\n                        return [\"\", res]\n                    case \"transformToForest\":\n                        socket.emit(\"transformToForest\", res.selectedTile)\n                        res.mainCLC1 = 3\n                        return [\"\", res]\n                    default:\n                        return [problem]\n                }\n\n            case \"3\":\n                switch (this.state.agriAction) {\n\n                    case \"\":\n                        return [\"selectionnez l'action à effectuer\"]\n                    case \"transformToCity\":\n                        res = { ...res, market: this.state.checkboxMarket }\n                        socket.emit(\"transformToCity\", res)\n                        res.mainCLC1 = 1\n                        return [\"\", res]\n                    case \"transformToFarm\":\n                        res = {\n                            ...res, selectedReceiver: this.state.selectedReceiver,\n                            eco: this.state.checkboxEco, irrig: this.state.checkboxIrrig\n                        }\n                        const ok = this.checkReceiver(res)\n                        if (ok === \"\") socket.emit(\"transformToFarm\", res)\n                        res.mainCLC1 = 2\n                        return [ok, res]\n                    default:\n                        return [problem]\n                }\n            case \"5\":\n                switch (this.state.agriAction) {\n                    case \"\":\n                        return [\"selectionnez l'action à effectuer\"]\n                    case \"transformToFarm\":\n                        res = {\n                            ...res, selectedReceiver: this.state.selectedReceiver,\n                            eco: this.state.checkboxEco, irrig: this.state.checkboxIrrig\n                        }\n                        const ok = this.checkReceiver(res)\n                        if (ok === \"\") socket.emit(\"transformToFarm\", res)\n                        res.mainCLC1 = 2\n                        return [ok, res]\n                    case \"transformToForest\":\n                        console.log(\"a\")\n                        socket.emit(\"transformToForest\", res.selectedTile)\n                        res.mainCLC1 = 3\n                        return [\"\", res]\n                    default:\n                        return [problem]\n                }\n            default:\n                return [problem]\n        }\n    }\n    /* \n            Function : handleSubmit\n    \n            Syntax  : handleSubmit\n    \n            Description : call modifyTile. If it succeeded, update map, else display message to explain what went wrong\n    \n            Author : Hugo KELHETTER\n        \n    */\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const [feedBack, change] = this.modifyTile()\n        if (feedBack === \"\") this.props.updateMap(change)\n        this.setState({ feedBack })\n    }\n    /* \n        Function : selectedPLayer\n\n        Syntax  : selectedBox=selectedPlayer()\n\n        Output :  selectedBox=<>\n                                <FormLabel>\n                                <Select>\n                                    <MenuItem/>\n                                </Select>\n                                </> \n                                \n        Description : display a selectedBox containing the farmer present in the \n                        same sub basin as the selected tile\n\n        Author : Hugo KELHETTER\n        \n    */\n    selectedPlayer() {\n        const tile = this.props.selectedTile\n\n        let playerArray = this.props.lstPlayer.filter(player => (player.Role < 9 && getSubBassin(player.Id) === tile.bassin && player.Id !== tile.player))\n        return (this.state.agriAction === \"changeOwner\" || this.state.agriAction === \"transformToFarm\") && <>\n            <FormLabel component=\"legend\">Qui reçoit cette case ?</FormLabel>\n            <Select name=\"selectedReceiver\" labelId=\"selectedReceiver\"\n                value={this.state.selectedReceiver} onChange={this.handleChange}>\n                {playerArray.map((player, i) =>\n                    <MenuItem value={player.Id} key={player.Id}>{player.Name} : joueur {player.Id} </MenuItem>\n                )}\n            </Select>\n        </>\n    }\n    /* \n        Function : addInfra\n\n        Syntax  : selectedBoxes=addInfra()\n\n        Output :  selectedBoxes=<>\n                                <FormControlLabel>\n                                    <CheckBox>\n                                </FormControlLabel>\n                                <FormControlLabel>\n                                    <CheckBox>\n                                </FormControlLabel>\n                                </> \n                                \n        Description : display checkBoxes to add infrastructures\n\n        Author : Hugo KELHETTER\n        \n    */\n    addInfra() {\n        return (this.state.agriAction === 'addInfra' || this.state.agriAction === 'transformToFarm') && <>\n            < FormControlLabel\n                control={\n                    this.createCheckbox(\"checkboxEco\")\n                }\n                label=\"infrastructure écologique\"\n            />\n            <FormControlLabel\n                control={\n                    this.createCheckbox(\"checkboxIrrig\")\n                }\n                label=\"infrastructure d'irrigation\"\n            />\n        </>\n    }\n    /* \n        Function : transformToCity\n\n        Syntax  : transformToCity\n\n        Output :  selectedBox=<>\n                                <FormControlLabel>\n                                    <CheckBox>\n                                </FormControlLabel>\n                                </> \n                                \n        Description : display checkBox to add a market \n\n        Author : Hugo KELHETTER\n        \n    */\n    transformToCity() {\n        return this.state.agriAction === \"transformToCity\" && <FormControlLabel\n            control={\n                this.createCheckbox(\"checkboxMarket\")\n            }\n            label=\"Etablir un marché local\"\n        />\n    }\n    /* \n        Function : ComponentDidUpdate\n\n        Syntax  : ComponentDidUpdate(prevProps)\n                                \n        Description : if the selectedTile changes, update controls to the new tile's state\n\n        Author : Hugo KELHETTER\n        \n    */\n    componentDidUpdate(prevProps) {\n        if (prevProps.selectedTile.id !== this.props.selectedTile.id) {\n            this.setState({\n                checkboxEco: this.props.selectedTile.eco,\n                checkboxIrrig: this.props.selectedTile.irrig,\n                checkboxMarket: this.props.selectedTile.market,\n                selectedReceiver: \"\"\n            })\n\n        }\n    }\n    /* \n        Function : render\n\n        Syntax  : render\n        \n        Description : Display all controls to update the map as an animator\n\n        Author : Hugo KELHETTER\n        \n    */\n    render() {\n        return (\n            <FormControl component=\"fieldset\">\n                {this.props.selectedTile.mainCLC1 === \"1\" /* city */ ?\n\n                    <FormLabel component=\"legend\">{this.props.selectedTile.market ? \"Supprimer le marché\" : \"Etablir un marché local\"}</FormLabel>\n                    : this.props.selectedTile.mainCLC1 === \"2\" /* farm */ ?\n                        <>\n                            <RadioGroup name=\"agriAction\" value={this.state.agriAction} onChange={this.handleChange} >\n                                <FormControlLabel key=\"1\" value=\"changeOwner\" control={<Radio />} label=\"donner la case\" id=\"giveTile\" />\n                                {this.selectedPlayer()}\n                                <FormControlLabel key=\"2\" value=\"addInfra\" control={<Radio />} label=\"mettre en place des infrastructures\" id=\"addInfra\" />\n                                {this.addInfra()}\n                                <FormControlLabel key=\"3\" value=\"transformToForest\" control={<Radio />} label=\"transformer en forêt\" id=\"transformToForest\" />\n\n                            </RadioGroup>\n                        </>\n                        : this.props.selectedTile.mainCLC1 === \"3\" /* forest */ ?\n                            <>\n\n                                <RadioGroup aria-label=\"type\" name=\"agriAction\" value={this.state.agriAction} onChange={this.handleChange}>\n                                    <FormControlLabel key=\"1\" value=\"transformToCity\" control={<Radio />} label=\"transformer en ville\" />\n                                    {this.transformToCity()}\n                                    <FormControlLabel key=\"2\" value=\"transformToFarm\" control={<Radio />} label=\"transformer en zone agricole\" />\n                                    {this.selectedPlayer()}\n                                    {this.addInfra()}\n\n                                </RadioGroup>\n\n                            </> : /* water */\n                            <RadioGroup aria-label=\"type\" name=\"agriAction\" value={this.state.agriAction} onChange={this.handleChange}>\n                                <FormControlLabel key=\"1\" value=\"transformToFarm\" control={<Radio />} label=\"transformer en zone agricole\" />\n                                {this.selectedPlayer()}\n                                {this.addInfra()}\n\n                                <FormControlLabel key=\"2\" value=\"transformToForest\" control={<Radio />} label=\"transformer en forêt\" />\n                            </RadioGroup>\n                }\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" data-testid=\"submit\" onClick={this.handleSubmit}>Valider</Button>\n                {warningText(this.state.feedBack)}\n            </FormControl>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}