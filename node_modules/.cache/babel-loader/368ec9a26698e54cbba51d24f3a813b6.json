{"ast":null,"code":"var _jsxFileName = \"/home/elouati/Bureau/projet_working/client/src/Interface/utils/Timer/ReactTimerStopwatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ReactTimerStopwatch.css';\nimport Circle from \"./Component/Circle/Circle\";\nimport Time from \"./Component/Time/Time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactTimerStopwatch = props => {\n  _s();\n\n  const [hint, setHint] = useState(0);\n\n  const getHint = h => {\n    setHint(h);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"react-stopwatch-timer__table\",\n    children: [/*#__PURE__*/_jsxDEV(Time, {\n      isOn: props.isOn,\n      hint: getHint,\n      watchType: props.watchType,\n      displayHours: props.displayHours,\n      displayMinutes: props.displayMinutes,\n      displaySeconds: props.displaySeconds,\n      fromTime: props.fromTime,\n      finishEvent: props.finishEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), props.displayCircle === true ? /*#__PURE__*/_jsxDEV(Circle, {\n      color: props.color,\n      tintColor: props.hintColor,\n      hint: hint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) : null, props.children !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"react-stopwatch-timer__container\",\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReactTimerStopwatch, \"53dH0EyOymG+z5Qn7OYZmDeTZGA=\");\n\n_c = ReactTimerStopwatch;\nexport default ReactTimerStopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTimerStopwatch\");","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Interface/utils/Timer/ReactTimerStopwatch.js"],"names":["React","useState","Circle","Time","ReactTimerStopwatch","props","hint","setHint","getHint","h","isOn","watchType","displayHours","displayMinutes","displaySeconds","fromTime","finishEvent","displayCircle","color","hintColor","children","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,2BAAP;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAEnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;;AACA,QAAMO,OAAO,GAAIC,CAAD,IAAO;AACnBF,IAAAA,OAAO,CAACE,CAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEJ,KAAK,CAACK,IAAlB;AAAwB,MAAA,IAAI,EAAEF,OAA9B;AAAuC,MAAA,SAAS,EAAEH,KAAK,CAACM,SAAxD;AAAmE,MAAA,YAAY,EAAEN,KAAK,CAACO,YAAvF;AACM,MAAA,cAAc,EAAEP,KAAK,CAACQ,cAD5B;AAC4C,MAAA,cAAc,EAAER,KAAK,CAACS,cADlE;AAEM,MAAA,QAAQ,EAAET,KAAK,CAACU,QAFtB;AAEgC,MAAA,WAAW,EAAEV,KAAK,CAACW;AAFnD;AAAA;AAAA;AAAA;AAAA,YADJ,EAIMX,KAAK,CAACY,aAAN,KAAwB,IAAzB,gBACG,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEZ,KAAK,CAACa,KAArB;AAA4B,MAAA,SAAS,EAAEb,KAAK,CAACc,SAA7C;AAAwD,MAAA,IAAI,EAAEb;AAA9D;AAAA;AAAA;AAAA;AAAA,YADH,GAC2E,IALhF,EAMMD,KAAK,CAACe,QAAN,KAAmBC,SAApB,gBACG;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,gBACKhB,KAAK,CAACe;AADX;AAAA;AAAA;AAAA;AAAA,YADH,GAGY,IATjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApBD;;GAAMhB,mB;;KAAAA,mB;AAsBN,eAAeA,mBAAf","sourcesContent":["import React, {useState} from 'react';\nimport './ReactTimerStopwatch.css';\nimport Circle from \"./Component/Circle/Circle\";\nimport Time from \"./Component/Time/Time\";\n\nconst ReactTimerStopwatch = (props) => {\n\n    const [hint, setHint] = useState(0);\n    const getHint = (h) => {\n        setHint(h);\n    };\n\n    return (\n        <div className=\"react-stopwatch-timer__table\">\n            <Time isOn={props.isOn} hint={getHint} watchType={props.watchType} displayHours={props.displayHours}\n                  displayMinutes={props.displayMinutes} displaySeconds={props.displaySeconds}\n                  fromTime={props.fromTime} finishEvent={props.finishEvent}/>\n            {(props.displayCircle === true) ?\n                <Circle color={props.color} tintColor={props.hintColor} hint={hint}/> : null}\n            {(props.children !== undefined) ?\n                <div className=\"react-stopwatch-timer__container\">\n                    {props.children}\n                </div> : null}\n        </div>\n    );\n};\n\nexport default ReactTimerStopwatch;"]},"metadata":{},"sourceType":"module"}