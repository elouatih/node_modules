{"ast":null,"code":"var _jsxFileName = \"/home/elouati/Bureau/projet_working/client/src/Interface/utils/Timer/Component/Circle/Circle.js\";\nimport React from 'react';\nimport './Circle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Circle = props => {\n  const circleCoordinates = (radius, steps, centerX, centerY) => {\n    let xValues = [centerX];\n    let yValues = [centerY];\n\n    for (let i = 0; i < steps; i++) {\n      xValues[i] = centerX + radius * Math.cos(2 * Math.PI * i / steps);\n      yValues[i] = centerY + radius * Math.sin(2 * Math.PI * i / steps);\n    }\n\n    return {\n      x: xValues,\n      y: yValues\n    };\n  };\n\n  const coordinates = circleCoordinates(40, 60, 50, 50);\n  let array = [];\n\n  for (let i = 0; i < 60; i++) {\n    let tmp = 30 - i;\n\n    if (tmp < 0) {\n      tmp = 60 + tmp;\n    }\n\n    let style;\n\n    if (props.hint === tmp) {\n      style = {\n        left: coordinates.y[i].toString() + \"%\",\n        top: coordinates.x[i].toString() + \"%\",\n        transform: \"rotate(\" + (360 - i * 6).toString() + \"deg)\",\n        backgroundColor: props.tintColor,\n        width: \"4px\"\n      };\n    } else {\n      style = {\n        left: coordinates.y[i].toString() + \"%\",\n        top: coordinates.x[i].toString() + \"%\",\n        transform: \"rotate(\" + (360 - i * 6).toString() + \"deg)\",\n        backgroundColor: props.color\n      };\n    }\n\n    array.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      className: \"react-stopwatch-timer__element\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 20\n    }, this));\n  }\n\n  return array;\n};\n\n_c = Circle;\nexport default Circle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Circle\");","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Interface/utils/Timer/Component/Circle/Circle.js"],"names":["React","Circle","props","circleCoordinates","radius","steps","centerX","centerY","xValues","yValues","i","Math","cos","PI","sin","x","y","coordinates","array","tmp","style","hint","left","toString","top","transform","backgroundColor","tintColor","width","color","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,QAAMC,iBAAiB,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,KAAqC;AAC3D,QAAIC,OAAO,GAAG,CAACF,OAAD,CAAd;AACA,QAAIG,OAAO,GAAG,CAACF,OAAD,CAAd;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAApB,EAA2BK,CAAC,EAA5B,EAAgC;AAC5BF,MAAAA,OAAO,CAACE,CAAD,CAAP,GAAcJ,OAAO,GAAGF,MAAM,GAAGO,IAAI,CAACC,GAAL,CAAS,IAAID,IAAI,CAACE,EAAT,GAAcH,CAAd,GAAkBL,KAA3B,CAAjC;AACAI,MAAAA,OAAO,CAACC,CAAD,CAAP,GAAcH,OAAO,GAAGH,MAAM,GAAGO,IAAI,CAACG,GAAL,CAAS,IAAIH,IAAI,CAACE,EAAT,GAAcH,CAAd,GAAkBL,KAA3B,CAAjC;AACH;;AACD,WAAO;AAACU,MAAAA,CAAC,EAAEP,OAAJ;AAAaQ,MAAAA,CAAC,EAAEP;AAAhB,KAAP;AACH,GARD;;AAUA,QAAMQ,WAAW,GAAGd,iBAAiB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAArC;AACA,MAAIe,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAIS,GAAG,GAAG,KAAKT,CAAf;;AACA,QAAIS,GAAG,GAAG,CAAV,EAAa;AACTA,MAAAA,GAAG,GAAG,KAAKA,GAAX;AACH;;AACD,QAAIC,KAAJ;;AACA,QAAIlB,KAAK,CAACmB,IAAN,KAAeF,GAAnB,EAAwB;AACpBC,MAAAA,KAAK,GAAG;AACJE,QAAAA,IAAI,EAAGL,WAAW,CAACD,CAAZ,CAAcN,CAAd,CAAD,CAAmBa,QAAnB,KAAgC,GADlC;AAEJC,QAAAA,GAAG,EAAGP,WAAW,CAACF,CAAZ,CAAcL,CAAd,CAAD,CAAmBa,QAAnB,KAAgC,GAFjC;AAGJE,QAAAA,SAAS,EAAE,YAAY,CAAC,MAAMf,CAAC,GAAG,CAAX,EAAca,QAAd,EAAZ,GAAuC,MAH9C;AAIJG,QAAAA,eAAe,EAAExB,KAAK,CAACyB,SAJnB;AAKJC,QAAAA,KAAK,EAAE;AALH,OAAR;AAOH,KARD,MAQO;AACHR,MAAAA,KAAK,GAAG;AACJE,QAAAA,IAAI,EAAGL,WAAW,CAACD,CAAZ,CAAcN,CAAd,CAAD,CAAmBa,QAAnB,KAAgC,GADlC;AAEJC,QAAAA,GAAG,EAAGP,WAAW,CAACF,CAAZ,CAAcL,CAAd,CAAD,CAAmBa,QAAnB,KAAgC,GAFjC;AAGJE,QAAAA,SAAS,EAAE,YAAY,CAAC,MAAMf,CAAC,GAAG,CAAX,EAAca,QAAd,EAAZ,GAAuC,MAH9C;AAIJG,QAAAA,eAAe,EAAExB,KAAK,CAAC2B;AAJnB,OAAR;AAMH;;AACDX,IAAAA,KAAK,CAACY,IAAN,eAAW;AAAK,MAAA,KAAK,EAAEV,KAAZ;AAAmB,MAAA,SAAS,EAAC;AAA7B,OAAmEV,CAAnE;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;;AAED,SAAOQ,KAAP;AAEH,CAzCD;;KAAMjB,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport './Circle.css'\n\nconst Circle = (props) => {\n\n    const circleCoordinates = (radius, steps, centerX, centerY) => {\n        let xValues = [centerX];\n        let yValues = [centerY];\n        for (let i = 0; i < steps; i++) {\n            xValues[i] = (centerX + radius * Math.cos(2 * Math.PI * i / steps));\n            yValues[i] = (centerY + radius * Math.sin(2 * Math.PI * i / steps));\n        }\n        return {x: xValues, y: yValues}\n    };\n\n    const coordinates = circleCoordinates(40, 60, 50, 50);\n    let array = [];\n    for (let i = 0; i < 60; i++) {\n        let tmp = 30 - i;\n        if (tmp < 0) {\n            tmp = 60 + tmp;\n        }\n        let style;\n        if (props.hint === tmp) {\n            style = {\n                left: (coordinates.y[i]).toString() + \"%\",\n                top: (coordinates.x[i]).toString() + \"%\",\n                transform: \"rotate(\" + (360 - i * 6).toString() + \"deg)\",\n                backgroundColor: props.tintColor,\n                width: \"4px\"\n            };\n        } else {\n            style = {\n                left: (coordinates.y[i]).toString() + \"%\",\n                top: (coordinates.x[i]).toString() + \"%\",\n                transform: \"rotate(\" + (360 - i * 6).toString() + \"deg)\",\n                backgroundColor: props.color\n            };\n        }\n        array.push(<div style={style} className=\"react-stopwatch-timer__element\" key={i}/>);\n    }\n\n    return array;\n\n};\n\nexport default Circle;"]},"metadata":{},"sourceType":"module"}