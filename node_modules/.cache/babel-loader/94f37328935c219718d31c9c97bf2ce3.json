{"ast":null,"code":"import _defineProperty from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useContext}from'react';import{socket}from'../../socket.js';import{generateHexes,generateRivers}from\"../map/MapUtil.js\";import Bassin from\"../map/Bassin.js\";import handleClickTile from'../controls/handleClickTileFarmer.js';import ChangeTile from'./ChangeTile.js';import Menu from'../controls/Menu.js';import{Button,Typography}from'@material-ui/core';//import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n//import CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport ConfirmDialog from\"../controls/ConfirmDialog.js\";import ListItem from\"@material-ui/core/ListItem\";import ListItemText from\"@material-ui/core/ListItemText\";import SetFarmers from\"../../Interface/Animator/SetFarmers\";import SetTimeInterface from\"../../Interface/Animator/SetTimeInterface\";import Settings from\"../../Interface/Animator/Settings\";import Style from\"../../Interface/Header/Header.module.scss\";import StyleStrategy from\"../../Interface/Strategy/Strategy.module.scss\";import Checkbox from\"../../Interface/utils/Checkbox\";import TimerContext from\"./timers-context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AnimatorLoader=/*#__PURE__*/function(_React$Component){_inherits(AnimatorLoader,_React$Component);var _super=_createSuper(AnimatorLoader);/* \n        Input : props={name}\n                name: string : name of the player\n        \n        Syntax : <AnimatorLoader name=\"player's name\"/>\n    */function AnimatorLoader(props){var _this;_classCallCheck(this,AnimatorLoader);_this=_super.call(this,props);_this.addConvo=function(data){if(data.convoName.length===0){alert(\"vous devez entrer un nom\");return false;}for(var entry in _this.state.lstConvo){if(entry===data.convoName){alert(\"Nom déjà pris\");return false;}}var newConvo=[];var name=data.convoName;for(var _entry in data.lstPlayer){if(!(_entry===\"convoName\"||_entry===\"lstConvo\")){if(data.lstPlayer[_entry])newConvo.push(_entry);}}if(newConvo.length>0){_this.setState({lstConvo:_objectSpread(_objectSpread({},_this.state.lstConvo),{},_defineProperty({},name,newConvo))});return true;}alert(\"Vous devez selectionner des joueurs\");return false;};_this.componentWillMount=function(){_this.selectedCheckboxes=new Set();};_this.toggleCheckbox=function(label){var newSelected=new Set();if(_this.selectedCheckboxes.has(label)){//this.setValueActivity(label, 0);\n_this.selectedCheckboxes.delete(label);_this.setState({selected:newSelected});}else{_this.selectedCheckboxes.add(label);_this.setState({selected:newSelected});}};_this.updateMap=function(tileChange){var tile=_this.state.map.moreHexas[tileChange.selectedTile-1];delete tileChange.selectedTile;tile=_this.updateObject(tile,tileChange);_this.setState({selectedTile:\"\"});};_this.numberPlayers=function(){return _this.state.lstPlayer.length-1;};_this.handleSubmit=function(){/*         console.log(this.state.action)\n                switch (this.state.action) {\n                    case \"Commencer la partie\":\n                        this.setState({ mapReady: false })\n                        socket.emit(\"mapReady\")\n                        break;\n                    case \"Terminer la partie\":\n                        socket.emit(\"endGame\")\n                        break;\n                    default:\n                        socket.emit(\"nextTurn\", () => {\n                            socket.emit(\"getTurn\", (response) => {\n                                this.setState({ tour: response })\n                            })\n                        })\n                } */var action=_this.actionToString();if(action===\"Finir les modifications\"){if(_this.state.tour===-1){socket.emit(\"mapReady\");console.log(\"mapReady\");_this.setState({tour:0});}else{socket.emit(\"inputPhase\");console.log(\"inputphase\");}}else{var finishBool=0;//if(this.state.lstPlayer && this.state.lstPlayer.length){\n/*for(let i=0; i<this.state.lstPlayer.length; i++){\n                console.log(this.state.lstPlayer[i])\n                if(this.state.lstPlayer[i].Id !== 11){\n                    socket.emit(\"getFinishTourPlayer\", this.state.lstPlayer[i].Id, (response) => {\n                        console.log(\"FINISH TOUR \" + this.state.lstPlayer[i].Id + \" : \", response.FinishTour);\n                        finishBool = finishBool + (response.FinishTour? 1: 0);\n                        console.log(\"FINISH TOUR \" + this.state.lstPlayer[i].Id + \" : \", finishBool)\n                    })}\n            }*/_this.state.lstPlayer.map(function(item){if(item.Id!==11){socket.emit(\"getFinishTourPlayer\",item.Id,function(response){//console.log(\"FINISH TOUR \" + item.Id + \" : \", response.FinishTour);\nfinishBool=finishBool+(response.FinishTour?1:0);console.log(\"FINISH TOUR \"+item.Id+\" : \",finishBool);});}});//}\nsetTimeout(function(){console.log(\"FINISH BOOL = \",finishBool);console.log(\"this.getFinishTourPlayers()\",finishBool);console.log(\"this.numberPlayers\",_this.numberPlayers());if(finishBool===_this.numberPlayers()){console.log(\"TOUR FINISHED\");//console.log(\"this.getFinishTourPlayers()\", finishBool);\nsocket.emit(\"nextTurn\",function(){socket.emit(\"getTurn\",function(response){//console.log(response)\n_this.setState({tour:response});});});}},500);//return finishBool;\n}console.log(\"TOUR COURANT : \",_this.state.tour);_this.setState({displayConfirmDialog:false,farmersPlaying:!_this.state.farmersPlaying});};_this.cancel=function(){_this.setState({displayConfirmDialog:false});};_this.handleContinue=function(event){/* console.log(event.currentTarget, event.currentTarget.name)\n        this.setState({ farmersPlaying: !this.state.farmersPlaying })\n        if (!this.state.farmersPlaying) { socket.emit(\"inputPhase\", () => { }) } */_this.setState({action:event.currentTarget.name,displayConfirmDialog:true});};_this.submit=function(){_this.setState({pAgris:_this.selectedCheckboxes.has(\" 1.\"),pTimers:_this.selectedCheckboxes.has(\" 2.\"),pNumber:_this.selectedCheckboxes.has(\" 3.\"),allDefault:false});console.log(_this.state.pAgris,_this.state.pTimers,_this.state.pNumber,_this.state.allDefault);if(!_this.state.pAgris){/* Submit les paramètres par défaut des agriculteurs */ /*console.log(defaultSettings(this.state.fileAgri, 8));*/ //console.log(\"NUMBER AGRIS = \",this.state.agriPlayer.length)\nsocket.emit(\"defaultAgris\",_this.state.agriPlayer.length,function(response){console.log(response);});}if(!_this.state.pTimers){socket.emit(\"settings\",_this.state.pAgris,false,_this.state.pNumber);/*socket.emit(\"defaultTimer\", (response) => {\n                console.log(\"SETTINGS TIME CONTEXT\");\n                console.log(\"RESPONSE = \", response[0]);\n\n\n                //this.context.updateTimers(response);\n                await this.context.updateTimerUpdating(response[0]);\n                await this.context.updateTimerStrategy(response[1]);\n                await this.context.updateTimerActions(response[2]);\n                await this.context.updateTimerEvents(response[3]);\n                await this.context.updateTimerDebriefing(response[4]);\n                await this.context.updateTimerSatisfaction(response[5]);\n                await this.context.updateTimerResults(response[6]);\n                //console.log(\"CONTEXT IS : \", this.context);\n            });*/}};_this.createCheckbox=function(label){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"agri\",children:/*#__PURE__*/_jsx(Checkbox,{label:label,isChecked:_this.selectedCheckboxes.has(label),handleCheckboxChange:_this.toggleCheckbox},label)})});};_this.state={interfaceCtx:1,lstPlayer:\"\",lstTile:\"\",map:{moreHexas:\"\",moreRivers:null},mapReady:true,tour:-1,action:\"\",disconnected:false,farmersPlaying:false,listPlayer:[],agriPlayer:[],pAgris:false,pTimers:false,pNumber:false,allDefault:true,selected:new Set(),finishTour:true,fileAgri:\"./settings/agris.txt\",fileTimers:\"./settings/timers.txt\",timers:[]};//this.addConvo = this.addConvo.bind(this)\n_this.handleClickTile=handleClickTile.bind(_assertThisInitialized(_this));return _this;}_createClass(AnimatorLoader,[{key:\"componentDidMount\",value:/*\n        Function : componentDidMount\n\n        Description : retrieve the map and players's data\n\n        Author : Hugo KELHETTER\n \n    */function componentDidMount(){var _this2=this;socket.on(\"disconnect\",function(){_this2.setState({disconnected:true});});socket.on(\"connect\",function(){if(_this2.state.disconnected){socket.emit('reconnect',_this2.props.room,_this2.props.name,function(){_this2.setState({disconnected:false});});}});socket.emit(\"getCurrentGrid\",function(response){var newHexas=generateHexes(response);var lstTile=newHexas[1];var newRivers=generateRivers(newHexas[0]);//const tampon = this.createTampon(newHexas, this.state.map.player)\n_this2.setState({map:_objectSpread(_objectSpread({},_this2.state.map),{},{moreHexas:newHexas[0],moreRivers:newRivers,selectedTile:null}),lstTile:lstTile});});socket.emit(\"playersInRoom\",function(response){//console.log(\"RESPONSE\");\n//console.log(response);\n_this2.setState({listPlayer:response});_this2.setState({lstPlayer:response});//})\n});socket.emit(\"agriInRoom\",function(response){//console.log(\"RESPONSE\");\nvar agriculteursInRoom=[];response.map(function(item){return agriculteursInRoom.push(item.Name);});_this2.setState({agriPlayer:agriculteursInRoom});//this.setState({agriPlayer: response})\n//})\n});/*socket.emit(\"getSettings\", (response) => {\n            const s = response[0];\n            console.log(\"SETTINGS = \", s);\n            this.setState({\n                pAgris: s.PersonalizedAgris,\n                pTimers: s.PersonalizedTimers,\n                pNumber: s.PersonalizedNumber,\n                allDefault: s.DefaultData\n            })\n\n        })*/}/*\n        Function : updateObject\n\n        Syntax  : obj=updateObject(source,newData)\n\n        Input   : source : object : the object to update\n                  newData : object : the object containing new data\n\n        Output  : obj : object : an updated object\n\n        Description : update source with the subset of data contained in newData\n                        let source = {firstname:hugo,name:kelhetter} and newData={firstname:jhon}\n                        let newObject=updateObject(source,newData)\n                        newObject = {firstname:jhon,name:kelhetter}\n\n        Author : Hugo KELHETTER\n    \n    */},{key:\"updateObject\",value:function updateObject(source,newData){for(var key in newData){source[key]=newData[key];}return source;}/*\n        Function : updateMap\n\n        Syntax  : updateMap(tileChange)\n\n        Input   : tileChange : object : new set of data for a tile of the map\n\n        Description : update the map with new data\n\n        Author : Hugo KELHETTER\n    \n    */},{key:\"openTuto\",value:function openTuto(){window.open(\"\".concat(window.location.href,\"tutorial?tuto=2\"));}},{key:\"actionToString\",value:function actionToString(){if(this.state.farmersPlaying)return\"Finir le tour\";return\"Finir les modifications\";}},{key:\"endGame\",value:function endGame(){socket.emit(\"endGame\");}/* author Hossam ELOUATI */},{key:\"settingsOptions\",value:function settingsOptions(nextInterface){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:Style.Header,children:/*#__PURE__*/_jsxs(\"div\",{className:Style.Content,children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:Style.TextColor,children:\"Jeu S\\xE9rieux - Le Bassin de Moderbach\"})}),/*#__PURE__*/_jsx(\"div\",{className:Style.TextColor,children:/*#__PURE__*/_jsxs(\"div\",{className:\"row text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-sm-6\",children:[\"Pseudo : \",this.props.pseudo]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-6\",children:\"R\\xF4le : Animateur\"})]})})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"button\",{className:StyleStrategy.nextInterface,onClick:nextInterface,children:\"Passer \\xE0 l'interface suivante\"})}),/*#__PURE__*/_jsxs(\"section\",{className:StyleStrategy.none4,children:[/*#__PURE__*/_jsx(\"header\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:StyleStrategy.header,children:\"Choisir entre ces options\"})}),/*#__PURE__*/_jsxs(\"section\",{className:\"row text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:StyleStrategy.header2,children:[this.createCheckbox(\" 1.\"),\" Personnaliser les r\\xF4les des agriculteurs\",/*#__PURE__*/_jsx(\"br\",{}),this.createCheckbox(\" 2.\"),\" Personnaliser les dur\\xE9es de chaque phase\",/*#__PURE__*/_jsx(\"br\",{}),this.selectedCheckboxes.has(\" 1.\")===false?/*#__PURE__*/_jsxs(_Fragment,{children:[this.createCheckbox(\" 3.\"),\" Choisir un nombre pour chaque type d'agriculteurs\",/*#__PURE__*/_jsx(\"br\",{})]}):null]}),/*#__PURE__*/_jsx(\"button\",{onClick:this.submit,className:StyleStrategy.nextInterface,children:\"Valider\"})]})]})]})]});}},{key:\"agriActivity\",value:function agriActivity(){var _this3=this;return/*#__PURE__*/_jsx(SetFarmers,{pseudo:this.props.name,listAgri:this.state.agriPlayer,nextInterface:function nextInterface(){return _this3.setState({interfaceCtx:_this3.state.pTimers===true?3:4});}});}/* author Hossam ELOUATI */},{key:\"setTimers\",value:function setTimers(){var _this4=this;return/*#__PURE__*/_jsx(SetTimeInterface,{pseudo:this.props.name,nextInterface:function nextInterface(){return _this4.setState({interfaceCtx:4});}});}/*settings() {\n        return <Settings pseudo={this.props.name} nextInterface={\n            () => this.setState({\n                    interfaceCtx: (this.state.pAgris === true) ? 2 : (this.state.pTimers === true) ? 3 : 4\n                })}/>\n    }*/ /*     Description : display the UI of the animator : the map, and controls over the map and the game in general\n    *       Author : Hugo KELHETTER\n    * */},{key:\"principal\",value:function principal(){var _this$state$selectedT;{console.log(\"LIST PLAYER = \",this.state.lstPlayer);}{this.state.listPlayer.map(function(item){return console.log(\"ID : \"+item.Id+\" Name : \"+item.Name);});}var buttonValue=this.actionToString();//const buttonValue = this.state.mapReady ? \"Commencer la partie\" : `Terminer le tour ${this.state.tour}`\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[this.state.displayConfirmDialog&&/*#__PURE__*/_jsx(ConfirmDialog,{cancel:this.cancel,confirm:this.handleSubmit,action:this.state.action}),/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(Menu,{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"menu\",children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:this.openTuto,children:\"Aide\"}),/*#__PURE__*/_jsxs(Typography,{children:[\"tour actuel : \",this.state.tour]}),/*#__PURE__*/_jsxs(Typography,{children:[\" \",this.state.mapReady&&\"Vous pouvez modifier la carte avant le début de la partie. \"]}),/*#__PURE__*/_jsx(Typography,{children:\" Cliquez sur une case pour apporter des modifications\"}),/*#__PURE__*/_jsxs(Typography,{children:[\" L'identifiant de la partie est : \",this.props.room]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",\"data-testid\":\"submit\",name:buttonValue,value:buttonValue,onClick:this.handleContinue,children:buttonValue}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",\"data-testid\":\"submit\",name:\"Terminer la partie\",onClick:this.endGame,children:\"Terminer la partie\"})]}),this.state.lstPlayer!==\"\"&&this.state.lstTile!==\"\"&&this.state.selectedTile&&!this.state.farmersPlaying&&/*#__PURE__*/_jsx(\"div\",{id:\"changeTile\",children:/*#__PURE__*/_jsx(ChangeTile,{lstPlayer:this.state.lstPlayer,lstTile:this.state.map.moreHexas,updateMap:this.updateMap,selectedTile:this.state.selectedTile,type:this.state.selectedTile.className,id:this.state.selectedTile.id})})]}),this.state.map.moreHexas!==\"\"&&/*#__PURE__*/_jsx(Bassin,{handleClick:this.handleClickTile,selectedId:(_this$state$selectedT=this.state.selectedTile)===null||_this$state$selectedT===void 0?void 0:_this$state$selectedT.id,map:this.state.map,role:this.props.role,id:this.state.id})]})]});}/*\n    Function : render\n\n    Syntax  : render()\n\n    Description : display the UI of the animator : the map, and controls over the map and the game in general\n\n    Author : Hossam ELOUATI\n \n*/},{key:\"render\",value:function render(){var _this5=this;return/*#__PURE__*/_jsx(_Fragment,{children:this.state.interfaceCtx===2?this.agriActivity():this.state.interfaceCtx===3?this.setTimers():this.state.interfaceCtx===1?this.settingsOptions(function(){return _this5.setState({interfaceCtx:_this5.state.pAgris===true?2:_this5.state.pTimers===true?3:4});}):this.principal()});}}]);return AnimatorLoader;}(React.Component);AnimatorLoader.contextType=TimerContext;export{AnimatorLoader as default};","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/animator/AnimatorLoader.js"],"names":["React","useContext","socket","generateHexes","generateRivers","Bassin","handleClickTile","ChangeTile","Menu","Button","Typography","ConfirmDialog","ListItem","ListItemText","SetFarmers","SetTimeInterface","Settings","Style","StyleStrategy","Checkbox","TimerContext","AnimatorLoader","props","addConvo","data","convoName","length","alert","entry","state","lstConvo","newConvo","name","lstPlayer","push","setState","componentWillMount","selectedCheckboxes","Set","toggleCheckbox","label","newSelected","has","delete","selected","add","updateMap","tileChange","tile","map","moreHexas","selectedTile","updateObject","numberPlayers","handleSubmit","action","actionToString","tour","emit","console","log","finishBool","item","Id","response","FinishTour","setTimeout","displayConfirmDialog","farmersPlaying","cancel","handleContinue","event","currentTarget","submit","pAgris","pTimers","pNumber","allDefault","agriPlayer","createCheckbox","interfaceCtx","lstTile","moreRivers","mapReady","disconnected","listPlayer","finishTour","fileAgri","fileTimers","timers","bind","on","room","newHexas","newRivers","agriculteursInRoom","Name","source","newData","key","window","open","location","href","nextInterface","Header","Content","TextColor","pseudo","none4","header","header2","buttonValue","openTuto","endGame","className","id","role","agriActivity","setTimers","settingsOptions","principal","Component","contextType"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport { socket } from '../../socket.js'\nimport PropTypes from 'prop-types';\nimport { generateHexes, generateRivers } from \"../map/MapUtil.js\"\nimport Bassin from \"../map/Bassin.js\"\nimport handleClickTile from '../controls/handleClickTileFarmer.js'\nimport ChangeTile from './ChangeTile.js'\nimport Menu from '../controls/Menu.js'\nimport { Button, Typography } from '@material-ui/core'\n//import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n//import CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport ConfirmDialog from \"../controls/ConfirmDialog.js\"\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SetFarmers from \"../../Interface/Animator/SetFarmers\";\nimport SetTimeInterface from \"../../Interface/Animator/SetTimeInterface\";\nimport Settings from \"../../Interface/Animator/Settings\";\nimport Style from \"../../Interface/Header/Header.module.scss\";\nimport StyleStrategy from \"../../Interface/Strategy/Strategy.module.scss\";\nimport Checkbox from \"../../Interface/utils/Checkbox\";\nimport TimerContext from \"./timers-context\";\n\nexport default class AnimatorLoader extends React.Component {\n    /* \n        Input : props={name}\n                name: string : name of the player\n        \n        Syntax : <AnimatorLoader name=\"player's name\"/>\n    */\n    constructor(props) {\n        super(props)\n        this.state = {\n            interfaceCtx: 1,\n            lstPlayer: \"\", lstTile: \"\", map: {moreHexas: \"\", moreRivers: null}, mapReady: true, tour: -1, action: \"\",\n            disconnected: false, farmersPlaying: false, listPlayer: [], agriPlayer: [],\n            pAgris: false, pTimers: false, pNumber: false, allDefault: true, selected: new Set(),\n            finishTour: true, fileAgri: \"./settings/agris.txt\", fileTimers: \"./settings/timers.txt\",\n            timers: []\n        }\n        //this.addConvo = this.addConvo.bind(this)\n        this.handleClickTile = handleClickTile.bind(this)\n\n    }\n\n    static contextType = TimerContext\n\n    static propTypes = {\n        name: PropTypes.string.isRequired\n    }\n    /* \nFunction : addConvo\n\nSyntax  : boolean=addConvo(data)\n\nInput   : object following the next pattern\n            {\n                convoName : \"name of the conversation\",\n                player1 : boolean,\n                player2 : boolean\n                ...\n            }\n            playerN's represents the player's name and the value represents \n                    whether or not it is part of the conversation\n\nOutput  : the success of the function\n\nDescription : display the different components of the app\n\nAuthor : Hugo KELHETTER\n    \n*/\n    addConvo = (data) => {\n\n        if (data.convoName.length === 0) {\n            alert(\"vous devez entrer un nom\")\n            return false\n        }\n        for (const entry in this.state.lstConvo) {\n            if (entry === data.convoName) {\n                alert(\"Nom déjà pris\")\n                return false\n            }\n        }\n\n        let newConvo = []\n        const name = data.convoName\n        for (const entry in data.lstPlayer) {\n            if (!(entry === \"convoName\" || entry === \"lstConvo\")) {\n                if (data.lstPlayer[entry]) newConvo.push(entry)\n            }\n        }\n\n        if (newConvo.length > 0) {\n            this.setState({lstConvo: {...this.state.lstConvo, [name]: newConvo}})\n            return true\n        }\n        alert(\"Vous devez selectionner des joueurs\")\n        return false\n    }\n    componentWillMount = () => {\n        this.selectedCheckboxes = new Set();\n    }\n\n    toggleCheckbox = (label) => {\n        const newSelected = new Set();\n        if (this.selectedCheckboxes.has(label)) {\n            //this.setValueActivity(label, 0);\n            this.selectedCheckboxes.delete(label);\n            this.setState({selected: newSelected});\n\n        } else {\n            this.selectedCheckboxes.add(label);\n            this.setState({selected: newSelected});\n        }\n    }\n\n    /*\n        Function : componentDidMount\n\n        Description : retrieve the map and players's data\n\n        Author : Hugo KELHETTER\n \n    */\n    componentDidMount() {\n        socket.on(\"disconnect\", () => {\n            this.setState({disconnected: true});\n        })\n\n        socket.on(\"connect\", () => {\n            if (this.state.disconnected) {\n                socket.emit('reconnect', this.props.room, this.props.name, () => {\n                    this.setState({disconnected: false})\n                });\n            }\n        })\n\n        socket.emit(\"getCurrentGrid\", (response) => {\n            const newHexas = generateHexes(response)\n            let lstTile = newHexas[1]\n            const newRivers = generateRivers(newHexas[0])\n            //const tampon = this.createTampon(newHexas, this.state.map.player)\n            this.setState({\n                map: {...this.state.map, moreHexas: newHexas[0], moreRivers: newRivers, selectedTile: null},\n                lstTile\n            })\n\n        })\n        socket.emit(\"playersInRoom\", (response) => {\n            //console.log(\"RESPONSE\");\n            //console.log(response);\n            this.setState({listPlayer: response})\n            this.setState({lstPlayer: response})\n            //})\n        })\n\n        socket.emit(\"agriInRoom\", (response) => {\n            //console.log(\"RESPONSE\");\n            const agriculteursInRoom = []\n            response.map((item) => agriculteursInRoom.push(item.Name));\n            this.setState({agriPlayer: agriculteursInRoom})\n            //this.setState({agriPlayer: response})\n            //})\n        })\n\n        /*socket.emit(\"getSettings\", (response) => {\n            const s = response[0];\n            console.log(\"SETTINGS = \", s);\n            this.setState({\n                pAgris: s.PersonalizedAgris,\n                pTimers: s.PersonalizedTimers,\n                pNumber: s.PersonalizedNumber,\n                allDefault: s.DefaultData\n            })\n\n        })*/\n    }\n\n    /*\n        Function : updateObject\n\n        Syntax  : obj=updateObject(source,newData)\n\n        Input   : source : object : the object to update\n                  newData : object : the object containing new data\n\n        Output  : obj : object : an updated object\n\n        Description : update source with the subset of data contained in newData\n                        let source = {firstname:hugo,name:kelhetter} and newData={firstname:jhon}\n                        let newObject=updateObject(source,newData)\n                        newObject = {firstname:jhon,name:kelhetter}\n\n        Author : Hugo KELHETTER\n    \n    */\n    updateObject(source, newData) {\n        for (const key in newData) {\n            source[key] = newData[key]\n        }\n        return source\n    }\n\n    /*\n        Function : updateMap\n\n        Syntax  : updateMap(tileChange)\n\n        Input   : tileChange : object : new set of data for a tile of the map\n\n        Description : update the map with new data\n\n        Author : Hugo KELHETTER\n    \n    */\n\n    updateMap = (tileChange) => {\n        let tile = this.state.map.moreHexas[tileChange.selectedTile - 1]\n        delete tileChange.selectedTile\n        tile = this.updateObject(tile, tileChange)\n        this.setState({selectedTile: \"\"})\n    }\n    /* \n        Function : handleSubmit\n\n        Syntax  : handleSubmit()\n\n        Description : if mapReady == false then it starts the game for other players\n                      else it ends the turn\n\n        Author : Hugo KELHETTER\n    \n    */\n\n\n\n    /*getFinishTourPlayers() {\n        let finishBool = 0;\n        //if(this.state.lstPlayer && this.state.lstPlayer.length){\n        /*for(let i=0; i<this.state.lstPlayer.length; i++){\n            console.log(this.state.lstPlayer[i])\n            if(this.state.lstPlayer[i].Id !== 11){\n                socket.emit(\"getFinishTourPlayer\", this.state.lstPlayer[i].Id, (response) => {\n                    console.log(\"FINISH TOUR \" + this.state.lstPlayer[i].Id + \" : \", response.FinishTour);\n                    finishBool = finishBool + (response.FinishTour? 1: 0);\n                    console.log(\"FINISH TOUR \" + this.state.lstPlayer[i].Id + \" : \", finishBool)\n                })}\n        }\n        this.state.lstPlayer.map(item => {\n            if(item.Id !== 11){\n                socket.emit(\"getFinishTourPlayer\", item.Id, (response) => {\n                    //console.log(\"FINISH TOUR \" + item.Id + \" : \", response.FinishTour);\n                    finishBool = finishBool + (response.FinishTour? 1: 0);\n                    console.log(\"FINISH TOUR \" + item.Id + \" : \", finishBool)\n                })}\n        })\n        //}\n        setTimeout(() => {\n            console.log(\"FINISH BOOL = \", finishBool);\n        }, 500)\n        return finishBool;\n    }*/\n\n    numberPlayers = () => {\n        return this.state.lstPlayer.length - 1;\n    }\n\n    handleSubmit = () => {\n        /*         console.log(this.state.action)\n                switch (this.state.action) {\n                    case \"Commencer la partie\":\n                        this.setState({ mapReady: false })\n                        socket.emit(\"mapReady\")\n                        break;\n                    case \"Terminer la partie\":\n                        socket.emit(\"endGame\")\n                        break;\n                    default:\n                        socket.emit(\"nextTurn\", () => {\n                            socket.emit(\"getTurn\", (response) => {\n                                this.setState({ tour: response })\n                            })\n                        })\n                } */\n        const action = this.actionToString()\n        if (action === \"Finir les modifications\") {\n            if (this.state.tour === -1) {\n                socket.emit(\"mapReady\")\n                console.log(\"mapReady\")\n                this.setState({tour: 0})\n            } else {\n                socket.emit(\"inputPhase\")\n                console.log(\"inputphase\")\n            }\n        } else {\n            let finishBool = 0;\n            //if(this.state.lstPlayer && this.state.lstPlayer.length){\n            /*for(let i=0; i<this.state.lstPlayer.length; i++){\n                console.log(this.state.lstPlayer[i])\n                if(this.state.lstPlayer[i].Id !== 11){\n                    socket.emit(\"getFinishTourPlayer\", this.state.lstPlayer[i].Id, (response) => {\n                        console.log(\"FINISH TOUR \" + this.state.lstPlayer[i].Id + \" : \", response.FinishTour);\n                        finishBool = finishBool + (response.FinishTour? 1: 0);\n                        console.log(\"FINISH TOUR \" + this.state.lstPlayer[i].Id + \" : \", finishBool)\n                    })}\n            }*/\n            this.state.lstPlayer.map(item => {\n                if(item.Id !== 11){\n                    socket.emit(\"getFinishTourPlayer\", item.Id, (response) => {\n                        //console.log(\"FINISH TOUR \" + item.Id + \" : \", response.FinishTour);\n                        finishBool = finishBool + (response.FinishTour? 1: 0);\n                        console.log(\"FINISH TOUR \" + item.Id + \" : \", finishBool)\n                    })}\n            })\n            //}\n            setTimeout(() => {\n                console.log(\"FINISH BOOL = \", finishBool);\n                console.log(\"this.getFinishTourPlayers()\", finishBool);\n                console.log(\"this.numberPlayers\", this.numberPlayers());\n                if(finishBool === this.numberPlayers()){\n                    console.log(\"TOUR FINISHED\");\n                    //console.log(\"this.getFinishTourPlayers()\", finishBool);\n                    socket.emit(\"nextTurn\", () => {\n                        socket.emit(\"getTurn\", (response) => {\n                            //console.log(response)\n                            this.setState({tour: response})\n                        })\n                    })\n                }\n            }, 500)\n            //return finishBool;\n        }\n        console.log(\"TOUR COURANT : \", this.state.tour);\n        this.setState({displayConfirmDialog: false, farmersPlaying: !this.state.farmersPlaying})\n    }\n    cancel = () => {\n        this.setState({displayConfirmDialog: false})\n    }\n    handleContinue = (event) => {\n        /* console.log(event.currentTarget, event.currentTarget.name)\n        this.setState({ farmersPlaying: !this.state.farmersPlaying })\n        if (!this.state.farmersPlaying) { socket.emit(\"inputPhase\", () => { }) } */\n        this.setState({action: event.currentTarget.name, displayConfirmDialog: true})\n    }\n\n    openTuto() {\n        window.open(`${window.location.href}tutorial?tuto=2`)\n    }\n\n    actionToString() {\n        if (this.state.farmersPlaying) return \"Finir le tour\"\n        return \"Finir les modifications\"\n    }\n\n    endGame() {\n        socket.emit(\"endGame\")\n    }\n\n\n    /* author Hossam ELOUATI */\n\n    submit = () => {\n        this.setState({\n            pAgris: this.selectedCheckboxes.has(\" 1.\"),\n            pTimers: this.selectedCheckboxes.has(\" 2.\"),\n            pNumber: this.selectedCheckboxes.has(\" 3.\"),\n            allDefault: false\n        })\n        console.log(this.state.pAgris,this.state.pTimers,this.state.pNumber,this.state.allDefault);\n        if(!this.state.pAgris) {\n            /* Submit les paramètres par défaut des agriculteurs */\n            /*console.log(defaultSettings(this.state.fileAgri, 8));*/\n            //console.log(\"NUMBER AGRIS = \",this.state.agriPlayer.length)\n            socket.emit(\"defaultAgris\", this.state.agriPlayer.length, (response) => {\n                console.log(response);\n            });\n        }\n        if(!this.state.pTimers) {\n            socket.emit(\"settings\", this.state.pAgris, false, this.state.pNumber);\n            /*socket.emit(\"defaultTimer\", (response) => {\n                console.log(\"SETTINGS TIME CONTEXT\");\n                console.log(\"RESPONSE = \", response[0]);\n\n\n                //this.context.updateTimers(response);\n                await this.context.updateTimerUpdating(response[0]);\n                await this.context.updateTimerStrategy(response[1]);\n                await this.context.updateTimerActions(response[2]);\n                await this.context.updateTimerEvents(response[3]);\n                await this.context.updateTimerDebriefing(response[4]);\n                await this.context.updateTimerSatisfaction(response[5]);\n                await this.context.updateTimerResults(response[6]);\n                //console.log(\"CONTEXT IS : \", this.context);\n            });*/\n\n        }\n    }\n\n    createCheckbox = (label) => (\n        <>\n            <label htmlFor={\"agri\"}>\n                <Checkbox label={label} isChecked={ this.selectedCheckboxes.has(label)} handleCheckboxChange={this.toggleCheckbox} key={label}/>\n            </label>\n        </>\n    )\n\n    settingsOptions(nextInterface) {\n        return (\n            <>\n                <div className={Style.Header}>\n                    <div className={Style.Content}>\n                        <div className=\"text-center\">\n                            <div className={Style.TextColor}>\n                                Jeu Sérieux - Le Bassin de Moderbach\n                            </div>\n                        </div>\n                        <div className={Style.TextColor}>\n                            <div className=\"row text-center\">\n                                <div className=\"col-sm-6\">Pseudo : {this.props.pseudo}</div>\n                                <div className=\"col-sm-6\">Rôle : Animateur</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"text-center\">\n                        <button className={StyleStrategy.nextInterface} onClick={nextInterface}>\n                            Passer à l'interface suivante\n                        </button>\n                    </div>\n                    <section className={StyleStrategy.none4}>\n                        <header className=\"text-center\">\n                            <div className={StyleStrategy.header}>\n                                Choisir entre ces options\n                            </div>\n                        </header>\n                        <section className=\"row text-center\">\n                            <div className={StyleStrategy.header2}>\n                                {this.createCheckbox(\" 1.\")} Personnaliser les rôles des agriculteurs\n                                <br/>\n                                {this.createCheckbox(\" 2.\")} Personnaliser les durées de chaque phase\n                                <br/>\n                                {(this.selectedCheckboxes.has(\" 1.\") === false) ?\n                                    (<>\n                                        {this.createCheckbox(\" 3.\")} Choisir un nombre pour chaque type d'agriculteurs\n                                        <br/>\n                                    </>): null}\n                                {/*(this.selectedCheckboxes.has(\" 3.\" === false)) ?\n                                        (<>\n                                            {this.createCheckbox(\" 4.\")} Définir les types d'agriculteurs aléatoirement\n                                        </>) : null\n                                    }\n                                    {(this.selectedCheckboxes.has(\" 4.\" === false)) ?\n                                        (<>\n                                            {this.createCheckbox(\" 3.\")} Choisir un nombre pour chaque type d'agriculteurs\n                                        </>) : null\n                                    }\n                                    <br/>\n                                    </br>) : null*/}\n\n                            </div>\n                            <button onClick={this.submit} className={StyleStrategy.nextInterface}>Valider</button>\n                        </section>\n                    </section>\n                </div>\n            </>\n        );\n    }\n    agriActivity() {\n        return <SetFarmers pseudo={this.props.name}\n                           listAgri={this.state.agriPlayer}\n                            nextInterface={() => this.setState({\n                                interfaceCtx: (this.state.pTimers === true) ? 3 : 4\n                            })}/>\n    }\n\n    /* author Hossam ELOUATI */\n    setTimers() {\n        return <SetTimeInterface pseudo={this.props.name}\n                                 nextInterface={() => this.setState({interfaceCtx: 4})}/>\n    }\n\n    /*settings() {\n        return <Settings pseudo={this.props.name} nextInterface={\n            () => this.setState({\n                    interfaceCtx: (this.state.pAgris === true) ? 2 : (this.state.pTimers === true) ? 3 : 4\n                })}/>\n    }*/\n\n    /*     Description : display the UI of the animator : the map, and controls over the map and the game in general\n    *       Author : Hugo KELHETTER\n    * */\n    principal() {\n        {console.log(\"LIST PLAYER = \", this.state.lstPlayer)}\n        {this.state.listPlayer.map(item => (\n            console.log(\"ID : \" + item.Id + \" Name : \" + item.Name)))}\n        const buttonValue = this.actionToString()\n        //const buttonValue = this.state.mapReady ? \"Commencer la partie\" : `Terminer le tour ${this.state.tour}`\n        return (<>\n            {this.state.displayConfirmDialog &&\n            <ConfirmDialog cancel={this.cancel} confirm={this.handleSubmit} action={this.state.action}/>}\n\n            <div className=\"App\">\n                {\n                    < Menu>\n                        <div id=\"menu\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.openTuto}>\n                                Aide\n                            </Button>\n                            <Typography>tour actuel : {this.state.tour}</Typography>\n                            <Typography> {this.state.mapReady && \"Vous pouvez modifier la carte avant le début de la partie. \"}</Typography>\n                            <Typography> Cliquez sur une case pour apporter des modifications</Typography>\n                            <Typography> L'identifiant de la partie est : {this.props.room}</Typography>\n                            <Button variant=\"contained\" color=\"primary\" data-testid=\"submit\" name={buttonValue}\n                                    value={buttonValue} onClick={this.handleContinue}>\n                                {buttonValue}\n                            </Button>\n\n                            <Button variant=\"contained\" color=\"primary\" data-testid=\"submit\" name=\"Terminer la partie\"\n                                    onClick={this.endGame}>\n                                Terminer la partie\n                            </Button>\n                        </div>\n                        {(this.state.lstPlayer !== \"\" && this.state.lstTile !== \"\" && this.state.selectedTile && !this.state.farmersPlaying) &&\n                        <div id=\"changeTile\">\n                            <ChangeTile lstPlayer={this.state.lstPlayer} lstTile={this.state.map.moreHexas}\n                                        updateMap={this.updateMap}\n                                        selectedTile={this.state.selectedTile} type={this.state.selectedTile.className}\n                                        id={this.state.selectedTile.id}/>\n                        </div>\n                        }\n                    </Menu>\n                }\n                    {\n                        this.state.map.moreHexas !== \"\" &&\n                        <Bassin handleClick={this.handleClickTile} selectedId={this.state.selectedTile?.id}\n                                map={this.state.map} role={this.props.role} id={this.state.id}/>\n                    }\n            </div>\n        </>);\n    }\n\n    /*\n    Function : render\n\n    Syntax  : render()\n\n    Description : display the UI of the animator : the map, and controls over the map and the game in general\n\n    Author : Hossam ELOUATI\n \n*/\n    render() {\n        return (\n            <>\n                {\n                    this.state.interfaceCtx === 2 ? this.agriActivity() :\n                        this.state.interfaceCtx === 3 ? this.setTimers() :\n                            this.state.interfaceCtx === 1 ? this.settingsOptions(() => this.setState({\n                                    interfaceCtx: (this.state.pAgris === true) ? 2 : (this.state.pTimers === true) ? 3 : 4\n                                })):\n                                this.principal()\n                }\n                {/*{console.log(\"STATE ID = \" + this.state.id + \"\\nROLE = \"+this.props.role)}\n                <Updating ut={23} ub={3} oldUb={-1} oldUt={0} formations={[1, 0, 9, 1]} role={this.props.role} h={0} m={0} s={20}\n                   pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))} numeroPhase={1} tour={this.state.tour}/>);*/}\n            </> )\n    }\n}"]},"metadata":{},"sourceType":"module"}