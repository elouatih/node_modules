{"ast":null,"code":"import _classCallCheck from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{socket}from\"../../socket.js\";import{Button}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ValidationTour=/*#__PURE__*/function(_React$Component){_inherits(ValidationTour,_React$Component);var _super=_createSuper(ValidationTour);/* \n        Input : props={tour,actions}\n                tour : number : number of round\n                actions : list of  actions played for each tile\n\n        Syntax : <ValidationTour tour={number of the round} actions={list of actions} />\n    */function ValidationTour(props){var _this;_classCallCheck(this,ValidationTour);_this=_super.call(this,props);_this.handleSubmit=function(){/*         const origin = this.props.origin\n                const updated = this.props.updated\n        \n                this.setState({ validated: true })\n                let log = {}\n                for (const index in origin) {\n                    let subLog = {}\n                    for (const entry in origin[index]) {\n                        if (origin[index][entry] !== updated[index][entry]) subLog.activity = updated[index][entry]\n                    }\n                    if (Object.entries(subLog).length !== 0) log[index] = subLog\n        \n                } */ //let actions = [{ hexID: 13, action: \"swapActivity\", typeAction: 0 }]\nvar lstActions=_this.props.actions;delete lstActions.cost;socket.emit(\"addActions\",lstActions,function(){});console.log(lstActions);_this.props.endRound();//const csv = this.generateCSV(this.props.actions)\n};_this.state={validated:false};//this.handleSubmit = this.handleSubmit.bind(this)\nreturn _this;}_createClass(ValidationTour,[{key:\"generateCSV\",value:/* \n        Function : generateCSV \n        \n        Syntax  : csvData=generateCSV(data)\n        \n        Input   : data : an object to convert\n            \n        Outputs : csvData : input object with csv format\n    \n        Description : convert an object to csv format\n      \n        Author : Hugo KELHETTER\n    */function generateCSV(data){var str=\"\";console.log(Object.keys(data));if(data!==undefined){str=Object.keys(data)+\"\\n\";str+=Object.values(data)+\"\\n\";}console.log(str);return str;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(prevProps.tour!==this.props.tour)this.setState({validated:false});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(_Fragment,{children:this.state.validated?/*#__PURE__*/_jsx(\"p\",{children:\"Nombre de joueurs pr\\xEAts : nb joueurs pr\\xEAts/ nb joueurs totaux\"}):/*#__PURE__*/_jsx(Button,{onClick:this.handleSubmit,className:\"validation\",variant:\"contained\",color:\"primary\",children:\"Finir le tour\"})});}}]);return ValidationTour;}(React.Component);export default ValidationTour;","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/controls/ValidationTour.js"],"names":["React","socket","Button","ValidationTour","props","handleSubmit","lstActions","actions","cost","emit","console","log","endRound","state","validated","data","str","Object","keys","undefined","values","prevProps","prevState","tour","setState","Component"],"mappings":"onBAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,iBAAvB,CAEA,OAASC,MAAT,KAAuB,mBAAvB,C,mGAEMC,CAAAA,c,4HACF;AACJ;AACA;AACA;AACA;AACA;AACA,MACI,wBAAYC,KAAZ,CAAmB,gDACf,uBAAMA,KAAN,EADe,MAmBnBC,YAnBmB,CAmBJ,UAAM,CACjB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAbyB,CAcjB;AACA,GAAIC,CAAAA,UAAU,CAAG,MAAKF,KAAL,CAAWG,OAA5B,CACA,MAAOD,CAAAA,UAAU,CAACE,IAAlB,CACAP,MAAM,CAACQ,IAAP,CAAY,YAAZ,CAA0BH,UAA1B,CAAsC,UAAM,CAAG,CAA/C,EACAI,OAAO,CAACC,GAAR,CAAYL,UAAZ,EACA,MAAKF,KAAL,CAAWQ,QAAX,GACA;AACH,CAxCkB,CAEf,MAAKC,KAAL,CAAa,CAAEC,SAAS,CAAE,KAAb,CAAb,CACA;AAHe,aAIlB,C,sDAqCD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACI,qBAAYC,IAAZ,CAAkB,CACd,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACAN,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAZ,EACA,GAAIA,IAAI,GAAKI,SAAb,CAAwB,CACpBH,GAAG,CAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAoB,IAA1B,CAGAC,GAAG,EAAIC,MAAM,CAACG,MAAP,CAAcL,IAAd,EAAsB,IAA7B,CACH,CACDL,OAAO,CAACC,GAAR,CAAYK,GAAZ,EACA,MAAOA,CAAAA,GAAP,CACH,C,kCACD,4BAAmBK,SAAnB,CAA8BC,SAA9B,CAAyC,CACrC,GAAID,SAAS,CAACE,IAAV,GAAmB,KAAKnB,KAAL,CAAWmB,IAAlC,CAAwC,KAAKC,QAAL,CAAc,CAAEV,SAAS,CAAE,KAAb,CAAd,EAC3C,C,sBAED,iBAAS,CAEL,mBACI,yBACK,KAAKD,KAAL,CAAWC,SAAX,cAAuB,0FAAvB,cACG,KAAC,MAAD,EAAQ,OAAO,CAAE,KAAKT,YAAtB,CAAoC,SAAS,CAAC,YAA9C,CAA2D,OAAO,CAAC,WAAnE,CAA+E,KAAK,CAAC,SAArF,2BAFR,EADJ,CAMH,C,4BAtFwBL,KAAK,CAACyB,S,EAyFnC,cAAetB,CAAAA,cAAf","sourcesContent":["\n\nimport React from 'react'\nimport { socket } from \"../../socket.js\"\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core'\n\nclass ValidationTour extends React.Component {\n    /* \n        Input : props={tour,actions}\n                tour : number : number of round\n                actions : list of  actions played for each tile\n\n        Syntax : <ValidationTour tour={number of the round} actions={list of actions} />\n    */\n    constructor(props) {\n        super(props)\n        this.state = { validated: false }\n        //this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    static propTypes = {\n        tour: PropTypes.number.isRequired,\n        actions: PropTypes.object.isRequired\n    }\n    /* \n        Function : handleSubmit\n     \n        Syntax  : handleSubmit()\n     \n        Description : compare the objects origin and updated from the props and \n                        create a new object containing all the differences\n        \n        Author : Hugo KELHETTER\n    */\n    handleSubmit = () => {\n        /*         const origin = this.props.origin\n                const updated = this.props.updated\n        \n                this.setState({ validated: true })\n                let log = {}\n                for (const index in origin) {\n                    let subLog = {}\n                    for (const entry in origin[index]) {\n                        if (origin[index][entry] !== updated[index][entry]) subLog.activity = updated[index][entry]\n                    }\n                    if (Object.entries(subLog).length !== 0) log[index] = subLog\n        \n                } */\n        //let actions = [{ hexID: 13, action: \"swapActivity\", typeAction: 0 }]\n        let lstActions = this.props.actions\n        delete lstActions.cost\n        socket.emit(\"addActions\", lstActions, () => { })\n        console.log(lstActions)\n        this.props.endRound()\n        //const csv = this.generateCSV(this.props.actions)\n    }\n    /* \n        Function : generateCSV \n        \n        Syntax  : csvData=generateCSV(data)\n        \n        Input   : data : an object to convert\n            \n        Outputs : csvData : input object with csv format\n    \n        Description : convert an object to csv format\n      \n        Author : Hugo KELHETTER\n    */\n    generateCSV(data) {\n        let str = \"\"\n        console.log(Object.keys(data))\n        if (data !== undefined) {\n            str = Object.keys(data) + \"\\n\";\n\n\n            str += Object.values(data) + \"\\n\";\n        }\n        console.log(str)\n        return str;\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.tour !== this.props.tour) this.setState({ validated: false })\n    }\n\n    render() {\n\n        return (\n            <>\n                {this.state.validated ? <p>Nombre de joueurs prêts : nb joueurs prêts/ nb joueurs totaux</p> :\n                    <Button onClick={this.handleSubmit} className=\"validation\" variant=\"contained\" color=\"primary\">Finir le tour</Button>}\n            </>\n        )\n    }\n}\n\nexport default ValidationTour"]},"metadata":{},"sourceType":"module"}