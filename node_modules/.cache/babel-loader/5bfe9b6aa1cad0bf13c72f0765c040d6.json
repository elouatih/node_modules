{"ast":null,"code":"import _classCallCheck from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{HexGrid,Layout,Path,Hexagon,Text}from'react-hexgrid';import layoutProps from'./layoutProps.js';import{setPlayerClass,getSubBassin,setMapSize,setBaseClasses}from'./MapUtil.js';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Bassin=/*#__PURE__*/function(_Component){_inherits(Bassin,_Component);var _super=_createSuper(Bassin);function Bassin(props){var _this;_classCallCheck(this,Bassin);_this=_super.call(this,props);_this.update=function(){_this.forceUpdate();};_this.update=_this.update.bind(_assertThisInitialized(_this));return _this;}/* \n        Input : props={map:{moreHexas,moreRivers,player},handleClick,role,selectedId}\n                map.moreHexas : object : contains all data to create the map\n                map.Rivers : array : contains object to create river\n                        They look like that {start,end,outletFlowAcc}\n                        start : hexagon where the river stats\n                        end : hexagon where the river ends\n                        outletFlowAcc : how much water there is\n                handleClick : func : set the selected tile in parent component\n                selectedId : number : id of the selected tile\n\n        Syntax : <Bassin map={moreHewas,moreRivers,player} handleClick={this.handleClick} \n            role={role} selectedId={selectedId} />\n    */_createClass(Bassin,[{key:\"componentDidMount\",value:function componentDidMount(){/* \n            re-render when window is resized\n            allows to update dimensions of Hexgrid\n        */window.addEventListener('resize',this.update);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.update);}/* \n        Function : createHexeFarmer\n    \n        Syntax\n            <Hexagon/>=createHexeFarmer(hex,i)        \n        \n        Input\n            hex :object containing the data to create the hexagon\n            i   :hex's id\n    \n        Outputs\n            polygon :polygon of type svg with hexagon shape\n            text    :text inside the polygon countaining hex's id + 1\n    \n        Description\n            returns the following architecture:\n                <g class='hexagon-group' plus some others such as the output of activityToString>\n                    <g>\n                        <polygon/>\n                        <text/>\n                    </g>\n                </g>\n        \n        see /src/map/MapUtil.js for more information about hex'properties\n    \n        Author : Hugo KELHETTER\n    */},{key:\"createHexeFarmer\",value:function createHexeFarmer(hex,i,player){var _this2=this;if(hex.basin===getSubBassin(player)){var bassin=getSubBassin(player);var classname=\"\";var mainCLC1=hex.mainCLC1.toString();classname+=hex.basin===bassin?\"\".concat(hex.modified,\" \").concat(setBaseClasses(hex),\" \\n        \").concat(setPlayerClass(hex.player),\" \").concat(hex.player%3,\" \").concat(hex.Id):\"notInBassin\";if(hex.Id===this.props.selectedId)classname+=\" selected\";return/*#__PURE__*/_jsxs(Hexagon,{onClick:function onClick(e,h){return hex.player===player&&_this2.props.handleClick(h);},mainCLC1:mainCLC1,irrig:hex.irrig,eco:hex.eco,market:hex.market,className:classname/* data can be found in h.props in handleClick */,subId:hex.cellPlayer,id:hex.Id,q:hex.q,r:hex.r,s:hex.s,practice:hex.practice,children:[hex.basin===bassin&&hex.cellPlayer!=null&&hex.cellPlayer>0&&this.displayTextTop(hex.cellPlayer),hex.basin===bassin&&mainCLC1===1&&hex.market===1&&this.displayTextBottom(\"M\"),hex.basin===bassin&&hex.irrig===1&&this.displayTextBottom(\"ðŸ’§\")]},hex.Id);}}/* same thing as createHexeFarm but for elected players */},{key:\"createHexeElected\",value:function createHexeElected(hex,i){var _this3=this;var classname=setBaseClasses(hex);if(hex.Id===this.props.selectedId)classname+=\" selected\";var mainCLC1=hex.mainCLC1.toString();return/*#__PURE__*/_jsxs(Hexagon,{onClick:function onClick(e,h){return _this3.props.handleClick(h);},className:classname,id:i,q:hex.q,r:hex.r,s:hex.s,mainCLC1:mainCLC1,irrig:hex.irrig,eco:hex.eco,market:hex.market,children:[hex.cellPlayer!=null&&this.displayTileId(hex.cellPlayer),mainCLC1===1&&this.displayMarket(hex.market)]},i);}/* same thing as createHexeFarmer but for animator */},{key:\"createHexeAnimator\",value:function createHexeAnimator(hex,i){var _this4=this;var classname=setBaseClasses(hex);if(hex.Id===this.props.selectedId)classname+=\" selected\";var mainCLC1=hex.mainCLC1.toString();return/*#__PURE__*/_jsxs(Hexagon,{className:classname,bassin:hex.basin,player:hex.player,onClick:function onClick(e,h){return _this4.props.handleClick(h);},id:hex.Id,q:hex.q,r:hex.r,s:hex.s,mainCLC1:mainCLC1,irrig:hex.irrig,eco:hex.eco,market:hex.market,practice:hex.practice,children:[hex.cellPlayer!=null&&this.displayTileId(hex.cellPlayer),mainCLC1===1&&this.displayMarket(hex.market),hex.irrig===1&&this.displayTextBottom(\"ðŸ’§\")]},hex.Id);}/* \n        Function : displayTileId \n        \n        Syntax  :  displayTileId(text)\n        \n        Input   : text : text to display\n            \n        Description : return an object <Text> containing the input text\n            \n        Author : Hugo KELHETTER\n    */},{key:\"displayTileId\",value:function displayTileId(id){return id>0&&/*#__PURE__*/_jsx(Text,{y:-2,children:id.toString()},\"tileId\");}},{key:\"displayMarket\",value:function displayMarket(market){return market===1&&/*#__PURE__*/_jsx(Text,{y:2,children:\"M\"},\"market\");}/* \n        Function : displayTextBottom \n        \n        Syntax  :  displayTextBottom(text)\n        \n        Input   : text : text to display\n            \n        Description : return an object <Text> containing the input text at the bottom of the parent\n            \n        Author : Hugo KELHETTER\n    */},{key:\"displayTextBottom\",value:function displayTextBottom(text){return/*#__PURE__*/_jsx(Text,{y:2,children:text},text);}/* \n        Function : displayTextTop \n        \n        Syntax  :  displayTextTop(text)\n        \n        Input   : text : text to display\n            \n        Description : return an object <Text> containing the input text at the top of the parent\n            \n        Author : Hugo KELHETTER\n    */},{key:\"displayTextTop\",value:function displayTextTop(text){return/*#__PURE__*/_jsx(Text,{y:-2,children:text},text);}/* \n        Function : render \n        \n        Description : display an hexagonal grid and rivers\n        \n        Author : Hugo KELHETTER\n    */},{key:\"render\",value:function render(){var _this5=this;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(HexGrid,{width:setMapSize(),height:setMapSize(),viewBox:\"-50 -50 100 100\",children:/*#__PURE__*/_jsxs(Layout,{size:layoutProps.size,flat:layoutProps.flat,spacing:layoutProps.spacing,origin:{x:layoutProps.x,y:layoutProps.y},children:[Object.values(this.props.map.moreHexas).map(function(hex,i){return _this5.props.role===1?_this5.createHexeFarmer(hex,i,_this5.props.id):_this5.props.role===2?_this5.createHexeElected(hex,i):_this5.createHexeAnimator(hex,i);}),this.props.map.moreRivers.map(function(river,i){return/*#__PURE__*/_jsx(\"g\",{className:river.start.outletFlowAcc===1?\"small\":\"\",children:_this5.props.role===1&&river.end!==undefined&&river.start.basin!==getSubBassin(_this5.props.id)?\"\":/*#__PURE__*/_jsx(Path,{start:river.start,end:river.end},i)},i);})]})})});}}]);return Bassin;}(Component);export{Bassin as default};","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/map/Bassin.js"],"names":["React","Component","HexGrid","Layout","Path","Hexagon","Text","layoutProps","setPlayerClass","getSubBassin","setMapSize","setBaseClasses","Bassin","props","update","forceUpdate","bind","window","addEventListener","removeEventListener","hex","i","player","basin","bassin","classname","mainCLC1","toString","modified","Id","selectedId","e","h","handleClick","irrig","eco","market","cellPlayer","q","r","s","practice","displayTextTop","displayTextBottom","displayTileId","displayMarket","id","text","size","flat","spacing","x","y","Object","values","map","moreHexas","role","createHexeFarmer","createHexeElected","createHexeAnimator","moreRivers","river","start","outletFlowAcc","end","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { HexGrid, Layout, Path, Hexagon, Text } from 'react-hexgrid'\nimport layoutProps from './layoutProps.js'\nimport { setPlayerClass, getSubBassin, setMapSize, setBaseClasses } from './MapUtil.js'\nimport PropTypes from 'prop-types';\nexport default class Bassin extends Component {\n    constructor(props) {\n        super(props)\n        this.update = this.update.bind(this)\n    }\n\n    /* \n        Input : props={map:{moreHexas,moreRivers,player},handleClick,role,selectedId}\n                map.moreHexas : object : contains all data to create the map\n                map.Rivers : array : contains object to create river\n                        They look like that {start,end,outletFlowAcc}\n                        start : hexagon where the river stats\n                        end : hexagon where the river ends\n                        outletFlowAcc : how much water there is\n                handleClick : func : set the selected tile in parent component\n                selectedId : number : id of the selected tile\n\n        Syntax : <Bassin map={moreHewas,moreRivers,player} handleClick={this.handleClick} \n            role={role} selectedId={selectedId} />\n    */\n    static propTypes = {\n        map: PropTypes.object.isRequired,\n        handleClick: PropTypes.func.isRequired,\n        role: PropTypes.number.isRequired,\n        selectedId: PropTypes.number\n    }\n    update = () => {\n        this.forceUpdate()\n    }\n    componentDidMount() {\n        /* \n            re-render when window is resized\n            allows to update dimensions of Hexgrid\n        */\n        window.addEventListener('resize', this.update)\n\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.update)\n    }\n\n    /* \n        Function : createHexeFarmer\n    \n        Syntax\n            <Hexagon/>=createHexeFarmer(hex,i)        \n        \n        Input\n            hex :object containing the data to create the hexagon\n            i   :hex's id\n    \n        Outputs\n            polygon :polygon of type svg with hexagon shape\n            text    :text inside the polygon countaining hex's id + 1\n    \n        Description\n            returns the following architecture:\n                <g class='hexagon-group' plus some others such as the output of activityToString>\n                    <g>\n                        <polygon/>\n                        <text/>\n                    </g>\n                </g>\n        \n        see /src/map/MapUtil.js for more information about hex'properties\n    \n        Author : Hugo KELHETTER\n    */\n    createHexeFarmer(hex, i, player) {\n        if (hex.basin === getSubBassin(player)) {\n            const bassin = getSubBassin(player)\n            let classname = \"\";\n            const mainCLC1 = hex.mainCLC1.toString()\n            classname += hex.basin === bassin ? `${hex.modified} ${setBaseClasses(hex)} \n        ${setPlayerClass(hex.player)} ${hex.player % 3} ${hex.Id}` : \"notInBassin\"\n            if (hex.Id === this.props.selectedId) classname += \" selected\"\n            return <Hexagon\n                onClick={(e, h) => hex.player === player && this.props.handleClick(h)}\n                mainCLC1={mainCLC1} irrig={hex.irrig} eco={hex.eco} market={hex.market}\n                className={classname}\n                /* data can be found in h.props in handleClick */\n                subId={hex.cellPlayer}\n                key={hex.Id} id={hex.Id} q={hex.q} r={hex.r} s={hex.s}\n                practice={hex.practice}\n            >\n                {(hex.basin === bassin && hex.cellPlayer != null && hex.cellPlayer > 0) && this.displayTextTop(hex.cellPlayer)}\n                {(hex.basin === bassin && mainCLC1 === 1 && hex.market === 1) && this.displayTextBottom(\"M\")}\n                {(hex.basin === bassin && hex.irrig === 1) && this.displayTextBottom(\"ðŸ’§\")}\n\n            </Hexagon>\n        }\n    }\n    /* same thing as createHexeFarm but for elected players */\n    createHexeElected(hex, i) {\n        let classname = setBaseClasses(hex)\n        if (hex.Id === this.props.selectedId) classname += \" selected\"\n        const mainCLC1 = hex.mainCLC1.toString()\n        return <Hexagon\n            onClick={(e, h) => this.props.handleClick(h)}\n\n            className={classname}\n            key={i} id={i} q={hex.q} r={hex.r} s={hex.s}\n            mainCLC1={mainCLC1} irrig={hex.irrig} eco={hex.eco} market={hex.market}\n        >\n            {hex.cellPlayer != null && this.displayTileId(hex.cellPlayer)}\n            {mainCLC1 === 1 && this.displayMarket(hex.market)}\n\n        </Hexagon >\n    }\n    /* same thing as createHexeFarmer but for animator */\n    createHexeAnimator(hex, i) {\n        let classname = setBaseClasses(hex)\n        if (hex.Id === this.props.selectedId) classname += \" selected\"\n        const mainCLC1 = hex.mainCLC1.toString()\n        return <Hexagon\n            className={classname}\n            bassin={hex.basin}\n            player={hex.player}\n            onClick={(e, h) => this.props.handleClick(h)}\n            key={hex.Id} id={hex.Id} q={hex.q} r={hex.r} s={hex.s}\n            mainCLC1={mainCLC1} irrig={hex.irrig} eco={hex.eco} market={hex.market}\n            practice={hex.practice}\n        >\n            {hex.cellPlayer != null && this.displayTileId(hex.cellPlayer)}\n            {mainCLC1 === 1 && this.displayMarket(hex.market)}\n            {(hex.irrig === 1) && this.displayTextBottom(\"ðŸ’§\")}\n\n        </Hexagon>\n    }\n    /* \n        Function : displayTileId \n        \n        Syntax  :  displayTileId(text)\n        \n        Input   : text : text to display\n            \n        Description : return an object <Text> containing the input text\n            \n        Author : Hugo KELHETTER\n    */\n    displayTileId(id) {\n        return id > 0 && <Text key=\"tileId\" y={-2}>{id.toString()}</Text>\n    }\n    displayMarket(market) {\n        return market === 1 && <Text key=\"market\" y={2}>M</Text>\n    }\n    /* \n        Function : displayTextBottom \n        \n        Syntax  :  displayTextBottom(text)\n        \n        Input   : text : text to display\n            \n        Description : return an object <Text> containing the input text at the bottom of the parent\n            \n        Author : Hugo KELHETTER\n    */\n    displayTextBottom(text) {\n        return <Text key={text} y={2}>{text}</Text>\n    }\n    /* \n        Function : displayTextTop \n        \n        Syntax  :  displayTextTop(text)\n        \n        Input   : text : text to display\n            \n        Description : return an object <Text> containing the input text at the top of the parent\n            \n        Author : Hugo KELHETTER\n    */\n    displayTextTop(text) {\n        return <Text key={text} y={-2}>{text}</Text>\n    }\n\n    /* \n        Function : render \n        \n        Description : display an hexagonal grid and rivers\n        \n        Author : Hugo KELHETTER\n    */\n    render() {\n        return (<>\n            <HexGrid width={setMapSize()} height={setMapSize()} viewBox=\"-50 -50 100 100\" >\n                <Layout size={layoutProps.size} flat={layoutProps.flat}\n                    spacing={layoutProps.spacing} origin={{ x: layoutProps.x, y: layoutProps.y }} >\n                    {/* loops are done separetly because else the rivers may not always be visible */}\n                    {Object.values(this.props.map.moreHexas).map((hex, i) =>\n                        this.props.role === 1 ? this.createHexeFarmer(hex, i, this.props.id) :\n                            this.props.role === 2 ? this.createHexeElected(hex, i) :\n                                this.createHexeAnimator(hex, i)\n                    )}\n                    {this.props.map.moreRivers.map((river, i) =>\n                        <g key={i} className={river.start.outletFlowAcc === 1 ? \"small\" : \"\"} >\n                            {(this.props.role === 1 && river.end !== undefined) && river.start.basin !== getSubBassin(this.props.id) ? \"\" :\n                                <Path\n                                    key={i} start={river.start} end={river.end}\n                                />}\n\n                        </g>)}\n                </Layout>\n            </HexGrid >\n        </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}