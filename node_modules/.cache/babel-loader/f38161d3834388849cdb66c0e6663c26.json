{"ast":null,"code":"import _objectSpread from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* \n    Function : handleClickTile\n\n    Syntax  : handleClickTile(h)\n        \n    Input   : h : data of the selectedTile\n        \n    Description : \n        change the state of selectedTile based on which tile is clicked and the current state\n        if the current state's id is equal to h's id, the state is set to null\n        else it is updated to h's data     \n\n    Author : Hugo KELHETTER\n*/import{socket}from\"../../socket\";function handleClickTile(h){var _this$state$selectedT,_this$state$selectedT2,_this=this;console.log(\"h.props.id = \"+h.props.id+\" .state.selectedTile.id = \"+((_this$state$selectedT=this.state.selectedTile)===null||_this$state$selectedT===void 0?void 0:_this$state$selectedT.id));if(h.props.id===((_this$state$selectedT2=this.state.selectedTile)===null||_this$state$selectedT2===void 0?void 0:_this$state$selectedT2.id)){this.setState({selectedTile:null});}else{var _this$state$selectedT3;this.setState({selectedTile:h.props});console.log(this.state.id);console.log(\"SELECTED TILE \",(_this$state$selectedT3=this.state.selectedTile)===null||_this$state$selectedT3===void 0?void 0:_this$state$selectedT3.id);if(this.props.role===1){socket.emit(\"getPlayerActivity\",this.state.id,h.props.id,function(response){console.log(\"GET PLAYER ACTIVITY IS : \",response[0]);//let { selectedTile } = this.state;\n_this.setState({selectedTile:_objectSpread(_objectSpread({},_this.state.selectedTile),{},{practice:response[0].practice})});//console.log(this.state.selectedTile.practice);\n/*const newSelectedTile = this.state.selectedTile;\n                //console.log(newSelectedTile);\n                //newSelectedTile.practice = response[0].practice;\n                this.setState({[this.state.selectedTile.practice]: response[0].practice});\n                console.log(this.state.selectedTile)*/});}}}export default handleClickTile;","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/controls/handleClickTileFarmer.js"],"names":["socket","handleClickTile","h","console","log","props","id","state","selectedTile","setState","role","emit","response","practice"],"mappings":"gKAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAAQA,MAAR,KAAqB,cAArB,CAEA,QAASC,CAAAA,eAAT,CAAyBC,CAAzB,CAA4B,6DACxBC,OAAO,CAACC,GAAR,CAAY,gBAAkBF,CAAC,CAACG,KAAF,CAAQC,EAA1B,CAA+B,4BAA/B,yBAA8D,KAAKC,KAAL,CAAWC,YAAzE,gDAA8D,sBAAyBF,EAAvF,CAAZ,EACA,GAAIJ,CAAC,CAACG,KAAF,CAAQC,EAAR,4BAAe,KAAKC,KAAL,CAAWC,YAA1B,iDAAe,uBAAyBF,EAAxC,CAAJ,CAAgD,CAC5C,KAAKG,QAAL,CAAc,CAAED,YAAY,CAAE,IAAhB,CAAd,EACH,CAFD,IAGK,4BACD,KAAKC,QAAL,CAAc,CAAED,YAAY,CAAEN,CAAC,CAACG,KAAlB,CAAd,EACAF,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWD,EAAvB,EACAH,OAAO,CAACC,GAAR,CAAY,gBAAZ,yBAA8B,KAAKG,KAAL,CAAWC,YAAzC,iDAA8B,uBAAyBF,EAAvD,EACA,GAAG,KAAKD,KAAL,CAAWK,IAAX,GAAoB,CAAvB,CAAyB,CACrBV,MAAM,CAACW,IAAP,CAAY,mBAAZ,CAAiC,KAAKJ,KAAL,CAAWD,EAA5C,CAAgDJ,CAAC,CAACG,KAAF,CAAQC,EAAxD,CAA6D,SAAAM,QAAQ,CAAI,CACrET,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyCQ,QAAQ,CAAC,CAAD,CAAjD,EACA;AACA,KAAI,CAACH,QAAL,CAAc,CACVD,YAAY,gCACL,KAAI,CAACD,KAAL,CAAWC,YADN,MAERK,QAAQ,CAAED,QAAQ,CAAC,CAAD,CAAR,CAAYC,QAFd,EADF,CAAd,EAMA;AACA;AAChB;AACA;AACA;AACA,sDACa,CAfD,EAgBH,CACJ,CACJ,CACD,cAAeZ,CAAAA,eAAf","sourcesContent":["/* \n    Function : handleClickTile\n\n    Syntax  : handleClickTile(h)\n        \n    Input   : h : data of the selectedTile\n        \n    Description : \n        change the state of selectedTile based on which tile is clicked and the current state\n        if the current state's id is equal to h's id, the state is set to null\n        else it is updated to h's data     \n\n    Author : Hugo KELHETTER\n*/\nimport {socket} from \"../../socket\";\n\nfunction handleClickTile(h) {\n    console.log(\"h.props.id = \" + h.props.id + \" .state.selectedTile.id = \" + this.state.selectedTile?.id)\n    if (h.props.id === this.state.selectedTile?.id) {\n        this.setState({ selectedTile: null })\n    }\n    else {\n        this.setState({ selectedTile: h.props })\n        console.log(this.state.id);\n        console.log(\"SELECTED TILE \", this.state.selectedTile?.id);\n        if(this.props.role === 1){\n            socket.emit(\"getPlayerActivity\", this.state.id, h.props.id, (response => {\n                console.log(\"GET PLAYER ACTIVITY IS : \", response[0]);\n                //let { selectedTile } = this.state;\n                this.setState({\n                    selectedTile : {\n                        ...this.state.selectedTile,\n                        practice: response[0].practice\n                    }\n                })\n                //console.log(this.state.selectedTile.practice);\n                /*const newSelectedTile = this.state.selectedTile;\n                //console.log(newSelectedTile);\n                //newSelectedTile.practice = response[0].practice;\n                this.setState({[this.state.selectedTile.practice]: response[0].practice});\n                console.log(this.state.selectedTile)*/\n            }))\n        }\n    }\n}\nexport default handleClickTile"]},"metadata":{},"sourceType":"module"}