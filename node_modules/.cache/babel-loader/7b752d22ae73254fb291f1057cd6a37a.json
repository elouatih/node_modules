{"ast":null,"code":"import _defineProperty from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Select from'@material-ui/core/Select';import FormLabel from'@material-ui/core/FormLabel';import createCheckbox from\"./createCheckbox.js\";import{Button}from'@material-ui/core';import MenuItem from'@material-ui/core/MenuItem';import{Typography}from'@material-ui/core';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var ActivitySwapper=/*#__PURE__*/function(_React$Component){_inherits(ActivitySwapper,_React$Component);var _super=_createSuper(ActivitySwapper);/*    \n        Input : props={changeTileActivity,selectedTile,actions}\n                changeTileActivity : func : function declared in parent to change tile(s)'s activity\n                selectedTile : object : tile selected by the player\n                actions : object : list of all the available actions\n\n        Syntax : <ActivitySwapper changeTileActivity={this.changeTileActivity} \n            selectedTile={the selected tile} actions={the list of actions} />\n\n        Author : Hugo KELHETTER            \n    */function ActivitySwapper(props){var _this;_classCallCheck(this,ActivitySwapper);_this=_super.call(this,props);_this.handleChange=function(event){var target=event.target;var value=target.type==='checkbox'?target.checked:target.value;_this.setState(_defineProperty({},target.name,value));};_this.handleSubmit=function(event){event.preventDefault();if(_this.state.selectActivity!=null){_this.props.changeTileActivity(_this.props.actions[_this.state.selectActivity],_this.state.checkbox);}};_this.state={selectActivity:0,checkbox:false};_this.createCheckbox=createCheckbox.bind(_assertThisInitialized(_this));//this.handleChange = this.handleChange.bind(this);\n//this.handleSubmit = this.handleSubmit.bind(this);\nreturn _this;}_createClass(ActivitySwapper,[{key:\"actionToString\",value:function actionToString(action,id){var i=0;/*while (action[i].Id !== id) {\n            console.log(action[i], id)\n            i++\n        }*/return action[i].Pratique;}/* \n        Function : render\n    \n        Syntax  : render()\n            \n        Description : display the form to change tile/subBasin's activityy\n           \n        Author : Hugo KELHETTER\n    */},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsxs(FormLabel,{children:[\"Choisissez votre nouvelle activit\\xE9 pour\",this.state.checkbox?' le sous bassin':'la case ${this.props.selectedTile.subId}']}),/*#__PURE__*/_jsxs(Typography,{children:[\"Activit\\xE9 en cours : \",this.actionToString(this.props.actions,this.props.selectedTile.practice)]}),/*#__PURE__*/_jsx(Select,{name:\"selectActivity\",onChange:this.handleChange,value:this.state.selectActivity,children:this.props.actions.map(function(action,i){return/*#__PURE__*/_jsx(MenuItem,{value:i,children:action.Pratique},i);})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormLabel,{children:[\"modifier toutes les cases\",this.createCheckbox(\"checkbox\")]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:this.handleSubmit,children:\"Envoyer\"})]});}}]);return ActivitySwapper;}(React.Component);export default ActivitySwapper;/*\necran de fin de partie\nselection activit√© de derniere partie\nvalidation prochain tour\nrecuperation du tour depuis le serveur\nchanger style des boutons radios\n\n*/","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/controls/ActivitySwapper.js"],"names":["React","Select","FormLabel","createCheckbox","Button","MenuItem","Typography","ActivitySwapper","props","handleChange","event","target","value","type","checked","setState","name","handleSubmit","preventDefault","state","selectActivity","changeTileActivity","actions","checkbox","bind","action","id","i","Pratique","actionToString","selectedTile","practice","map","Component"],"mappings":"w8BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,OAASC,UAAT,KAA2B,mBAA3B,C,2FACMC,CAAAA,e,8HACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACI,yBAAYC,KAAZ,CAAmB,iDACf,uBAAMA,KAAN,EADe,MA0BnBC,YA1BmB,CA0BJ,SAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACC,MAArB,CACA,GAAMC,CAAAA,KAAK,CAAGD,MAAM,CAACE,IAAP,GAAgB,UAAhB,CAA6BF,MAAM,CAACG,OAApC,CAA8CH,MAAM,CAACC,KAAnE,CACA,MAAKG,QAAL,oBAAiBJ,MAAM,CAACK,IAAxB,CAA+BJ,KAA/B,GACH,CA9BkB,OA2CnBK,YA3CmB,CA2CJ,SAACP,KAAD,CAAW,CACtBA,KAAK,CAACQ,cAAN,GACA,GAAI,MAAKC,KAAL,CAAWC,cAAX,EAA6B,IAAjC,CAAuC,CACnC,MAAKZ,KAAL,CAAWa,kBAAX,CAA8B,MAAKb,KAAL,CAAWc,OAAX,CAAmB,MAAKH,KAAL,CAAWC,cAA9B,CAA9B,CAA6E,MAAKD,KAAL,CAAWI,QAAxF,EACH,CACJ,CAhDkB,CAEf,MAAKJ,KAAL,CAAa,CAAEC,cAAc,CAAE,CAAlB,CAAqBG,QAAQ,CAAE,KAA/B,CAAb,CACA,MAAKpB,cAAL,CAAsBA,cAAc,CAACqB,IAAf,+BAAtB,CACA;AACA;AALe,aAMlB,C,0DA2CD,wBAAeC,MAAf,CAAuBC,EAAvB,CAA2B,CACvB,GAAIC,CAAAA,CAAC,CAAG,CAAR,CAEA;AACR;AACA;AACA,WACQ,MAAOF,CAAAA,MAAM,CAACE,CAAD,CAAN,CAAUC,QAAjB,CACH,CACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M,sBACI,iBAAS,CACL,mBACI,cAAO,QAAQ,CAAE,KAAKX,YAAtB,wBACI,MAAC,SAAD,yDAEK,KAAKE,KAAL,CAAWI,QAAX,CAAsB,iBAAtB,CACK,0CAHV,GADJ,cAMI,MAAC,UAAD,sCAAiC,KAAKM,cAAL,CAAoB,KAAKrB,KAAL,CAAWc,OAA/B,CAAwC,KAAKd,KAAL,CAAWsB,YAAX,CAAwBC,QAAhE,CAAjC,GANJ,cAOI,KAAC,MAAD,EAAQ,IAAI,CAAC,gBAAb,CAA8B,QAAQ,CAAE,KAAKtB,YAA7C,CAA2D,KAAK,CAAE,KAAKU,KAAL,CAAWC,cAA7E,UAEK,KAAKZ,KAAL,CAAWc,OAAX,CAAmBU,GAAnB,CAAuB,SAACP,MAAD,CAASE,CAAT,qBACpB,KAAC,QAAD,EAAkB,KAAK,CAAEA,CAAzB,UAA6BF,MAAM,CAACG,QAApC,EAAeD,CAAf,CADoB,EAAvB,CAFL,EAPJ,cAkBI,aAlBJ,cAoBI,MAAC,SAAD,wCACK,KAAKxB,cAAL,CAAoB,UAApB,CADL,GApBJ,cAyBI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,OAAO,CAAE,KAAKc,YAA1D,qBAzBJ,GADJ,CA6BH,C,6BA7GyBjB,KAAK,CAACiC,S,EAgHpC,cAAe1B,CAAAA,eAAf,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport createCheckbox from \"./createCheckbox.js\"\nimport { Button } from '@material-ui/core'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Typography } from '@material-ui/core';\nclass ActivitySwapper extends React.Component {\n    /*    \n        Input : props={changeTileActivity,selectedTile,actions}\n                changeTileActivity : func : function declared in parent to change tile(s)'s activity\n                selectedTile : object : tile selected by the player\n                actions : object : list of all the available actions\n\n        Syntax : <ActivitySwapper changeTileActivity={this.changeTileActivity} \n            selectedTile={the selected tile} actions={the list of actions} />\n\n        Author : Hugo KELHETTER            \n    */\n    constructor(props) {\n        super(props);\n        this.state = { selectActivity: 0, checkbox: false };\n        this.createCheckbox = createCheckbox.bind(this)\n        //this.handleChange = this.handleChange.bind(this);\n        //this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    static propTypes = {\n        changeTileActivity: PropTypes.func.isRequired,\n        selectedTile: PropTypes.object.isRequired,\n        actions: PropTypes.array.isRequired\n    }\n    /* \n        Function : handleChange\n    \n        Syntax  : handleChange(event)\n            \n        Input   : event : the event calling the function\n            \n        Description : \n            function called when interacting with the form's components\n            if the target is a checkBox, change its validation\n            update the state value for the corresponding event target\n    \n        Author : Hugo KELHETTER\n    */\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        this.setState({ [target.name]: value });\n    }\n    /* \n        Function : handleSubmit\n    \n        Syntax  : handleSubmit(event)\n        \n        Input   : event :  the event calling the function\n    \n        Description : \n            call the function changeTileActivity from parent with in parameters the values of the fieldset \n           \n        Author : Hugo KELHETTER\n    */\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.selectActivity != null) {\n            this.props.changeTileActivity(this.props.actions[this.state.selectActivity], this.state.checkbox)\n        }\n    }\n    actionToString(action, id) {\n        let i = 0;\n\n        /*while (action[i].Id !== id) {\n            console.log(action[i], id)\n            i++\n        }*/\n        return action[i].Pratique\n    }\n    /* \n        Function : render\n    \n        Syntax  : render()\n            \n        Description : display the form to change tile/subBasin's activityy\n           \n        Author : Hugo KELHETTER\n    */\n    render() {\n        return (\n            < form onSubmit={this.handleSubmit} >\n                <FormLabel>\n                    Choisissez votre nouvelle activit√© pour\n                    {this.state.checkbox ? ' le sous bassin'\n                        : 'la case ${this.props.selectedTile.subId}'}\n                </FormLabel >\n                <Typography>Activit√© en cours : {this.actionToString(this.props.actions, this.props.selectedTile.practice)}</Typography>\n                <Select name=\"selectActivity\" onChange={this.handleChange} value={this.state.selectActivity}>\n                    {/* display all possible action for selected tile */}\n                    {this.props.actions.map((action, i) =>\n                        <MenuItem key={i} value={i}>{action.Pratique}</MenuItem>,\n                    )}\n                    {/*  {this.props.selectedTile.activity === \"1\" ? \"\" : <option value=\"1\">vigne</option>}\n                        {this.props.selectedTile.activity === \"2\" ? \"\" : <option value=\"2\">bl√©</option>}\n                        {this.props.selectedTile.activity === \"3\" ? \"\" : <option value=\"3\">bovins</option>} */}\n                </Select>\n\n\n                <br />\n\n                <FormLabel>modifier toutes les cases\n                    {this.createCheckbox(\"checkbox\")}\n                </FormLabel>\n\n\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>Envoyer</Button>\n            </form >\n        );\n    }\n}\n\nexport default ActivitySwapper\n/*\necran de fin de partie\nselection activit√© de derniere partie\nvalidation prochain tour\nrecuperation du tour depuis le serveur\nchanger style des boutons radios\n\n*/"]},"metadata":{},"sourceType":"module"}