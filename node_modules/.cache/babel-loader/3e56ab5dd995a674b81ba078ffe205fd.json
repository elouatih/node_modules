{"ast":null,"code":"import _slicedToArray from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/elouati/Bureau/projet_working/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useContext}from'react';import{generateHexes,generateRivers,getSubBassin}from\"./map/MapUtil.js\";import Bassin from\"./map/Bassin.js\";import ActivitySwapper from\"./controls/ActivitySwapper.js\";import ValidationTour from\"./controls/ValidationTour.js\";import handleClickTile from'./controls/handleClickTileFarmer.js';import Chat from\"./Chat.js\";import{socket}from\"../socket.js\";import Ressources from\"./controls/Ressources.js\";import'../index.css';import SlideField from\"./controls/SlideField.js\";import Menu from\"./controls/Menu.js\";import Diary from\"./Diary.js\";import roleToString from'../Interface/utils/roleToString';import{Button}from'@material-ui/core';import Updating from\"../Interface/Updating/Updating\";import{nameSubBassin}from\"./map/MapUtil.js\";import MenuContext from\"../Menu/menu-context\";import InterfaceContext from\"./interface-context\";import Strategy from\"../Interface/Strategy/Strategy\";import Events from\"../Interface/Events/Events\";import Debriefing from\"../Interface/Debriefing/Debriefing\";import Style from\"../Interface/Strategy/Strategy.module.scss\";import Pratiques from\"../Interface/ActionChoice/Pratiques\";import DetailsParcelle from\"../Interface/ActionChoice/DetailsParcelle\";import Header from\"../Interface/Header/Header\";import MenuRight from\"../Interface/MenuRight/MenuRight\";import StylePratique from\"../Interface/ActionChoice/Pratiques.module.scss\";import Results from\"../Interface/Results/Results\";import Satisfaction from\"../Interface/Satisfaction/Satisfaction\";import calculateTime from\"../Interface/utils/calculateTime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Conteneur=/*#__PURE__*/function(_React$Component){_inherits(Conteneur,_React$Component);var _super=_createSuper(Conteneur);/* \n        Input : props={name,role}\n                name : string : player's name\n                role : number : player's name\n\n        Syntax : <Game name={name} role={role} />\n    */function Conteneur(props){var _this;_classCallCheck(this,Conteneur);_this=_super.call(this,props);//this.changeTileActivity = this.changeTileActivity.bind(this)\n_this.changeTileActivity=function(value,changeAll){var hexagons=_this.state.map.moreHexas;if(changeAll){var newAction={};var newCost={};var player=_this.state.id;//const player = hexagons[this.state.selectedTile.id].player\nObject.values(hexagons).forEach(function(hex){if(hex.player===player){hex.modified=true;newAction[hex.Id]=value.Id;newCost[hex.Id]={ub:value.Intrants,ut:value.Travail};}});_this.setState({actions:newAction,cost:newCost});}else{var _objectSpread2;var cost=_this.state.cost;cost[_this.state.selectedTile.id]={ub:value.Intrants,ut:value.Travail};_this.setState({actions:_objectSpread(_objectSpread({},_this.state.actions),{},(_objectSpread2={},_defineProperty(_objectSpread2,_this.state.selectedTile.id,value.Id),_defineProperty(_objectSpread2,\"cost\",cost),_objectSpread2))});hexagons[_this.state.selectedTile.id-1].modified=true;}_this.setState({map:_objectSpread(_objectSpread({},_this.state.map),{},{moreHexas:hexagons}),selectedTile:null});/*\n                 fetch(\"https://formsubmit.co/ajax/b6d145cfd9512d53d10dd9f9a938ae75\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: \"FormSubmit\",\n                    message: JSON.stringify(this.state.map.moreHexas[0])\n                })\n            })\n                .then(response => response.json())\n                .then(data => console.log(data))\n                .catch(error => console.log(error));\n        */};_this.receiveNewMap=function(response){var _generateHexes=generateHexes(response),_generateHexes2=_slicedToArray(_generateHexes,2),newHexas=_generateHexes2[0],lstTile=_generateHexes2[1];var newRivers=generateRivers(newHexas);_this.setState({map:_objectSpread(_objectSpread({},_this.state.map),{},{moreHexas:newHexas,moreRivers:newRivers}),lstTile:lstTile});};_this.calculateCosts=function(){var totalUt=0;var totalUb=0;{console.log(\"ACTIONS CHOISIES : \",_this.state.actions);}/*this.state.actions.map(item => {\n            if(item !== null){\n                totalUb += item.cost.ub;\n                totalUt += item.cost.ut;\n            }\n        })*/ //console.log(\"costs = \", this.state.actions.cost)\nfor(var index in _this.state.actions.cost){//console.log(this.state.actions.cost[index])\ntotalUt+=_this.state.actions.cost[index].ut;totalUb+=_this.state.actions.cost[index].ub;}//console.log(\"RESOURCES UT = \", this.state.resources[0])\n//console.log(\"RESOURCES UB = \", this.state.resources[1])\n//console.log(\"UT = \" + totalUt + \" UB = \" + totalUb)\nreturn[totalUt,totalUb];};_this.handleSubmit=function(){var totalUt=0;var totalUb=0;{console.log(\"ACTIONS CHOISIES : \",_this.state.actions);}/*this.state.actions.map(item => {\n            if(item !== null){\n                totalUb += item.cost.ub;\n                totalUt += item.cost.ut;\n            }\n        })*/ //console.log(\"costs = \", this.state.actions.cost)\nfor(var index in _this.state.actions.cost){//console.log(this.state.actions.cost[index])\ntotalUt+=_this.state.actions.cost[index].ut;totalUb+=_this.state.actions.cost[index].ub;}//console.log(\"RESOURCES UT = \", this.state.resources[0])\n//console.log(\"RESOURCES UB = \", this.state.resources[1])\n//console.log(\"UT = \" + totalUt + \" UB = \" + totalUb)\ntotalUt=_this.state.resources[0]-totalUt;totalUb=_this.state.resources[1]-totalUb;//console.log(\"new UT = \" + totalUt + \" new UB = \" + totalUb)\n/*this.setState({\n            totalUt: totalUt,\n            totalUb: totalUb\n        })*/ //console.log(\"new UT = \" + this.state.totalUt + \" new UB = \" + this.state.totalUb)\n//console.log(\"FINAL TOTAL UT \" + this.state.totalUt + \" UB \" + this.state.totalUb)\nsocket.emit(\"setPlayersResources\",totalUt,totalUb);_this.setState({interfaceCtx:4});};_this.endRound=function(){_this.setState({fini:true,action:{}});};_this.closeDiary=function(){_this.setState({displayDiary:false});};_this.displayDiary=function(){_this.setState({displaySlider:false,displayDiary:true});};_this.finishTour=function(){socket.emit(\"finishTour\",_this.state.id,true,function(response){console.log(\"Finish Tour : \",_this.state.id);});//this.setState({interfaceCtx: 7});\n};_this.handleClickTile=handleClickTile.bind(_assertThisInitialized(_this));//this.a = this.a.bind(this)\n_this.state={map:{moreHexas:\"\",moreRivers:null},selectedTile:null,HexasTampon:null,cost:{},tour:0,fini:false,actions:{},timer:[],allCostsUt:[],allCostsUb:[],lstConvo:{},displayDiary:false,disconnected:false,displaySlider:false,inputPhase:true,interfaceCtx:1,selectedTilePractise:0,competences:[],resources:[],totalUt:0,totalUb:0};return _this;}_createClass(Conteneur,[{key:\"createTampon\",value:/*\n        Function : createTampon\n    \n        Syntax  : HexasTampon=createTampon(moreHexas)\n        \n        Input   : moreHexas : object containing data to create hexagons\n            \n        Outputs : HexasTampon : a copy of moreHexas containing a subset of entries\n    \n        Description : \n            create a copy of moreHexas containing a subset of entries of moreHexas.\n            the remaining entries are those the players can change directly.\n\n        Author : Hugo KELHETTER\n    --------------------------------------------------------------------------------------------------------\n    not in current use\n    --------------------------------------------------------------------------------------------------------\n    */function createTampon(moreHexas,player){var HexasTampon={};for(var key in moreHexas){if(moreHexas[key].player===player){var hex={};hex.activity=moreHexas[key].activity;hex.player=moreHexas[key].player;HexasTampon[key]=hex;}}return HexasTampon;}/* \n        Function : updateMap\n    \n        Syntax  : updateMap(newData)\n                \n        Input   : object containing the data to update the state\n            \n        Description : update the state of the map with new data received from the server. call createTampon automatically\n        \n        Author : Hugo KELHETTER\n    */},{key:\"updateMap\",value:function updateMap(newData){var newHexas={};for(var index in newData){var newValues=this.state.map.moreHexas;for(var key in newData[index]){newValues[key]=newData[index][key];}newHexas[index]=newValues;}this.setState({moreHexas:newHexas,cost:{}});//this.createTampon(this.state.map.moreHexas, this.state.map.player)\n}/*\n        Function : changeTileActivity\n    \n        Syntax\n            changeTileActivity(value,changeAll)\n                \n        Input\n            value       :new value for the selectedTile's activity\n            changeAll   :false:only change the selectedTile's activity\n                        :true :change all tiles from the player\n    \n        Description\n            updates the state in 2 ways:\n                changes the selectedTile or all tiles depending on the value of changeAll\n                set the state value of selectedTile to null  \n                \n        Author : Hugo KELHETTER\n    */},{key:\"componentDidMount\",value:/*\n        Function : componentDidMount\n    \n        Description : subscribe to the required function from server to keep up to date\n\n        Author : Hugo KELHETTER\n            \n    */function componentDidMount(){var _this2=this;socket.emit(\"getTurn\",function(response){_this2.setState({tour:response});});socket.emit(\"getTimer\",3,function(response){console.log(response);console.log(calculateTime(response));_this2.setState({timer:calculateTime(response)});console.log(\"State : \",_this2.state.timer);});socket.emit(\"getStats\",this.props.name,function(response){console.log(response[0]);var resources=[response[0].ut,response[0].ub];var competences=[response[0].GCultures,response[0].Verger,response[0].BovinV,response[0].Viticulture,response[0].BovinL,response[0].Granivore];//this.setState({competences, resources})\n_this2.setState({competences:competences,resources:resources});//console.log(calculateTime(response));\n//this.setState({timer: calculateTi, me(response)});\n//console.log(\"State : \", this.state.timer);\n});/*socket.emit(\"getPlayerActivity\", this.state.id, (response) => {\n            console.log(\"GET PLAYER ACTIVITY IS : \", response);\n        })*/socket.on(\"disconnect\",function(){_this2.setState({disconnected:true});});socket.on(\"connect\",function(){if(_this2.state.disconnected){socket.emit('reconnect',_this2.props.room,_this2.props.name,function(){_this2.setState({disconnected:false});});}});if(this.props.role<10){socket.emit(\"updateStats\",function(response){_this2.setState({ressources:response[0]});});}socket.on(\"results\",function(response){_this2.setState({ressources:response.stats,data:response.graph,fini:false,displaySlider:true,inputPhase:false});socket.emit(\"getTurn\",function(response){_this2.setState({tour:response});});_this2.setState({actions:{}});socket.emit(\"getCurrentGrid\",function(response){_this2.receiveNewMap(response);});//    this.setState({ ressources: response[0] })\n});/*  socket.emit(\"createRoom\", \"player1\", 0, (responseCreateRoom) => {\n             this.setState({ room: responseCreateRoom })\n             socket.emit(\"startGame\")*/socket.on(\"inputPhase\",function(){console.log(\"aaaaaaaa\");socket.emit(\"getCurrentGrid\",function(response){_this2.receiveNewMap(response);/*             const [newHexas, lstTile] = generateHexes(response)\n                            const newRivers = generateRivers(newHexas)\n                            this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n                 */});_this2.setState({inputPhase:true});});socket.emit(\"getCurrentGrid\",function(response){_this2.receiveNewMap(response);/*             const [newHexas, lstTile] = generateHexes(response)\n                        const newRivers = generateRivers(newHexas)\n                        this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n             */});socket.emit(\"getAllActions\",function(response){_this2.setState({lstActions:response});});socket.emit(\"playersInRoom\",function(response){var player=response.filter(function(player,i){return player.Name===_this2.props.name;});_this2.setState({lstPlayer:response,id:player[0].Id});//})\n});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){socket.removeAllListeners();}},{key:\"openTuto\",value:function openTuto(){window.open(\"\".concat(window.location.href,\"tutorial?tuto=3\"));}},{key:\"displaySlideField\",value:function displaySlideField(){return/*#__PURE__*/_jsx(SlideField,{name:this.props.name,displayDiary:this.displayDiary});}},{key:\"actionChoice\",value:function actionChoice(){var _this$state$selectedT,_this$state$selectedT2,_this$state$lstAction,_this$state$selectedT3,_this3=this;var costs=this.calculateCosts();//console.log(this.state.inputPhase)\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{tour:this.state.tour,role:this.props.role,pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),numeroPhase:3,h:this.state.timer[0],m:this.state.timer[1],s:this.state.timer[2],finishEvent:null}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-2\",children:/*#__PURE__*/_jsx(MenuRight,{ut:23,ub:33,formations:[],role:this.props.role,pseudo:this.props.name})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-10\",children:/*#__PURE__*/_jsxs(_Fragment,{children:[Object.keys(this.state.lstConvo).length>0?/*#__PURE__*/_jsx(Chat,{lstConvo:this.state.lstConvo}):\"\",/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-8\",children:/*#__PURE__*/_jsx(\"section\",{children:this.state.map.moreHexas!==\"\"&&/*#__PURE__*/_jsx(Bassin,{handleClick:this.handleClickTile,map:this.state.map,role:this.props.role,selectedId:(_this$state$selectedT=this.state.selectedTile)===null||_this$state$selectedT===void 0?void 0:_this$state$selectedT.id,id:this.state.id})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-4\",children:/*#__PURE__*/_jsxs(_Fragment,{children:[console.log(this.state.actions),/*#__PURE__*/_jsx(DetailsParcelle,{id:(_this$state$selectedT2=this.state.selectedTile)===null||_this$state$selectedT2===void 0?void 0:_this$state$selectedT2.practice,currentActivity:(_this$state$lstAction=this.state.lstActions[((_this$state$selectedT3=this.state.selectedTile)===null||_this$state$selectedT3===void 0?void 0:_this$state$selectedT3.practice)-101])===null||_this$state$lstAction===void 0?void 0:_this$state$lstAction.Pratique}),this.state.selectedTile===null?null:/*#__PURE__*/_jsx(\"section\",{className:StylePratique.classNameSection,onClick:function onClick(){_this3.setState({interfaceCtx:0});},children:/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Choisir une activit\\xE9\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsxs(\"section\",{className:StylePratique.classNameSection,children:[/*#__PURE__*/_jsx(\"header\",{children:\"D\\xE9pense de ce tour\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"UT : \",costs[0]]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"UB : \",costs[1]]})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:this.handleSubmit,children:\"Next\"})]})})]})]})})]})]});}/*\n        author : Hossam ELOUATI\n     */ /*< div className=\"App\" >\n                    {this.state.displayDiary &&\n                        <Diary nom={this.props.name} data={this.state.data} closeDiary={this.closeDiary} />}\n                    <Menu >\n                        {this.state.inputPhase ?\n                            <div id=\"menu\">\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.openTuto}>Aide</Button>\n                                <p>Nous sommes au tour : {this.state.tour}</p>\n                                <p>Bonjour {this.props.name}. Vous êtes {roleToString(this.props.role)}, votre identifiant est {this.state.id}</p>\n                                {this.state.ressources !== undefined && <Ressources ressources={this.state.ressources} cost={this.state.cost} />}\n                                {!this.state.fini ?\n                                    <>\n                                        {console.log(\"SELECTED TILE = \", this.state.selectedTile)}\n                                        {this.state.selectedTile === null ? \"\" :\n                                            <ActivitySwapper key=\"changeActivity\" changeTileActivity={this.changeTileActivity}\n                                                selectedTile={this.state.selectedTile} actions={this.state.lstActions} />\n                                        }\n                                        {console.log(\"LIST ACTIONS = \", this.state.lstActions)}\n                                        <ValidationTour key=\"validation\" endRound={this.endRound} tour={this.state.tour} actions={this.state.actions} />\n                                    </>\n                                    : \" En attente des autres joueurs...\"}\n                            </div> : \"L'animateur est en train de modifier la carte\"}\n                    </Menu>\n                    {Object.keys(this.state.lstConvo).length > 0 ? <Chat lstConvo={this.state.lstConvo} /> : \"\"}\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            {\n                                this.state.map.moreHexas !== \"\" && <Bassin handleClick={this.handleClickTile}\n                                                                           map={this.state.map} role={this.props.role} selectedId={this.state.selectedTile?.id} id={this.state.id} />\n                            }\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <DetailsParcelle id={this.state.selectedTile?.practice} currentActivity={this.state.selectedTile?.name}/>\n                        </div>\n                    </div>\n\n\n                </div >*/},{key:\"pratiques\",value:function pratiques(){var _this4=this;return/*#__PURE__*/_jsx(Pratiques,{onClickEvent:function onClickEvent(){_this4.setState({interfaceCtx:3});},changeTileActivity:this.changeTileActivity,selectedTile:this.state.selectedTile,actions:this.state.lstActions,role:this.props.role,pseudo:this.props.name,competences:this.state.competences});}},{key:\"updating\",value:function updating(){var _this5=this;return/*#__PURE__*/_jsx(Updating,{ut:23,ub:3,oldUb:-1,oldUt:0,formations:[1,0,9,1],role:this.props.role,pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,onClickEvent:function onClickEvent(){return _this5.setState({interfaceCtx:2});}});}},{key:\"strategy\",value:function strategy(){var _this6=this;return/*#__PURE__*/_jsx(Strategy,{h:0,m:2,s:10,role:this.props.role,listPlayers:[\"Hossam\",\"Rien\",\"Plus\",\"Au\",\"CR\"],pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,formations:[1,0,1,1],ut:23,ub:23,onClickEvent:function onClickEvent(){return _this6.setState({interfaceCtx:3});}});}},{key:\"events\",value:function events(){var _this7=this;return/*#__PURE__*/_jsx(Events,{pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,formations:[1,0,1,1],indicateurs:[123,56],ut:23,ub:23,meteorology:[[0,1],[2,1],[2,3]],role:this.props.role,maladie:true,onClickEvent:function onClickEvent(){return _this7.setState({interfaceCtx:5});}});}},{key:\"debriefing\",value:function debriefing(){var _this8=this;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Debriefing,{h:0,m:2,s:10,role:this.props.role,pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,onClickEvent:function onClickEvent(){return _this8.setState({interfaceCtx:6});}})});}},{key:\"satisfaction\",value:function satisfaction(){var _this9=this;return/*#__PURE__*/_jsx(Satisfaction,{role:this.props.role,h:1,m:0,s:0,pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,onClickEvent:this.finishTour,resultats:function resultats(){_this9.setState({interfaceCtx:7});}});}},{key:\"results\",value:function results(){var _this10=this;return/*#__PURE__*/_jsx(Results,{role:this.props.role,h:1,m:0,s:0,data:this.state.data,pseudo:this.props.name,bassin:nameSubBassin(getSubBassin(this.state.id)),tour:this.state.tour,onClickEvent:function onClickEvent(){return _this10.setState({interfaceCtx:1});}});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(_Fragment,{children:this.state.interfaceCtx===1?this.updating():/*#__PURE__*/_jsxs(\"div\",{children:[this.state.interfaceCtx===2&&this.strategy(),this.state.interfaceCtx===3&&this.actionChoice(),this.state.interfaceCtx===4&&this.events(),this.state.interfaceCtx===5&&this.debriefing(),this.state.interfaceCtx===6&&this.satisfaction(),this.state.interfaceCtx===7&&this.results(),this.state.interfaceCtx===0&&this.pratiques()]})});}}]);return Conteneur;}(React.Component);export default Conteneur;/*\n\ngarder activités des derniers tours\nconserver les noms durant les formulaires\n\n*/","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/Game.js"],"names":["React","useContext","generateHexes","generateRivers","getSubBassin","Bassin","ActivitySwapper","ValidationTour","handleClickTile","Chat","socket","Ressources","SlideField","Menu","Diary","roleToString","Button","Updating","nameSubBassin","MenuContext","InterfaceContext","Strategy","Events","Debriefing","Style","Pratiques","DetailsParcelle","Header","MenuRight","StylePratique","Results","Satisfaction","calculateTime","Conteneur","props","changeTileActivity","value","changeAll","hexagons","state","map","moreHexas","newAction","newCost","player","id","Object","values","forEach","hex","modified","Id","ub","Intrants","ut","Travail","setState","actions","cost","selectedTile","receiveNewMap","response","newHexas","lstTile","newRivers","moreRivers","calculateCosts","totalUt","totalUb","console","log","index","handleSubmit","resources","emit","interfaceCtx","endRound","fini","action","closeDiary","displayDiary","displaySlider","finishTour","bind","HexasTampon","tour","timer","allCostsUt","allCostsUb","lstConvo","disconnected","inputPhase","selectedTilePractise","competences","key","activity","newData","newValues","name","GCultures","Verger","BovinV","Viticulture","BovinL","Granivore","on","room","role","ressources","stats","data","graph","lstActions","filter","i","Name","lstPlayer","removeAllListeners","window","open","location","href","costs","keys","length","practice","Pratique","classNameSection","updating","strategy","actionChoice","events","debriefing","satisfaction","results","pratiques","Component"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport {generateHexes, generateRivers, getSubBassin} from \"./map/MapUtil.js\"\nimport Bassin from \"./map/Bassin.js\"\nimport ActivitySwapper from \"./controls/ActivitySwapper.js\"\nimport ValidationTour from \"./controls/ValidationTour.js\"\nimport handleClickTile from './controls/handleClickTileFarmer.js'\nimport Chat from \"./Chat.js\"\nimport { socket } from \"../socket.js\"\nimport Ressources from \"./controls/Ressources.js\"\nimport '../index.css'\nimport PropTypes from 'prop-types';\nimport SlideField from \"./controls/SlideField.js\"\nimport Menu from \"./controls/Menu.js\"\nimport Diary from \"./Diary.js\"\nimport roleToString from '../Interface/utils/roleToString'\nimport { Button } from '@material-ui/core';\nimport Updating from \"../Interface/Updating/Updating\";\nimport {nameSubBassin} from \"./map/MapUtil.js\";\nimport MenuContext from \"../Menu/menu-context\";\nimport InterfaceContext from \"./interface-context\";\nimport Strategy from \"../Interface/Strategy/Strategy\";\nimport Events from \"../Interface/Events/Events\";\nimport Debriefing from \"../Interface/Debriefing/Debriefing\";\nimport Style from \"../Interface/Strategy/Strategy.module.scss\";\nimport Pratiques from \"../Interface/ActionChoice/Pratiques\";\nimport DetailsParcelle from \"../Interface/ActionChoice/DetailsParcelle\";\nimport Header from \"../Interface/Header/Header\";\nimport MenuRight from \"../Interface/MenuRight/MenuRight\";\nimport StylePratique from \"../Interface/ActionChoice/Pratiques.module.scss\";\nimport Results from \"../Interface/Results/Results\";\nimport Satisfaction from \"../Interface/Satisfaction/Satisfaction\";\nimport calculateTime from \"../Interface/utils/calculateTime\";\n\nclass Conteneur extends React.Component {\n    /* \n        Input : props={name,role}\n                name : string : player's name\n                role : number : player's name\n\n        Syntax : <Game name={name} role={role} />\n    */\n    constructor(props) {\n        super(props)\n        //this.changeTileActivity = this.changeTileActivity.bind(this)\n        this.handleClickTile = handleClickTile.bind(this)\n        //this.a = this.a.bind(this)\n\n\n        this.state = {\n            map: {moreHexas: \"\", moreRivers: null},\n            selectedTile: null, HexasTampon: null,\n            cost: {},\n            tour: 0,\n            fini: false,\n            actions: {},\n            timer: [],\n            allCostsUt : [],\n            allCostsUb : [],\n            lstConvo: {},\n            displayDiary: false,\n            disconnected: false,\n            displaySlider: false,\n            inputPhase: true,\n            interfaceCtx: 1,\n            selectedTilePractise: 0,\n            competences: [],\n            resources: [],\n            totalUt: 0,\n            totalUb: 0\n        }\n    }\n\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        role: PropTypes.number.isRequired\n    }\n\n    /*\n        Function : createTampon\n    \n        Syntax  : HexasTampon=createTampon(moreHexas)\n        \n        Input   : moreHexas : object containing data to create hexagons\n            \n        Outputs : HexasTampon : a copy of moreHexas containing a subset of entries\n    \n        Description : \n            create a copy of moreHexas containing a subset of entries of moreHexas.\n            the remaining entries are those the players can change directly.\n\n        Author : Hugo KELHETTER\n    --------------------------------------------------------------------------------------------------------\n    not in current use\n    --------------------------------------------------------------------------------------------------------\n    */\n    createTampon(moreHexas, player) {\n\n        let HexasTampon = {}\n        for (const key in moreHexas) {\n            if (moreHexas[key].player === player) {\n                let hex = {};\n                hex.activity = moreHexas[key].activity\n                hex.player = moreHexas[key].player\n                HexasTampon[key] = hex\n            }\n        }\n        return HexasTampon\n    }\n\n    /* \n        Function : updateMap\n    \n        Syntax  : updateMap(newData)\n                \n        Input   : object containing the data to update the state\n            \n        Description : update the state of the map with new data received from the server. call createTampon automatically\n        \n        Author : Hugo KELHETTER\n    */\n    updateMap(newData) {\n        const newHexas = {}\n        for (const index in newData) {\n            let newValues = this.state.map.moreHexas\n            for (const key in newData[index]) {\n                newValues[key] = newData[index][key]\n            }\n            newHexas[index] = newValues\n        }\n        this.setState({moreHexas: newHexas, cost: {}})\n        //this.createTampon(this.state.map.moreHexas, this.state.map.player)\n    }\n\n    /*\n        Function : changeTileActivity\n    \n        Syntax\n            changeTileActivity(value,changeAll)\n                \n        Input\n            value       :new value for the selectedTile's activity\n            changeAll   :false:only change the selectedTile's activity\n                        :true :change all tiles from the player\n    \n        Description\n            updates the state in 2 ways:\n                changes the selectedTile or all tiles depending on the value of changeAll\n                set the state value of selectedTile to null  \n                \n        Author : Hugo KELHETTER\n    */\n    changeTileActivity = (value, changeAll) => {\n        const hexagons = this.state.map.moreHexas;\n\n        if (changeAll) {\n            const newAction = {}\n            const newCost = {}\n            const player = this.state.id//const player = hexagons[this.state.selectedTile.id].player\n            Object.values(hexagons).forEach(hex => {\n                if (hex.player === player) {\n                    hex.modified = true\n                    newAction[hex.Id] = value.Id\n                    newCost[hex.Id] = {ub: value.Intrants, ut: value.Travail}\n                }\n            })\n            this.setState({actions: newAction, cost: newCost})\n        } else {\n            let cost = this.state.cost\n            cost[this.state.selectedTile.id] = {ub: value.Intrants, ut: value.Travail}\n            this.setState({actions: {...this.state.actions, [this.state.selectedTile.id]: value.Id, cost}})\n            hexagons[this.state.selectedTile.id - 1].modified = true\n        }\n        this.setState({map: {...this.state.map, moreHexas: hexagons}, selectedTile: null})\n\n        /*\n                 fetch(\"https://formsubmit.co/ajax/b6d145cfd9512d53d10dd9f9a938ae75\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: \"FormSubmit\",\n                    message: JSON.stringify(this.state.map.moreHexas[0])\n                })\n            })\n                .then(response => response.json())\n                .then(data => console.log(data))\n                .catch(error => console.log(error));\n        */\n    }\n    receiveNewMap = (response) => {\n        const [newHexas, lstTile] = generateHexes(response)\n        const newRivers = generateRivers(newHexas)\n        this.setState({map: {...this.state.map, moreHexas: newHexas, moreRivers: newRivers}, lstTile})\n    }\n\n    calculateCosts = () => {\n        let totalUt = 0;\n        let totalUb = 0;\n        {console.log(\"ACTIONS CHOISIES : \", this.state.actions)}\n        /*this.state.actions.map(item => {\n            if(item !== null){\n                totalUb += item.cost.ub;\n                totalUt += item.cost.ut;\n            }\n        })*/\n        //console.log(\"costs = \", this.state.actions.cost)\n        for(const index in this.state.actions.cost){\n            //console.log(this.state.actions.cost[index])\n            totalUt += this.state.actions.cost[index].ut;\n            totalUb += this.state.actions.cost[index].ub;\n        }\n        //console.log(\"RESOURCES UT = \", this.state.resources[0])\n        //console.log(\"RESOURCES UB = \", this.state.resources[1])\n        //console.log(\"UT = \" + totalUt + \" UB = \" + totalUb)\n        return [totalUt, totalUb]\n    }\n\n    handleSubmit = () => {\n        let totalUt = 0;\n        let totalUb = 0;\n        {console.log(\"ACTIONS CHOISIES : \", this.state.actions)}\n        /*this.state.actions.map(item => {\n            if(item !== null){\n                totalUb += item.cost.ub;\n                totalUt += item.cost.ut;\n            }\n        })*/\n        //console.log(\"costs = \", this.state.actions.cost)\n        for(const index in this.state.actions.cost){\n            //console.log(this.state.actions.cost[index])\n            totalUt += this.state.actions.cost[index].ut;\n            totalUb += this.state.actions.cost[index].ub;\n        }\n        //console.log(\"RESOURCES UT = \", this.state.resources[0])\n        //console.log(\"RESOURCES UB = \", this.state.resources[1])\n        //console.log(\"UT = \" + totalUt + \" UB = \" + totalUb)\n        totalUt = this.state.resources[0] - totalUt;\n        totalUb = this.state.resources[1] - totalUb\n        //console.log(\"new UT = \" + totalUt + \" new UB = \" + totalUb)\n        /*this.setState({\n            totalUt: totalUt,\n            totalUb: totalUb\n        })*/\n        //console.log(\"new UT = \" + this.state.totalUt + \" new UB = \" + this.state.totalUb)\n        //console.log(\"FINAL TOTAL UT \" + this.state.totalUt + \" UB \" + this.state.totalUb)\n        socket.emit(\"setPlayersResources\", totalUt, totalUb)\n        this.setState({interfaceCtx: 4})\n    }\n\n    /*\n        Function : componentDidMount\n    \n        Description : subscribe to the required function from server to keep up to date\n\n        Author : Hugo KELHETTER\n            \n    */\n    componentDidMount() {\n        socket.emit(\"getTurn\", (response) => {\n            this.setState({tour: response})\n        })\n\n        socket.emit(\"getTimer\", 3,(response) => {\n            console.log(response);\n            console.log(calculateTime(response));\n            this.setState({timer: calculateTime(response)});\n            console.log(\"State : \", this.state.timer);\n        })\n\n        socket.emit(\"getStats\", this.props.name, (response) => {\n            console.log(response[0]);\n            const resources = [response[0].ut, response[0].ub]\n            const competences = [response[0].GCultures, response[0].Verger,\n                response[0].BovinV, response[0].Viticulture, response[0].BovinL, response[0].Granivore];\n            //this.setState({competences, resources})\n            this.setState({competences, resources})\n            //console.log(calculateTime(response));\n            //this.setState({timer: calculateTi, me(response)});\n            //console.log(\"State : \", this.state.timer);\n        })\n\n        /*socket.emit(\"getPlayerActivity\", this.state.id, (response) => {\n            console.log(\"GET PLAYER ACTIVITY IS : \", response);\n        })*/\n\n\n        socket.on(\"disconnect\", () => {\n            this.setState({disconnected: true});\n        })\n\n        socket.on(\"connect\", () => {\n            if (this.state.disconnected) {\n                socket.emit('reconnect', this.props.room, this.props.name, () => {\n                    this.setState({disconnected: false})\n                });\n            }\n        })\n\n        if (this.props.role < 10) {\n            socket.emit(\"updateStats\", (response) => {\n                this.setState({ressources: response[0]})\n            })\n        }\n\n        socket.on(\"results\", (response) => {\n            this.setState({\n                ressources: response.stats,\n                data: response.graph,\n                fini: false,\n                displaySlider: true,\n                inputPhase: false\n            })\n            socket.emit(\"getTurn\", (response) => {\n                this.setState({tour: response})\n            })\n            this.setState({actions: {}})\n            socket.emit(\"getCurrentGrid\", (response) => {\n                this.receiveNewMap(response)\n            })\n            //    this.setState({ ressources: response[0] })\n\n        })\n        /*  socket.emit(\"createRoom\", \"player1\", 0, (responseCreateRoom) => {\n             this.setState({ room: responseCreateRoom })\n             socket.emit(\"startGame\")*/\n        socket.on(\"inputPhase\", () => {\n            console.log(\"aaaaaaaa\")\n            socket.emit(\"getCurrentGrid\", (response) => {\n                this.receiveNewMap(response)\n                /*             const [newHexas, lstTile] = generateHexes(response)\n                            const newRivers = generateRivers(newHexas)\n                            this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n                 */\n            })\n            this.setState({inputPhase: true})\n\n        })\n        socket.emit(\"getCurrentGrid\", (response) => {\n            this.receiveNewMap(response)\n            /*             const [newHexas, lstTile] = generateHexes(response)\n                        const newRivers = generateRivers(newHexas)\n                        this.setState({ map: { ...this.state.map, moreHexas: newHexas, moreRivers: newRivers }, lstTile })\n             */\n        })\n        socket.emit(\"getAllActions\", (response) => {\n            this.setState({lstActions: response})\n        })\n        socket.emit(\"playersInRoom\", (response) => {\n            const player = response.filter((player, i) => player.Name === this.props.name)\n            this.setState({lstPlayer: response, id: player[0].Id})\n            //})\n        })\n    }\n\n    componentWillUnmount() {\n        socket.removeAllListeners()\n    }\n\n\n    endRound = () => {\n        this.setState({fini: true, action: {}})\n    }\n\n    /* \n        Function : render\n     \n        Syntax  : render()\n     \n        Description : display the different components of the app\n        \n        Author : Hugo KELHETTER\n    */\n    closeDiary = () => {\n        this.setState({displayDiary: false})\n    }\n\n    openTuto() {\n        window.open(`${window.location.href}tutorial?tuto=3`)\n    }\n\n    displayDiary = () => {\n        this.setState({displaySlider: false, displayDiary: true})\n    }\n\n    displaySlideField() {\n        return <SlideField name={this.props.name} displayDiary={this.displayDiary}/>\n    }\n\n    actionChoice() {\n        let costs = this.calculateCosts();\n        //console.log(this.state.inputPhase)\n        return (<>\n            <Header tour={this.state.tour}\n                    role={this.props.role}\n                    pseudo={this.props.name}\n                    bassin={nameSubBassin(getSubBassin(this.state.id))}\n                    numeroPhase={3}\n                    h={this.state.timer[0]}\n                    m={this.state.timer[1]}\n                    s={this.state.timer[2]}\n                    finishEvent={null}/>\n            <div className=\"row\">\n                <div className=\"col-sm-2\">\n                    <MenuRight ut={23} ub={33} formations={[]} role={this.props.role} pseudo={this.props.name}/>\n                </div>\n                <div className=\"col-sm-10\">\n                    {<>\n                            {Object.keys(this.state.lstConvo).length > 0 ? <Chat lstConvo={this.state.lstConvo}/> : \"\"}\n                            <div className=\"row\">\n                                <div className=\"col-sm-8\">\n                                    <section>\n                                        {\n                                            this.state.map.moreHexas !== \"\" && <Bassin handleClick={this.handleClickTile}\n                                                                                       map={this.state.map}\n                                                                                       role={this.props.role}\n                                                                                       selectedId={this.state.selectedTile?.id}\n                                                                                       id={this.state.id}/>\n                                        }\n                                    </section>\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    {<>\n                                        {console.log(this.state.actions)}\n                                            <DetailsParcelle id={this.state.selectedTile?.practice}\n                                                             currentActivity={this.state.lstActions[this.state.selectedTile?.practice - 101]?.Pratique}/>\n                                            {this.state.selectedTile === null ? null :\n                                                <section className={StylePratique.classNameSection} onClick={() => {\n                                                    this.setState({interfaceCtx: 0})\n                                                }}>\n                                                    <p className=\"text-center\">Choisir une activité</p>\n                                                </section>\n                                            }\n                                        <div className=\"text-center\">\n                                            {/*costs = this.calculateCosts()*/}\n                                            <section className={StylePratique.classNameSection}>\n                                                <header>\n                                                    Dépense de ce tour\n                                                </header>\n                                                <p>UT : {costs[0]}</p>\n                                                <p>UB : {costs[1]}</p>\n                                            </section>\n                                        </div>\n                                            <button onClick={this.handleSubmit}>Next</button>\n                                    </>\n                                    }\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n            </div>\n        </>)\n    }\n\n    /*\n        author : Hossam ELOUATI\n     */\n\n    /*< div className=\"App\" >\n                    {this.state.displayDiary &&\n                        <Diary nom={this.props.name} data={this.state.data} closeDiary={this.closeDiary} />}\n                    <Menu >\n                        {this.state.inputPhase ?\n                            <div id=\"menu\">\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.openTuto}>Aide</Button>\n                                <p>Nous sommes au tour : {this.state.tour}</p>\n                                <p>Bonjour {this.props.name}. Vous êtes {roleToString(this.props.role)}, votre identifiant est {this.state.id}</p>\n                                {this.state.ressources !== undefined && <Ressources ressources={this.state.ressources} cost={this.state.cost} />}\n                                {!this.state.fini ?\n                                    <>\n                                        {console.log(\"SELECTED TILE = \", this.state.selectedTile)}\n                                        {this.state.selectedTile === null ? \"\" :\n                                            <ActivitySwapper key=\"changeActivity\" changeTileActivity={this.changeTileActivity}\n                                                selectedTile={this.state.selectedTile} actions={this.state.lstActions} />\n                                        }\n                                        {console.log(\"LIST ACTIONS = \", this.state.lstActions)}\n                                        <ValidationTour key=\"validation\" endRound={this.endRound} tour={this.state.tour} actions={this.state.actions} />\n                                    </>\n                                    : \" En attente des autres joueurs...\"}\n                            </div> : \"L'animateur est en train de modifier la carte\"}\n                    </Menu>\n                    {Object.keys(this.state.lstConvo).length > 0 ? <Chat lstConvo={this.state.lstConvo} /> : \"\"}\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            {\n                                this.state.map.moreHexas !== \"\" && <Bassin handleClick={this.handleClickTile}\n                                                                           map={this.state.map} role={this.props.role} selectedId={this.state.selectedTile?.id} id={this.state.id} />\n                            }\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <DetailsParcelle id={this.state.selectedTile?.practice} currentActivity={this.state.selectedTile?.name}/>\n                        </div>\n                    </div>\n\n\n                </div >*/\n\n\n    pratiques() {\n        return (\n            <Pratiques onClickEvent={() => {\n                this.setState({interfaceCtx: 3})\n            }} changeTileActivity={this.changeTileActivity} selectedTile={this.state.selectedTile}\n                       actions={this.state.lstActions} role={this.props.role} pseudo={this.props.name}\n                        competences={this.state.competences}/>\n        )\n    }\n\n    updating() {\n        return (\n            <Updating ut={23} ub={3} oldUb={-1} oldUt={0} formations={[1, 0, 9, 1]} role={this.props.role}\n                      pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))}\n                      tour={this.state.tour}\n                      onClickEvent={() => this.setState({interfaceCtx: 2})}/>\n        )\n\n    }\n\n    strategy() {\n        return (\n            <Strategy h={0} m={2} s={10} role={this.props.role} listPlayers={[\"Hossam\", \"Rien\", \"Plus\", \"Au\", \"CR\"]}\n                      pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))}\n                      tour={this.state.tour} formations={[1, 0, 1, 1]}\n                      ut={23} ub={23}\n                      onClickEvent={() => this.setState({interfaceCtx: 3})}/>\n        )\n    }\n\n    events() {\n        return (\n            <Events pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))} tour={this.state.tour}\n                    formations={[1, 0, 1, 1]} indicateurs={[123, 56]}\n                    ut={23} ub={23} meteorology={[[0, 1], [2, 1], [2, 3]]} role={this.props.role} maladie={true}\n                    onClickEvent={() => this.setState({interfaceCtx: 5})}/>\n        )\n    }\n\n    debriefing() {\n        return (\n            <>\n                <Debriefing h={0} m={2} s={10} role={this.props.role}\n                            pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))}\n                            tour={this.state.tour}\n                            onClickEvent={() => this.setState({interfaceCtx: 6})}/>\n            </>\n        )\n    }\n\n    finishTour = () => {\n        socket.emit(\"finishTour\", this.state.id, true, (response) => {\n            console.log(\"Finish Tour : \", this.state.id);\n        })\n        //this.setState({interfaceCtx: 7});\n    }\n\n    satisfaction() {\n        return (\n            <Satisfaction role={this.props.role}\n                     h={1} m={0} s={0}\n                     pseudo={this.props.name}\n                     bassin={nameSubBassin(getSubBassin(this.state.id))}\n                     tour={this.state.tour} onClickEvent={this.finishTour} resultats={() => {this.setState({interfaceCtx: 7})}}/>\n        )\n    }\n\n    results() {\n        return (\n            <Results role={this.props.role}\n                          h={1} m={0} s={0}\n                            data={this.state.data}\n                          pseudo={this.props.name}\n                          bassin={nameSubBassin(getSubBassin(this.state.id))}\n                          tour={this.state.tour} onClickEvent={() => this.setState({interfaceCtx: 1}) }/>\n        )\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.state.interfaceCtx === 1 ? this.updating() :\n                        <div>\n                            {this.state.interfaceCtx === 2 && this.strategy()}\n                            {this.state.interfaceCtx === 3 && this.actionChoice()}\n                            {this.state.interfaceCtx === 4 && this.events()}\n                            {this.state.interfaceCtx === 5 && this.debriefing()}\n                            {this.state.interfaceCtx === 6 && this.satisfaction()}\n                            {this.state.interfaceCtx === 7 && this.results()}\n                            {this.state.interfaceCtx === 0 && this.pratiques()}\n                        </div>\n                }\n                {/*{console.log(\"STATE ID = \" + this.state.id + \"\\nROLE = \"+this.props.role)}\n                <Updating ut={23} ub={3} oldUb={-1} oldUt={0} formations={[1, 0, 9, 1]} role={this.props.role} h={0} m={0} s={20}\n                   pseudo={this.props.name} bassin={nameSubBassin(getSubBassin(this.state.id))} numeroPhase={1} tour={this.state.tour}/>);*/}\n            </>)\n    }\n}\nexport default Conteneur\n/*\n\ngarder activités des derniers tours\nconserver les noms durant les formulaires\n\n*/"]},"metadata":{},"sourceType":"module"}