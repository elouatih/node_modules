{"ast":null,"code":"var _jsxFileName = \"/home/elouati/Bureau/projet_working/client/src/Game/animator/timers-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimerContext = /*#__PURE__*/createContext({\n  timers: [],\n  updateTimers: timer => {}\n  /*timerUpdating: [],\n  timerStrategy: [],\n  timerActions: [],\n  timerEvents: [],\n  timerDebriefing: [],\n  timerSatisfaction: [],\n  timerResults: [],\n  updateTimerUpdating: (timer) => { },\n  updateTimerStrategy: (timer) => { },\n  updateTimerActions: (timer) => { },\n  updateTimerEvents: (timer) => { },\n  updateTimerDebriefing: (timer) => { },\n  updateTimerSatisfaction: (timer) => { },\n  updateTimerResults: (timer) => { }*/\n\n});\nexport function TimerContextProvider(props) {\n  _s();\n\n  /*const [updating, setUpdating] = useState([]);\n  const [strategy, setStrategy] = useState([]);\n  const [actions, setActions] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [debriefing, setDebriefing] = useState([]);\n  const [satisfaction, setSatisfaction] = useState([]);\n  const [results, setResults] = useState([]);*/\n  const [timers, setTimers] = useState([]);\n\n  function updateTimersHandler(timer) {\n    setTimers(timer);\n  }\n  /*function updateTimerUpdatingHandler(timer) {\n      console.log(\"HANDLER = \", timer);\n      setUpdating(timer);\n  }\n  function updateTimerStrategyHandler(timer) {\n      setStrategy(timer);\n  }\n  function updateTimerActionsHandler(timer) {\n      setActions(timer);\n  }\n  function updateTimerEventsHandler(timer) {\n      setEvents(timer);\n  }\n  function updateTimerDebriefingHandler(timer) {\n      setDebriefing(timer);\n  }\n  function updateTimerSatisfactionHandler(timer) {\n      setSatisfaction(timer);\n  }\n  function updateTimerResultsHandler(timer) {\n      setResults(timer);*/\n\n\n  const context = {\n    /*timerUpdating: updating,\n    timerStrategy: strategy,\n    timerActions: actions,\n    timerEvents: events,\n    timerDebriefing: debriefing,\n    timerSatisfaction: satisfaction,\n    timerResults: results,\n    updateTimerUpdating: updateTimerUpdatingHandler,\n    updateTimerStrategy: updateTimerStrategyHandler,\n    updateTimerActions: updateTimerActionsHandler,\n    updateTimerEvents: updateTimerEventsHandler,\n    updateTimerDebriefing: updateTimerDebriefingHandler,\n    updateTimerSatisfaction: updateTimerSatisfactionHandler,\n    updateTimerResults: updateTimerResultsHandler*/\n    timers: timers,\n    updateTimers: updateTimersHandler\n  };\n  return /*#__PURE__*/_jsxDEV(TimerContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TimerContextProvider, \"7Uze/3dzRpbrdgv4NEhnDZtLjAw=\");\n\n_c = TimerContextProvider;\nexport default TimerContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerContextProvider\");","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Game/animator/timers-context.js"],"names":["createContext","useState","TimerContext","timers","updateTimers","timer","TimerContextProvider","props","setTimers","updateTimersHandler","context","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,YAAY,gBAAGF,aAAa,CAAC;AAC/BG,EAAAA,MAAM,EAAE,EADuB;AAE/BC,EAAAA,YAAY,EAAGC,KAAD,IAAW,CAAG;AAC5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBmC,CAAD,CAAlC;AAmBA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AAExC;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,QAAM,CAACJ,MAAD,EAASK,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AACA,WAASQ,mBAAT,CAA6BJ,KAA7B,EAAoC;AAChCG,IAAAA,SAAS,CAACH,KAAD,CAAT;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,QAAMK,OAAO,GAAG;AACZ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQP,IAAAA,MAAM,EAAEA,MAfI;AAgBZC,IAAAA,YAAY,EAAEK;AAhBF,GAAhB;AAmBA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,OAA9B;AAAA,cACFH,KAAK,CAACI;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GA1DeL,oB;;KAAAA,oB;AA4DhB,eAAeJ,YAAf","sourcesContent":["import { createContext, useState } from 'react';\n\nconst TimerContext = createContext({\n    timers: [],\n    updateTimers: (timer) => { }\n    /*timerUpdating: [],\n    timerStrategy: [],\n    timerActions: [],\n    timerEvents: [],\n    timerDebriefing: [],\n    timerSatisfaction: [],\n    timerResults: [],\n    updateTimerUpdating: (timer) => { },\n    updateTimerStrategy: (timer) => { },\n    updateTimerActions: (timer) => { },\n    updateTimerEvents: (timer) => { },\n    updateTimerDebriefing: (timer) => { },\n    updateTimerSatisfaction: (timer) => { },\n    updateTimerResults: (timer) => { }*/\n});\n\nexport function TimerContextProvider(props) {\n\n    /*const [updating, setUpdating] = useState([]);\n    const [strategy, setStrategy] = useState([]);\n    const [actions, setActions] = useState([]);\n    const [events, setEvents] = useState([]);\n    const [debriefing, setDebriefing] = useState([]);\n    const [satisfaction, setSatisfaction] = useState([]);\n    const [results, setResults] = useState([]);*/\n    const [timers, setTimers] = useState([]);\n    function updateTimersHandler(timer) {\n        setTimers(timer);\n    }\n\n    /*function updateTimerUpdatingHandler(timer) {\n        console.log(\"HANDLER = \", timer);\n        setUpdating(timer);\n    }\n    function updateTimerStrategyHandler(timer) {\n        setStrategy(timer);\n    }\n    function updateTimerActionsHandler(timer) {\n        setActions(timer);\n    }\n    function updateTimerEventsHandler(timer) {\n        setEvents(timer);\n    }\n    function updateTimerDebriefingHandler(timer) {\n        setDebriefing(timer);\n    }\n    function updateTimerSatisfactionHandler(timer) {\n        setSatisfaction(timer);\n    }\n    function updateTimerResultsHandler(timer) {\n        setResults(timer);*/\n\n    const context = {\n        /*timerUpdating: updating,\n        timerStrategy: strategy,\n        timerActions: actions,\n        timerEvents: events,\n        timerDebriefing: debriefing,\n        timerSatisfaction: satisfaction,\n        timerResults: results,\n        updateTimerUpdating: updateTimerUpdatingHandler,\n        updateTimerStrategy: updateTimerStrategyHandler,\n        updateTimerActions: updateTimerActionsHandler,\n        updateTimerEvents: updateTimerEventsHandler,\n        updateTimerDebriefing: updateTimerDebriefingHandler,\n        updateTimerSatisfaction: updateTimerSatisfactionHandler,\n        updateTimerResults: updateTimerResultsHandler*/\n        timers: timers,\n        updateTimers: updateTimersHandler\n    };\n\n    return <TimerContext.Provider value={context}>\n        {props.children}\n    </TimerContext.Provider>\n}\n\nexport default TimerContext;"]},"metadata":{},"sourceType":"module"}