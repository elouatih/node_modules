{"ast":null,"code":"var _jsxFileName = \"/home/elouati/Bureau/projet_working/client/src/Interface/Animator/FarmerActivity.js\";\nimport React, { Component } from 'react';\nimport Checkbox from \"../utils/Checkbox\";\nimport StyleStrategy from \"../Strategy/Strategy.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FarmerActivity extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [\"Polyculture\", \"Verger\", \"Bauvage\", \"Maréchage\"],\n      selected: new Set(),\n      values: [0, 0, 0, 0],\n      valuePolyculture: 0,\n      valueVerger: 0,\n      valueBauvage: 0,\n      valueMarechage: 0\n    };\n\n    this.getCultures = () => {\n      return [parseInt(this.state.valuePolyculture), parseInt(this.state.valueVerger), parseInt(this.state.valueBauvage), parseInt(this.state.valueMarechage)];\n    };\n\n    this.labelToIndex = label => {\n      return label === \"Polyculture\" ? 0 : label === \"Verger\" ? 1 : label === \"Bauvage\" ? 2 : label === \"Maréchage\" ? 3 : -1;\n    };\n\n    this.labelToValue = label => {\n      return label === \"Polyculture\" ? this.state.valuePolyculture : label === \"Verger\" ? this.state.valueVerger : label === \"Bauvage\" ? this.state.valueBauvage : label === \"Maréchage\" ? this.state.valueMarechage : -1;\n    };\n\n    this.setValueActivity = (label, value) => {\n      if (this.labelToIndex(label) === 0) {\n        this.setState({\n          valuePolyculture: value\n        });\n      }\n\n      if (this.labelToIndex(label) === 1) {\n        this.setState({\n          valueVerger: value\n        });\n      }\n\n      if (this.labelToIndex(label) === 2) {\n        this.setState({\n          valueBauvage: value\n        });\n      }\n\n      if (this.labelToIndex(label) === 3) {\n        this.setState({\n          valueMarechage: value\n        });\n      }\n    };\n\n    this.componentWillMount = () => {\n      this.selectedCheckboxes = new Set();\n    };\n\n    this.getValues = () => {\n      return this.state.values;\n    };\n\n    this.toggleCheckbox = label => {\n      const newSelected = new Set();\n\n      if (this.selectedCheckboxes.has(label)) {\n        this.setValueActivity(label, 0);\n        this.selectedCheckboxes.delete(label);\n        this.setState({\n          selected: newSelected\n        });\n      } else {\n        this.selectedCheckboxes.add(label);\n        this.setState({\n          selected: newSelected\n        });\n      }\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n\n      for (const checkbox of this.selectedCheckboxes) {\n        console.log(checkbox, 'is selected.');\n        console.log('values are', [this.state.valuePolyculture, this.state.valueVerger, this.state.valueBauvage, this.state.valueMarechage]);\n      }\n    };\n\n    this.handleChange = event => {\n      if (this.labelToIndex(event.target.id) === 0) {\n        this.setState({\n          valuePolyculture: event.target.value\n        });\n      }\n\n      if (this.labelToIndex(event.target.id) === 1) {\n        this.setState({\n          valueVerger: event.target.value\n        });\n      }\n\n      if (this.labelToIndex(event.target.id) === 2) {\n        this.setState({\n          valueBauvage: event.target.value\n        });\n      }\n\n      if (this.labelToIndex(event.target.id) === 3) {\n        this.setState({\n          valueMarechage: event.target.value\n        });\n      }\n    };\n\n    this.createCheckbox = label => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"agri\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          label: label,\n          handleCheckboxChange: this.toggleCheckbox\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), this.selectedCheckboxes.has(label) ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: label,\n          name: \"tentacles\",\n          onChange: this.handleChange,\n          min: \"1\",\n          max: \"5\",\n          value: this.labelToValue(label)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true);\n\n    this.createCheckboxes = () => this.state.items.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-3\",\n      children: this.createCheckbox(label)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: StyleStrategy.header2,\n          children: [\"Agriculteur : \", this.props.x]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: StyleStrategy.header3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row text-center\",\n          children: [this.createCheckboxes(), console.log('Activity of ' + this.props.x + ' are ' + this.getCultures())]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FarmerActivity;","map":{"version":3,"sources":["/home/elouati/Bureau/projet_working/client/src/Interface/Animator/FarmerActivity.js"],"names":["React","Component","Checkbox","StyleStrategy","FarmerActivity","state","items","selected","Set","values","valuePolyculture","valueVerger","valueBauvage","valueMarechage","getCultures","parseInt","labelToIndex","label","labelToValue","setValueActivity","value","setState","componentWillMount","selectedCheckboxes","getValues","toggleCheckbox","newSelected","has","delete","add","handleFormSubmit","formSubmitEvent","preventDefault","checkbox","console","log","handleChange","event","target","id","createCheckbox","createCheckboxes","map","render","header2","props","x","header3"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Checkbox from \"../utils/Checkbox\";\nimport StyleStrategy from \"../Strategy/Strategy.module.scss\";\n\nclass FarmerActivity extends Component {\n    state = {\n        items: [\"Polyculture\", \"Verger\", \"Bauvage\", \"Maréchage\"],\n        selected: new Set(),\n        values: [0, 0, 0, 0],\n        valuePolyculture : 0,\n        valueVerger: 0,\n        valueBauvage: 0,\n        valueMarechage: 0\n    }\n\n    getCultures = () => {\n        return ([parseInt(this.state.valuePolyculture),\n                    parseInt(this.state.valueVerger),\n                        parseInt(this.state.valueBauvage),\n                            parseInt(this.state.valueMarechage)])\n    }\n\n    labelToIndex = (label) => {\n        return (\n            label === \"Polyculture\" ? 0 :\n                label === \"Verger\" ? 1 :\n                    label === \"Bauvage\" ? 2 :\n                        label === \"Maréchage\" ? 3 :\n                            -1\n        )\n    }\n\n    labelToValue = (label) => {\n        return (\n            label === \"Polyculture\" ? this.state.valuePolyculture :\n                label === \"Verger\" ? this.state.valueVerger :\n                    label === \"Bauvage\" ? this.state.valueBauvage :\n                        label === \"Maréchage\" ? this.state.valueMarechage :\n                            -1\n        )\n    }\n\n    setValueActivity = (label, value) => {\n        if (this.labelToIndex(label) === 0) {this.setState({valuePolyculture: value})}\n        if (this.labelToIndex(label) === 1) {this.setState({valueVerger: value})}\n        if (this.labelToIndex(label) === 2) {this.setState({valueBauvage: value})}\n        if (this.labelToIndex(label) === 3) {this.setState({valueMarechage: value})}\n    }\n\n    componentWillMount = () => {\n        this.selectedCheckboxes = new Set();\n    }\n\n    getValues = () => {\n        return this.state.values;\n    }\n\n    toggleCheckbox = (label) => {\n        const newSelected = new Set();\n        if (this.selectedCheckboxes.has(label)) {\n            this.setValueActivity(label, 0);\n            this.selectedCheckboxes.delete(label);\n            this.setState({selected: newSelected});\n\n        } else {\n            this.selectedCheckboxes.add(label);\n            this.setState({selected: newSelected});\n        }\n    }\n\n    handleFormSubmit = formSubmitEvent => {\n        formSubmitEvent.preventDefault();\n\n        for (const checkbox of this.selectedCheckboxes) {\n            console.log(checkbox, 'is selected.');\n            console.log('values are', [this.state.valuePolyculture,\n                                        this.state.valueVerger,\n                                        this.state.valueBauvage,\n                                        this.state.valueMarechage]);\n        }\n    }\n\n    handleChange = (event) => {\n        if (this.labelToIndex(event.target.id) === 0) {this.setState({valuePolyculture: event.target.value})}\n        if (this.labelToIndex(event.target.id) === 1) {this.setState({valueVerger: event.target.value})}\n        if (this.labelToIndex(event.target.id) === 2) {this.setState({valueBauvage: event.target.value})}\n        if (this.labelToIndex(event.target.id) === 3) {this.setState({valueMarechage: event.target.value})}\n\n    }\n\n    createCheckbox = (label) => (\n        <>\n            <label htmlFor={\"agri\"}>\n                <Checkbox label={label} handleCheckboxChange={this.toggleCheckbox} key={label}/>\n            </label>\n            {(this.selectedCheckboxes.has(label)) ?\n                <form onSubmit={this.handleFormSubmit}>\n                    <input type=\"number\" id={label} name=\"tentacles\" onChange={this.handleChange} min=\"1\" max=\"5\" value={this.labelToValue(label)}/>\n                    <input type=\"submit\" value=\"Valider\"/>\n                </form>\n\n                : null}\n        </>\n    )\n\n    createCheckboxes = () => (\n        this.state.items.map((label) =>\n            <div className=\"col-sm-3\">\n                {this.createCheckbox(label)}\n            </div>\n        )\n    )\n\n    render() {\n        return (\n            <section>\n                <header className=\"text-center\">\n                    <div className={StyleStrategy.header2}>\n                        Agriculteur : {this.props.x}\n                    </div>\n                </header>\n                <div className={StyleStrategy.header3}>\n                    <div className=\"row text-center\">\n                        {this.createCheckboxes()}\n                        {console.log('Activity of ' + this.props.x + ' are ' + this.getCultures())}\n                    </div>\n                </div>\n                {//console.log(this.state.values)}\n                /*<input type=\"checkbox\" name=\"choix1\" value=\"1\">glace vanille</input>\n                <label htmlFor=\"tentacles\">Number of tentacles (10-100):</label>\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                       min=\"10\" max=\"100\"/>*/}\n            </section>\n        )\n    }\n}\n\nexport default FarmerActivity;"]},"metadata":{},"sourceType":"module"}